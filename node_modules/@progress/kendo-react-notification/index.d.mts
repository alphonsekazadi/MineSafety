/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import { default as default_2 } from 'prop-types';
import { JSX } from 'react/jsx-runtime';
import * as React_2 from 'react';

/**
 * Represents the [KendoReact Notification component]({% slug overview_notification %}).
 */
declare class Notification_2 extends React_2.Component<NotificationProps> {
    /**
     * @hidden
     */
    static propTypes: {
        className: default_2.Requireable<string>;
        closable: default_2.Requireable<NonNullable<boolean | object | null | undefined>>;
        dir: default_2.Requireable<string>;
        style: default_2.Requireable<object>;
        type: default_2.Requireable<default_2.InferProps<{
            style: default_2.Requireable<string>;
            icon: default_2.Requireable<boolean>;
        }>>;
        onClose: default_2.Requireable<(...args: any[]) => any>;
    };
    /**
     * @hidden
     */
    static defaultProps: {
        closable: boolean;
        type: {
            style: string;
            icon: boolean;
        };
    };
    /**
     * @hidden
     */
    render(): JSX.Element;
}
export { Notification_2 as Notification }

/**
 * The `close` event object of the Notification.
 */
export declare interface NotificationEvent {
    /**
     * A native DOM event.
     */
    nativeEvent: Event;
    /**
     * A React [`SyntheticEvent`](https://react.dev/learn/responding-to-events).
     */
    syntheticEvent: React_2.SyntheticEvent<HTMLElement>;
    /**
     * An event target.
     */
    target: Notification_2;
}

/**
 * Represents the [KendoReact NotificationGroup component]({% slug api_notification_notificationgroup %}).
 */
export declare class NotificationGroup extends React_2.Component<NotificationGroupProps> {
    /**
     * @hidden
     */
    static propTypes: {
        className: default_2.Requireable<string>;
        style: default_2.Requireable<object>;
    };
    /**
     * @hidden
     */
    render(): JSX.Element;
}

/**
 * Represents the props of the [KendoReact NotificationGroup component]({% slug api_notification_notificationgroup %}).
 */
export declare interface NotificationGroupProps {
    /**
     * @hidden
     */
    children?: React_2.ReactNode;
    /**
     * Sets additional classes to the NotificationGroup.
     *
     * @example
     * ```jsx
     * <NotificationGroup className="custom-class" />
     * ```
     */
    className?: string;
    /**
     * The styles that are applied to the NotificationGroup.
     *
     * @example
     * ```jsx
     * <NotificationGroup style={{ backgroundColor: 'lightgray' }} />
     * ```
     */
    style?: React_2.CSSProperties;
}

/**
 * Represents the props of the [KendoReact Notification component]({% slug overview_notification %}).
 */
export declare interface NotificationProps {
    /**
     * @hidden
     */
    children?: React_2.ReactNode;
    /**
     * Sets additional classes to the Notification.
     *
     * @example
     * ```jsx
     * <Notification className="custom-class" />
     * ```
     */
    className?: string;
    /**
     * Specifies if the Notification will require a user action to hide.
     * If the property is set to `true`, the Notification renders a **Close** button.
     * If the property is set to an object, the Notification renders a **Close** button
     * by extending the default props with the provided object.
     *
     * @example
     * ```jsx
     * <Notification closable={true} />
     * <Notification closable={{ title: 'Dismiss' }} />
     * ```
     *
     * The possible values are:
     * * (Default) `false`
     * * `true`
     * * `{ title: 'Hide', ... }`
     */
    closable?: boolean | React_2.DetailedHTMLProps<React_2.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;
    /**
     * The `dir` HTML attribute, which specifies the text direction.
     *
     * @example
     * ```jsx
     * <Notification dir="rtl" />
     * ```
     */
    dir?: string;
    /**
     * The styles that are applied to the Notification.
     *
     * @example
     * ```jsx
     * <Notification style={{ backgroundColor: 'lightblue' }} />
     * ```
     */
    style?: React_2.CSSProperties;
    /**
     * The Notification type, which determines its style and icon.
     *
     * @example
     * ```jsx
     * <Notification type={{ style: 'success', icon: true }} />
     * ```
     *
     * The possible values are:
     * * `style: 'none'|'success'|'error'|'warning'|'info'`. Defaults to `none`.
     * * `icon?: 'true'|'false'`. Defaults to `true`.
     */
    type?: {
        style?: 'none' | 'success' | 'error' | 'warning' | 'info';
        icon?: boolean;
    };
    /**
     * The `close` event which will be triggered when the **Close** button is clicked.
     *
     * @example
     * ```jsx
     * <Notification onClose={(event) => console.log('Notification closed', event)} />
     * ```
     */
    onClose?: (event: NotificationEvent) => void;
}

export { }
