/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import { default as default_2 } from 'prop-types';
import { JSX } from 'react/jsx-runtime';
import * as React_2 from 'react';

export declare class Ripple extends React_2.PureComponent<RippleProps, {}> {
    /**
     * @hidden
     */
    static propTypes: {
        disabled: default_2.Requireable<boolean>;
    };
    private _element;
    private removeListeners;
    private readonly showLicenseWatermark;
    private readonly licenseMessage?;
    constructor(props: RippleProps);
    /**
     * @hidden
     */
    componentDidMount(): void;
    /**
     * @hidden
     */
    componentDidUpdate(): void;
    /**
     * @hidden
     */
    componentWillUnmount(): void;
    /**
     * @hidden
     */
    render(): JSX.Element;
    private registerListeners;
}

/**
 * Represents the KendoReact Ripple component.
 *
 * The ripple effect will show on the following elements:
 * - Buttons
 * - Checkboxes
 * - Radio buttons
 *
 * @example
 * ```jsx-no-run
 * <Ripple disabled="true">
 *      <button className="k-button"> Default Button</button>
 * </Ripple>
 * ```
 */
export declare interface RippleProps {
    /**
     * Provides an option to disable the ripple effect on the children of the component. Defaults to `false`.
     *
     * @example
     * ```jsx
     * <Ripple disabled={true}>
     *     <button className="k-button">Default Button</button>
     * </Ripple>
     * ```
     */
    disabled?: boolean;
    /**
     * @hidden
     * Specifies additional CSS classes to apply to the ripple container.
     */
    className?: string;
    /**
     * @hidden
     * Specifies the child elements of the Ripple component.
     */
    children?: any;
}

export { }
