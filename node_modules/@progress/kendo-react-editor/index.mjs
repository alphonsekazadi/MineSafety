/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import { Editor as Ho } from "./Editor.mjs";
import { EditorTools as jo } from "./tools/index.mjs";
import { EditorToolsSettings as vo } from "./config/toolsSettings.mjs";
import { EditorUtils as Fo } from "./utils/index.mjs";
import { EditorDialogs as Jo } from "./dialogs/index.mjs";
import { editorPropsKey as Wo } from "./utils/props-key.mjs";
import { Selection as e, SelectionRange as o, TextSelection as t, NodeSelection as l, AllSelection as r, EditorState as a, Plugin as n, PluginKey as i, Transaction as d, Decoration as p, DecorationSet as s, EditorView as c, Node as m, ResolvedPos as u, NodeRange as g, Fragment as C, Slice as S, ReplaceError as R, Mark as f, Schema as T, NodeType as w, MarkType as y, ContentMatch as k, DOMParser as b, DOMSerializer as x, Transform as I, Step as M, StepResult as N, joinPoint as P, canJoin as D, canSplit as E, insertPoint as B, dropPoint as h, liftTarget as K, findWrapping as A, StepMap as H, MapResult as L, Mapping as j, AddMarkStep as Q, RemoveMarkStep as v, ReplaceStep as z, ReplaceAroundStep as F, replaceStep as O, deleteSelection as J, joinBackward as U, selectNodeBackward as W, joinForward as V, selectNodeForward as q, joinUp as G, joinDown as X, lift as Y, newlineInCode as Z, exitCode as _, createParagraphNear as $, liftEmptyBlock as ee, splitBlock as oe, splitBlockKeepMarks as te, selectParentNode as le, selectAll as re, wrapIn as ae, setBlockType as ne, toggleMark as ie, autoJoin as de, chainCommands as pe, pcBaseKeymap as se, macBaseKeymap as ce, baseKeymap as me, history as ue, undo as ge, redo as Ce, undoDepth as Se, redoDepth as Re, InputRule as fe, inputRules as Te, undoInputRule as we, emDash as ye, ellipsis as ke, openDoubleQuote as be, closeDoubleQuote as xe, openSingleQuote as Ie, closeSingleQuote as Me, smartQuotes as Ne, wrappingInputRule as Pe, textblockTypeInputRule as De, keymap as Ee, keydownHandler as Be, orderedList as he, bulletList as Ke, listItem as Ae, addListNodes as He, wrapInList as Le, splitListItem as je, liftListItem as Qe, sinkListItem as ve, dropCursor as ze, gapCursor as Fe, tableEditing as Oe, fixTables as Je, fixTablesKey as Ue, cellAround as We, isInTable as Ve, selectionCell as qe, moveCellForward as Ge, inSameTable as Xe, findCell as Ye, colCount as Ze, nextCell as _e, removeColSpan as $e, addColSpan as eo, columnIsHeader as oo, tableNodes as to, tableNodeTypes as lo, CellSelection as ro, TableMap as ao, tableEditingKey as no, columnResizing as io, columnResizingPluginKey as po, updateColumnsOnResize as so, selectedRect as co, addColumn as mo, addColumnBefore as uo, addColumnAfter as go, deleteColumn as Co, rowIsHeader as So, addRow as Ro, addRowBefore as fo, addRowAfter as To, deleteRow as wo, mergeCells as yo, splitCell as ko, splitCellWithType as bo, setCellAttr as xo, toggleHeader as Io, toggleHeaderRow as Mo, toggleHeaderColumn as No, toggleHeaderCell as Po, goToNextCell as Do, deleteTable as Eo } from "@progress/kendo-editor-common";
import { getHtml as qo, marks as Go, nodes as Xo, parseContent as Yo } from "@progress/kendo-editor-common";
const ho = {
  // prosemirror-state
  Selection: e,
  SelectionRange: o,
  TextSelection: t,
  NodeSelection: l,
  AllSelection: r,
  EditorState: a,
  Plugin: n,
  PluginKey: i,
  Transaction: d,
  // prosemirror-view
  Decoration: p,
  DecorationSet: s,
  EditorView: c,
  // prosemirror-model
  Node: m,
  ResolvedPos: u,
  NodeRange: g,
  Fragment: C,
  Slice: S,
  ReplaceError: R,
  Mark: f,
  Schema: T,
  NodeType: w,
  MarkType: y,
  ContentMatch: k,
  DOMParser: b,
  DOMSerializer: x,
  // prosemirror-transform
  Transform: I,
  Step: M,
  StepResult: N,
  joinPoint: P,
  canJoin: D,
  canSplit: E,
  insertPoint: B,
  dropPoint: h,
  liftTarget: K,
  findWrapping: A,
  StepMap: H,
  MapResult: L,
  Mapping: j,
  AddMarkStep: Q,
  RemoveMarkStep: v,
  ReplaceStep: z,
  ReplaceAroundStep: F,
  replaceStep: O,
  // prosemirror-commands
  deleteSelection: J,
  joinBackward: U,
  selectNodeBackward: W,
  joinForward: V,
  selectNodeForward: q,
  joinUp: G,
  joinDown: X,
  lift: Y,
  newlineInCode: Z,
  exitCode: _,
  createParagraphNear: $,
  liftEmptyBlock: ee,
  splitBlock: oe,
  splitBlockKeepMarks: te,
  selectParentNode: le,
  selectAll: re,
  wrapIn: ae,
  setBlockType: ne,
  toggleMark: ie,
  autoJoin: de,
  chainCommands: pe,
  pcBaseKeymap: se,
  macBaseKeymap: ce,
  baseKeymap: me,
  // prosemirror-history
  history: ue,
  undo: ge,
  redo: Ce,
  undoDepth: Se,
  redoDepth: Re,
  // prosemirror-inputrules
  InputRule: fe,
  inputRules: Te,
  undoInputRule: we,
  emDash: ye,
  ellipsis: ke,
  openDoubleQuote: be,
  closeDoubleQuote: xe,
  openSingleQuote: Ie,
  closeSingleQuote: Me,
  smartQuotes: Ne,
  wrappingInputRule: Pe,
  textblockTypeInputRule: De,
  // prosemirror-keymap
  keymap: Ee,
  keydownHandler: Be,
  // prosemirror-schema-list
  orderedList: he,
  bulletList: Ke,
  listItem: Ae,
  addListNodes: He,
  wrapInList: Le,
  splitListItem: je,
  liftListItem: Qe,
  sinkListItem: ve,
  // prosemirror-dropcursor
  dropCursor: ze,
  // prosemirror-gapcursor
  gapCursor: Fe,
  // prosemirror-tables
  tableEditing: Oe,
  fixTables: Je,
  fixTablesKey: Ue,
  cellAround: We,
  isInTable: Ve,
  selectionCell: qe,
  moveCellForward: Ge,
  inSameTable: Xe,
  findCell: Ye,
  colCount: Ze,
  nextCell: _e,
  removeColSpan: $e,
  addColSpan: eo,
  columnIsHeader: oo,
  tableNodes: to,
  tableNodeTypes: lo,
  CellSelection: ro,
  TableMap: ao,
  tableEditingKey: no,
  columnResizing: io,
  columnResizingPluginKey: po,
  updateColumnsOnResize: so,
  selectedRect: co,
  addColumn: mo,
  addColumnBefore: uo,
  addColumnAfter: go,
  deleteColumn: Co,
  rowIsHeader: So,
  addRow: Ro,
  addRowBefore: fo,
  addRowAfter: To,
  deleteRow: wo,
  mergeCells: yo,
  splitCell: ko,
  splitCellWithType: bo,
  setCellAttr: xo,
  toggleHeader: Io,
  toggleHeaderRow: Mo,
  toggleHeaderColumn: No,
  toggleHeaderCell: Po,
  goToNextCell: Do,
  deleteTable: Eo
};
export {
  Ho as Editor,
  Jo as EditorDialogs,
  jo as EditorTools,
  vo as EditorToolsSettings,
  Fo as EditorUtils,
  ho as ProseMirror,
  Wo as editorPropsKey,
  qo as getHtml,
  Go as marks,
  Xo as nodes,
  Yo as parseContent
};
