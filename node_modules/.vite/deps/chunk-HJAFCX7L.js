import {
  caretAltDownIcon,
  caretAltLeftIcon,
  caretAltRightIcon,
  microphoneOutlineIcon,
  moreHorizontalIcon,
  stopSmIcon,
  xCircleIcon
} from "./chunk-IX5JQNBR.js";
import {
  F,
  G,
  I,
  M2 as M,
  P,
  P4 as P2,
  a3 as a,
  a4 as a2,
  a5 as a3,
  a8 as a4,
  d5 as d,
  e,
  e2,
  e5 as e3,
  h2 as h,
  i4 as i,
  l5 as l,
  m,
  n,
  n4 as n2,
  n7 as n3,
  o8 as o,
  r,
  require_prop_types,
  s4 as s,
  s7 as s2,
  t,
  u2 as u,
  v,
  v3 as v2,
  w2 as w,
  x2 as x
} from "./chunk-TPJZDNMR.js";
import {
  require_react_dom
} from "./chunk-PJEEZAML.js";
import {
  require_react
} from "./chunk-DRWLMN53.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/@progress/kendo-react-buttons/Button.mjs
var e4 = __toESM(require_react(), 1);
var import_prop_types = __toESM(require_prop_types(), 1);
function Q({ imageUrl: a11, name: d3, iconClass: s15, svgIcon: n14, imageAlt: u5, buttonClasses: r10, iconSize: o15 }) {
  return a11 ? e4.createElement(
    "img",
    {
      role: "presentation",
      className: n2(G.icon({ c: r10 })),
      alt: u5,
      src: a11
    }
  ) : d3 || n14 ? e4.createElement(
    v2,
    {
      className: n2(G.icon({ c: r10 })),
      name: d3,
      icon: n14,
      size: o15
    }
  ) : s15 ? e4.createElement("span", { role: "presentation", className: n2(G.icon({ c: r10 }), s15) }) : null;
}
var k = e4.forwardRef((a11, d3) => {
  const {
    children: s15,
    togglable: n14,
    dir: u5,
    disabled: r10,
    selected: o15,
    icon: v4,
    iconClass: h3,
    svgIcon: y3,
    imageUrl: b3,
    imageAlt: A,
    className: B,
    startIcon: C2,
    endIcon: E2,
    onClick: N2,
    size: P3 = g.size,
    rounded: O = g.rounded,
    fillMode: S = g.fillMode,
    themeColor: T2 = g.themeColor,
    ariaPressed: w2,
    iconSize: x4,
    ...U2
  } = a11, H = () => {
    n14 && o15 === void 0 && (m5.current = !l5, R(!l5));
  }, K = (p8) => {
    H(), N2 && N2.call(void 0, p8);
  }, m5 = e4.useRef(void 0), I3 = e4.useRef(null), [l5, R] = e4.useState(n14 === true && o15 === true), W = y3 !== void 0 || v4 !== void 0 || h3 !== void 0 || b3 !== void 0, j = s15 !== void 0, q = n3(), z2 = a11.unstyled || q, f3 = z2 && z2.uButton;
  e4.useImperativeHandle(d3, () => ({
    element: I3.current,
    selected: m5.current !== void 0 ? m5.current : l5
  })), e4.useMemo(() => {
    n14 && o15 !== void 0 && o15 !== l5 && R(o15);
  }, [n14, o15]), e4.useEffect(() => {
    m5.current = void 0;
  }, [l5]);
  const D = Q({
    name: v4,
    svgIcon: y3,
    iconClass: h3,
    imageUrl: b3,
    imageAlt: A,
    buttonClasses: f3,
    iconSize: x4
  }), M2 = (p8) => e4.cloneElement(p8, {
    className: n2(G.icon({ c: f3 }), p8.props.className)
  }), F2 = e4.useMemo(() => n14 ? l5 : w2 || void 0, []);
  return e4.createElement(
    "button",
    {
      ref: I3,
      "aria-pressed": F2,
      ...U2,
      dir: u5,
      disabled: r10,
      onClick: K,
      className: n2(
        G.wrapper({
          c: f3,
          isRtl: u5 === "rtl",
          selected: l5,
          disabled: r10,
          size: P3,
          fillMode: S,
          rounded: O,
          themeColor: T2,
          iconButton: !j && W
        }),
        B
      )
    },
    C2 && M2(C2),
    D,
    s15 && e4.createElement("span", { className: n2(G.text({ c: f3 })) }, s15),
    E2 && M2(E2)
  );
});
var g = {
  togglable: false,
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  themeColor: "base"
};
k.displayName = "KendoReactButton";
k.propTypes = {
  children: import_prop_types.default.node,
  selected: import_prop_types.default.bool,
  togglable: import_prop_types.default.bool,
  icon: import_prop_types.default.string,
  svgIcon: r,
  iconClass: import_prop_types.default.string,
  imageUrl: import_prop_types.default.string,
  imageAlt: import_prop_types.default.string,
  size: import_prop_types.default.oneOf([null, "small", "medium", "large"]),
  rounded: import_prop_types.default.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: import_prop_types.default.oneOf([null, "flat", "link", "outline", "solid", "clear"]),
  // eslint-disable-next-line max-len
  themeColor: import_prop_types.default.oneOf([
    null,
    "base",
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
    "inverse"
  ])
};

// node_modules/@progress/kendo-react-buttons/ButtonGroup.mjs
var e5 = __toESM(require_react(), 1);
var import_prop_types2 = __toESM(require_prop_types(), 1);
var T = (i10) => {
  const { children: B, className: C2, dir: c3, disabled: p8, width: r10 } = i10, w2 = n3(), d3 = i10.unstyled || w2, m5 = d3 && d3.uButtonGroup, E2 = (t21) => {
    const l5 = e5.Children.count(t21), a11 = c3 !== void 0 ? c3 === "rtl" : u5.current && getComputedStyle(u5.current).direction === "rtl" || false;
    return e5.Children.map(t21, (o15, n14) => {
      if (e5.isValidElement(o15)) {
        const b3 = n14 === l5 - 1, f3 = a11, O = n2(
          o15.props.className,
          P2.position({
            c: m5,
            start: f3 ? b3 : n14 === 0,
            end: f3 ? n14 === 0 : b3
          })
        );
        return G3(o15, O);
      }
      return o15;
    });
  }, G3 = (t21, l5) => {
    const a11 = { ...r10 ? { width: r10 } : {}, ...t21.props.style || {} }, o15 = p8 || t21.props.disabled, n14 = {
      ...t21.props,
      ...l5 ? { className: l5 } : {},
      ...Object.keys(a11).length ? { style: a11 } : {},
      ...o15 !== void 0 ? { disabled: o15 } : {}
    };
    return e5.Children.count(t21.props.children) > 0 ? e5.cloneElement(t21, n14, t21.props.children) : e5.cloneElement(t21, n14);
  }, u5 = e5.useRef(null), R = E2(B), y3 = n2(
    P2.wrapper({
      c: m5,
      stretched: !!r10,
      disabled: p8
    }),
    C2
  ), v4 = {
    className: y3,
    style: { width: `${r10}` },
    dir: c3,
    // Accessibility properties
    role: "group",
    "aria-disabled": p8
  };
  return e5.createElement("div", { ref: u5, ...v4, className: y3 }, R);
};
T.propTypes = {
  children: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.element), import_prop_types2.default.element]),
  className: import_prop_types2.default.string,
  disabled: import_prop_types2.default.bool,
  width: import_prop_types2.default.string,
  dir: import_prop_types2.default.string
};

// node_modules/@progress/kendo-react-buttons/ListButton/SplitButton.mjs
var p2 = __toESM(require_react(), 1);
var import_prop_types5 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-buttons/ListButton/ButtonItem.mjs
var t3 = __toESM(require_react(), 1);
var k2 = (e20) => {
  const I3 = n3(), a11 = e20.unstyled || I3, n14 = a11 && a11.uDropDownButton, o15 = t3.useCallback(
    (s15) => {
      e20.onClick(s15, e20.index);
    },
    [e20]
  ), d3 = e20.dataItem.render || e20.item || (e20.item === void 0 ? e20.render : null), m5 = e20.dataItem.text !== void 0 ? e20.dataItem.text : e20.textField ? e20.dataItem[e20.textField] : e20.dataItem, l5 = t3.createElement(
    "li",
    {
      id: e20.id,
      className: n2(
        F.li({
          c: n14,
          focused: e20.focused
        }),
        e20.className
      ),
      tabIndex: -1,
      onClick: o15,
      onMouseDown: e20.onDown,
      onPointerDown: e20.onDown,
      role: "menuitem",
      "aria-disabled": e20.dataItem.disabled || void 0
    },
    t3.createElement(
      "span",
      {
        tabIndex: -1,
        className: n2(
          F.link({
            c: n14,
            selected: e20.dataItem.selected,
            disabled: e20.dataItem.disabled
          })
        ),
        key: "icon"
      },
      d3 ? t3.createElement(d3, { item: e20.dataItem, itemIndex: e20.index }) : t3.createElement(t3.Fragment, null, (e20.dataItem.icon || e20.dataItem.iconClass || e20.dataItem.svgIcon) && t3.createElement(
        v2,
        {
          className: e20.dataItem.iconClass,
          name: e20.dataItem.icon,
          icon: e20.dataItem.svgIcon
        }
      ), e20.dataItem.imageUrl && t3.createElement("img", { role: "presentation", alt: "", src: e20.dataItem.imageUrl, className: "k-icon" }), m5 && t3.createElement("span", { className: "k-menu-link-text" }, m5))
    )
  );
  return e20.item !== void 0 && e20.render !== void 0 ? e20.render.call(void 0, l5, e20) : l5;
};
k2.displayName = "KendoReactButtonItem";

// node_modules/@progress/kendo-react-buttons/ListButton/SplitButtonItem.mjs
var n4 = __toESM(require_react(), 1);
var import_prop_types3 = __toESM(require_prop_types(), 1);
var s4 = class s5 extends n4.Component {
  /**
   * @hidden
   */
  render() {
    return null;
  }
};
s4.propTypes = {
  text: import_prop_types3.default.string,
  icon: import_prop_types3.default.string,
  iconClass: import_prop_types3.default.string,
  imageUrl: import_prop_types3.default.string,
  disabled: import_prop_types3.default.bool,
  render: import_prop_types3.default.any
};
var e6 = s4;

// node_modules/@progress/kendo-react-buttons/ListButton/utils/navigation.mjs
var i2 = (n14, s15, t21, r10) => {
  if (t21)
    return n14;
  const a11 = Math.min(r10 - 1, Math.max(0, n14));
  switch (s15) {
    case e2.enter:
    case e2.space:
    case e2.esc:
      return -1;
    case e2.up:
    case e2.left:
      return a11 - 1 < 0 ? r10 - 1 : a11 - 1;
    case e2.down:
    case e2.right:
      return a11 + 1 >= r10 ? 0 : a11 + 1;
    case e2.home:
      return 0;
    case e2.end:
      return r10 - 1;
    default:
      return n14;
  }
};

// node_modules/@progress/kendo-react-popup/Popup.mjs
var i3 = __toESM(require_react(), 1);
var we = __toESM(require_react_dom(), 1);
var import_prop_types4 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-popup/animation.mjs
var p = (i10, s15, t21) => {
  i10.style.transitionDuration = "", s15 && i10.classList.remove(...s15.split(" ")), t21 && i10.classList.remove(...t21.split(" "));
};
var y = typeof window != "undefined" && /Firefox/.test(window.navigator.userAgent);
var x2 = (i10, s15, t21, r10, d3, f3) => {
  if (t21 === 0)
    return d3();
  const o15 = n2(l.slide({ direction: s15, type: r10, c: f3 })), a11 = n2(l.slideActive({ direction: s15, type: r10, c: f3 })), c3 = (n14) => {
    n14.target === i10 && (i10.removeEventListener("transitionend", c3), p(i10, o15, a11), r10 === "exit" ? i10.style.display = "none" : i10.style.display = "", d3());
  };
  i10.addEventListener("transitionend", c3);
  const u5 = i10.ownerDocument;
  if (!u5)
    return;
  const e20 = u5.defaultView;
  if (!e20)
    return;
  const l5 = () => {
    p(i10, o15, a11), r10 === "enter" && (i10.style.display = ""), o15 && i10.classList.add(...o15.split(" ").filter((n14) => n14)), e20.requestAnimationFrame(() => {
      i10.style.transitionDuration = t21 + "ms", i10.classList.add(...a11.split(" ").filter((n14) => n14));
    });
  };
  y ? e20.requestAnimationFrame(l5) : l5();
};

// node_modules/@progress/kendo-popup-common/dist/es/align-point.js
var align_point_default = {
  "bottom": "bottom",
  "center": "center",
  "middle": "middle",
  "left": "left",
  "right": "right",
  "top": "top"
};

// node_modules/@progress/kendo-popup-common/dist/es/align.js
var align = function(options) {
  var anchorRect = options.anchorRect;
  var anchorAlign = options.anchorAlign;
  var elementRect = options.elementRect;
  var elementAlign = options.elementAlign;
  var margin = options.margin;
  if (margin === void 0) margin = {};
  var anchorHorizontal = anchorAlign.horizontal;
  var anchorVertical = anchorAlign.vertical;
  var elementHorizontal = elementAlign.horizontal;
  var elementVertical = elementAlign.vertical;
  var horizontalMargin = margin.horizontal || 0;
  var verticalMargin = margin.vertical || 0;
  var top = anchorRect.top;
  var left = anchorRect.left;
  if (anchorVertical === align_point_default.bottom) {
    top += anchorRect.height;
  }
  if (anchorVertical === align_point_default.center || anchorVertical === align_point_default.middle) {
    top += Math.round(anchorRect.height / 2);
  }
  if (elementVertical === align_point_default.bottom) {
    top -= elementRect.height;
    verticalMargin *= -1;
  }
  if (elementVertical === align_point_default.center || elementVertical === align_point_default.middle) {
    top -= Math.round(elementRect.height / 2);
    verticalMargin *= -1;
  }
  if (anchorHorizontal === align_point_default.right) {
    left += anchorRect.width;
  }
  if (anchorHorizontal === align_point_default.center || anchorHorizontal === align_point_default.middle) {
    left += Math.round(anchorRect.width / 2);
  }
  if (elementHorizontal === align_point_default.right) {
    left -= elementRect.width;
    horizontalMargin *= -1;
  }
  if (elementHorizontal === align_point_default.center || elementHorizontal === align_point_default.middle) {
    left -= Math.round(elementRect.width / 2);
    horizontalMargin *= -1;
  }
  return {
    top: top + verticalMargin,
    left: left + horizontalMargin
  };
};
var align_default = align;

// node_modules/@progress/kendo-popup-common/dist/es/add-scroll.js
function addScroll(rect, scroll) {
  return {
    top: rect.top + scroll.y,
    left: rect.left + scroll.x,
    height: rect.height,
    width: rect.width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/owner-document.js
function ownerDocument(element) {
  return element.ownerDocument || element.document || element;
}

// node_modules/@progress/kendo-popup-common/dist/es/window.js
var getWindow = function(element) {
  return ownerDocument(element).defaultView;
};
var window_default = getWindow;

// node_modules/@progress/kendo-popup-common/dist/es/document.js
var getDocument = function(element) {
  return ownerDocument(element).documentElement;
};
var document_default = getDocument;

// node_modules/@progress/kendo-popup-common/dist/es/scrollbar-width.js
var cachedWidth = 0;
function scrollbarWidth() {
  if (!cachedWidth && typeof document !== "undefined") {
    var div = document.createElement("div");
    div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
    div.innerHTML = "&nbsp;";
    document.body.appendChild(div);
    cachedWidth = div.offsetWidth - div.scrollWidth;
    document.body.removeChild(div);
  }
  return cachedWidth;
}

// node_modules/@progress/kendo-popup-common/dist/es/window-viewport.js
function windowViewport(element) {
  var win = window_default(element);
  var document2 = document_default(element);
  var result = {
    height: win.innerHeight,
    width: win.innerWidth
  };
  if (document2.scrollHeight - document2.clientHeight > 0) {
    result.width -= scrollbarWidth();
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/bounding-offset.js
var boundingOffset = function(element) {
  if (!element.getBoundingClientRect) {
    var viewport = windowViewport(element);
    return {
      bottom: viewport.height,
      left: 0,
      right: viewport.width,
      top: 0
    };
  }
  var ref = element.getBoundingClientRect();
  var bottom = ref.bottom;
  var left = ref.left;
  var right = ref.right;
  var top = ref.top;
  return {
    bottom,
    left,
    right,
    top
  };
};
var bounding_offset_default = boundingOffset;

// node_modules/@progress/kendo-popup-common/dist/es/offset-parent.js
var offsetParent = function(element) {
  var offsetParent2 = element.offsetParent;
  while (offsetParent2 && offsetParent2.style.position === "static") {
    offsetParent2 = offsetParent2.offsetParent;
  }
  return offsetParent2 || document_default(element);
};
var offset_parent_default = offsetParent;

// node_modules/@progress/kendo-popup-common/dist/es/offset.js
var rectOfHiddenElement = function(element) {
  var ref = element.style;
  var display = ref.display;
  var left = ref.left;
  var position3 = ref.position;
  element.style.display = "";
  element.style.left = "-10000px";
  element.style.position = "absolute";
  var rect = element.getBoundingClientRect();
  element.style.display = display;
  element.style.left = left;
  element.style.position = position3;
  return rect;
};
var offset = function(element) {
  var rect = element.getBoundingClientRect();
  var left = rect.left;
  var top = rect.top;
  if (!rect.height && !rect.width) {
    rect = rectOfHiddenElement(element);
  }
  return {
    top,
    left,
    height: rect.height,
    width: rect.width
  };
};
var offset_default = offset;

// node_modules/@progress/kendo-popup-common/dist/es/parents.js
function parents_default(element, until) {
  var result = [];
  var next = element.parentNode;
  while (next) {
    result.push(next);
    if (next === until) {
      break;
    }
    next = next.parentNode;
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/scroll-position.js
function scrollPosition(element) {
  var documentElement = document_default(element);
  var win = window_default(element);
  return {
    x: win.pageXOffset || documentElement.scrollLeft || 0,
    y: win.pageYOffset || documentElement.scrollTop || 0
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/element-scroll-position.js
function element_scroll_position_default(element) {
  if (element === (element.ownerDocument || {}).body) {
    return scrollPosition(element);
  }
  return {
    x: element.scrollLeft,
    y: element.scrollTop
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/parent-scroll-position.js
function parentScrollPosition(element) {
  var parent = offset_parent_default(element);
  return parent ? element_scroll_position_default(parent) : { x: 0, y: 0 };
}

// node_modules/@progress/kendo-popup-common/dist/es/position.js
var position = function(element, parent) {
  var win = window_default(element);
  var elementStyles = win.getComputedStyle(element);
  var offset3 = offset_default(element);
  var parentElement = parent || offset_parent_default(element);
  var ownerDocument2 = element.ownerDocument;
  var useRelative = parentElement !== ownerDocument2.body && parentElement !== ownerDocument2.documentElement;
  var parentOffset = { top: 0, left: 0 };
  if (elementStyles.position !== "fixed" && useRelative) {
    var parentStyles = win.getComputedStyle(parentElement);
    parentOffset = offset_default(parentElement);
    parentOffset.top += parseInt(parentStyles.borderTopWidth, 10);
    parentOffset.left += parseInt(parentStyles.borderLeftWidth, 10);
  }
  return {
    top: offset3.top - parentOffset.top,
    left: offset3.left - parentOffset.left,
    height: offset3.height,
    width: offset3.width
  };
};
var position_default = position;

// node_modules/@progress/kendo-popup-common/dist/es/offset-parent-scroll-position.js
function offset_parent_scroll_position_default(offsetParentElement, element) {
  return (
    // eslint-disable-line no-arrow-condition
    offsetParentElement ? element_scroll_position_default(offsetParentElement) : parentScrollPosition(element)
  );
}

// node_modules/@progress/kendo-popup-common/dist/es/position-with-scroll.js
function position_with_scroll_default(element, parent, scale) {
  if (scale === void 0) scale = 1;
  var offsetParentElement = parent ? offset_parent_default(parent) : null;
  var ref = position_default(element, offsetParentElement);
  var top = ref.top;
  var left = ref.left;
  var height = ref.height;
  var width = ref.width;
  var ref$1 = offset_parent_scroll_position_default(offsetParentElement, element);
  var x4 = ref$1.x;
  var y3 = ref$1.y;
  var ownerDocument2 = element.ownerDocument;
  var positionScale = offsetParentElement === ownerDocument2.body || offsetParentElement === ownerDocument2.documentElement ? 1 : scale;
  return {
    top: top + y3 * positionScale,
    left: left + x4 * positionScale,
    height,
    width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/remove-scroll.js
function removeScroll(rect, scroll) {
  return {
    top: rect.top - scroll.y,
    left: rect.left - scroll.x,
    height: rect.height,
    width: rect.width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/collision.js
var collision_default = {
  "fit": "fit",
  "flip": "flip",
  "none": "none"
};

// node_modules/@progress/kendo-popup-common/dist/es/restrict-to-view.js
var fit = function(position3, size, viewPortSize) {
  var output = 0;
  if (position3 + size > viewPortSize) {
    output = viewPortSize - (position3 + size);
  }
  if (position3 < 0) {
    output = -position3;
  }
  return output;
};
var flip = function(ref) {
  var offset3 = ref.offset;
  var size = ref.size;
  var anchorSize = ref.anchorSize;
  var viewPortSize = ref.viewPortSize;
  var anchorAlignPoint = ref.anchorAlignPoint;
  var elementAlignPoint = ref.elementAlignPoint;
  var margin = ref.margin;
  var output = 0;
  var isPositionCentered = elementAlignPoint === align_point_default.center || elementAlignPoint === align_point_default.middle;
  var isOriginCentered = anchorAlignPoint === align_point_default.center || anchorAlignPoint === align_point_default.middle;
  var marginToAdd = 2 * margin;
  if (elementAlignPoint !== anchorAlignPoint && !isPositionCentered && !isOriginCentered) {
    var isBeforeAnchor = anchorAlignPoint === align_point_default.top || anchorAlignPoint === align_point_default.left;
    if (offset3 < 0 && isBeforeAnchor) {
      output = size + anchorSize + marginToAdd;
      if (offset3 + output + size > viewPortSize) {
        output = 0;
      }
    } else if (offset3 >= 0 && !isBeforeAnchor) {
      if (offset3 + size > viewPortSize) {
        output += -(anchorSize + size + marginToAdd);
      }
      if (offset3 + output < 0) {
        output = 0;
      }
    }
  }
  return output;
};
var restrictToView = function(options) {
  var anchorRect = options.anchorRect;
  var anchorAlign = options.anchorAlign;
  var elementRect = options.elementRect;
  var elementAlign = options.elementAlign;
  var collisions = options.collisions;
  var viewPort = options.viewPort;
  var margin = options.margin;
  if (margin === void 0) margin = {};
  var elementTop = elementRect.top;
  var elementLeft = elementRect.left;
  var elementHeight = elementRect.height;
  var elementWidth = elementRect.width;
  var viewPortHeight = viewPort.height;
  var viewPortWidth = viewPort.width;
  var horizontalMargin = margin.horizontal || 0;
  var verticalMargin = margin.vertical || 0;
  var left = 0;
  var top = 0;
  var isVerticalFit = collisions.vertical === collision_default.fit;
  var isHorizontalFit = collisions.horizontal === collision_default.fit;
  var isVerticalFlip = collisions.vertical === collision_default.flip;
  var isHorizontalFlip = collisions.horizontal === collision_default.flip;
  if (isVerticalFit) {
    top += fit(elementTop, elementHeight, viewPortHeight);
  }
  if (isHorizontalFit) {
    left += fit(elementLeft, elementWidth, viewPortWidth);
  }
  if (isVerticalFlip) {
    top += flip({
      margin: verticalMargin,
      offset: elementTop,
      size: elementHeight,
      anchorSize: anchorRect.height,
      viewPortSize: viewPortHeight,
      anchorAlignPoint: anchorAlign.vertical,
      elementAlignPoint: elementAlign.vertical
    });
  }
  if (isHorizontalFlip) {
    left += flip({
      margin: horizontalMargin,
      offset: elementLeft,
      size: elementWidth,
      anchorSize: anchorRect.width,
      viewPortSize: viewPortWidth,
      anchorAlignPoint: anchorAlign.horizontal,
      elementAlignPoint: elementAlign.horizontal
    });
  }
  var flippedVertical = isVerticalFlip && top !== 0;
  var flippedHorizontal = isHorizontalFlip && left !== 0;
  var fittedVertical = isVerticalFit && top !== 0;
  var fittedHorizontal = isHorizontalFit && left !== 0;
  return {
    flipped: flippedHorizontal || flippedVertical,
    fitted: fittedVertical || fittedHorizontal,
    flip: {
      horizontal: flippedHorizontal,
      vertical: flippedVertical
    },
    fit: {
      horizontal: fittedHorizontal,
      vertical: fittedVertical
    },
    offset: {
      left,
      top
    }
  };
};
var restrict_to_view_default = restrictToView;

// node_modules/@progress/kendo-popup-common/dist/es/siblings.js
function siblings_default(element) {
  var result = [];
  var sibling = element.parentNode.firstElementChild;
  while (sibling) {
    if (sibling !== element) {
      result.push(sibling);
    }
    sibling = sibling.nextElementSibling;
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/sibling-container.js
function sibling_container_default(anchor, container) {
  var parentElements = parents_default(anchor);
  var containerElement = container;
  var siblingElements;
  var result;
  while (containerElement) {
    siblingElements = siblings_default(containerElement);
    result = parentElements.reduce(
      function(list, p8) {
        return list.concat(siblingElements.filter(function(s15) {
          return s15 === p8;
        }));
      },
      []
    )[0];
    if (result) {
      break;
    }
    containerElement = containerElement.parentElement;
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/utils.js
var eitherRect = function(rect, offset3) {
  if (!rect) {
    return { height: 0, left: offset3.left, top: offset3.top, width: 0 };
  }
  return rect;
};
var scaleRect = function(rect, scale) {
  if (!rect || scale === 1) {
    return rect;
  }
  return {
    height: rect.height / scale,
    left: rect.left / scale,
    top: rect.top / scale,
    width: rect.width / scale
  };
};
var removeStackingOffset = function(rect, stackingOffset) {
  if (!stackingOffset) {
    return rect;
  }
  var result = {
    height: rect.height,
    left: rect.left - stackingOffset.left,
    top: rect.top - stackingOffset.top,
    width: rect.width
  };
  return result;
};
function memoize(fun) {
  var result;
  var called = false;
  return function() {
    var args = [], len = arguments.length;
    while (len--) args[len] = arguments[len];
    if (called) {
      return result;
    }
    result = fun.apply(void 0, args);
    called = true;
    return result;
  };
}
var hasRelativeStackingContext = memoize(function(elementSource) {
  if (!canUseDOM()) {
    return false;
  }
  var currentDocument = elementSource ? elementSource.ownerDocument : document;
  if (!currentDocument || !currentDocument.body) {
    return false;
  }
  var top = 10;
  var parent = currentDocument.createElement("div");
  parent.style.transform = "matrix(10, 0, 0, 10, 0, 0)";
  parent.innerHTML = '<div style="position: fixed; top: ' + top + 'px;">child</div>';
  currentDocument.body.appendChild(parent);
  var isDifferent = parent.children[0].getBoundingClientRect().top !== top;
  currentDocument.body.removeChild(parent);
  return isDifferent;
});
var canUseDOM = function() {
  return Boolean(
    // from fbjs
    typeof window !== "undefined" && window.document && window.document.createElement
  );
};
var utils = {
  eitherRect,
  scaleRect,
  removeStackingOffset,
  hasRelativeStackingContext,
  canUseDOM
};
var utils_default = utils;

// node_modules/@progress/kendo-popup-common/dist/es/dom-utils.js
var STYLES = [
  "font-size",
  "font-family",
  "font-stretch",
  "font-style",
  "font-weight",
  "line-height"
];
var addOffset = function(current, addition) {
  return {
    left: current.left + addition.left,
    top: current.top + addition.top
  };
};
var getWindow2 = function() {
  return utils_default.canUseDOM() ? window : null;
};
var getFontStyles = function(el) {
  var window2 = getWindow2();
  if (!window2 || !el) {
    return [];
  }
  var computedStyles = window2.getComputedStyle(el);
  return STYLES.map(function(font) {
    return { key: font, value: computedStyles[font] };
  });
};
var hasOffsetParent = function(el) {
  if (!el) {
    return false;
  }
  return Boolean(el.offsetParent);
};
var offset2 = function(el) {
  if (!el) {
    return null;
  }
  return offset_default(el);
};
var offsetAtPoint = function(element, currentLocation) {
  if (!element) {
    return null;
  }
  var ref = element.style;
  var left = ref.left;
  var top = ref.top;
  var transition = ref.transition;
  element.style.transition = "none";
  element.style.left = currentLocation.left + "px";
  element.style.top = currentLocation.top + "px";
  var currentOffset = offset_default(element);
  element.style.left = left;
  element.style.top = top;
  element.offsetHeight;
  element.style.transition = transition;
  return currentOffset;
};
var position2 = function(element, popupElement, scale) {
  if (!element || !popupElement) {
    return null;
  }
  var currentScale = scale || 1;
  return position_with_scroll_default(element, popupElement, currentScale);
};
var OVERFLOW_REGEXP = /auto|scroll/;
var overflowElementStyle = function(element) {
  return "" + element.style.overflow + element.style.overflowX + element.style.overflowY;
};
var overflowComputedStyle = function(element) {
  var styles = window.getComputedStyle(element);
  return "" + styles.overflow + styles.overflowX + styles.overflowY;
};
var overflowStyle = function(element) {
  return overflowElementStyle(element) || overflowComputedStyle(element);
};
var scrollableParents = function(element) {
  var parentElements = [];
  if (!utils_default.canUseDOM()) {
    return parentElements;
  }
  var parent = element.parentElement;
  while (parent) {
    if (OVERFLOW_REGEXP.test(overflowStyle(parent)) || parent.hasAttribute("data-scrollable")) {
      parentElements.push(parent);
    }
    parent = parent.parentElement;
  }
  parentElements.push(window);
  return parentElements;
};
var getRelativeContextElement = function(el) {
  if (!el || !utils_default.hasRelativeStackingContext()) {
    return null;
  }
  var parent = el.parentElement;
  while (parent) {
    if (window.getComputedStyle(parent).transform !== "none") {
      return parent;
    }
    parent = parent.parentElement;
  }
  return null;
};
var stackingElementOffset = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return null;
  }
  return offset_default(relativeContextElement);
};
var stackingElementScroll = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return { x: 0, y: 0 };
  }
  return {
    x: relativeContextElement.scrollLeft,
    y: relativeContextElement.scrollTop
  };
};
var stackingElementViewPort = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return null;
  }
  return {
    height: relativeContextElement.scrollHeight,
    width: relativeContextElement.scrollWidth
  };
};
var useRelativePosition = function(el) {
  return Boolean(getRelativeContextElement(el));
};
var zoomLevel = function() {
  if (!utils_default.canUseDOM()) {
    return 1;
  }
  return parseFloat((document.documentElement.clientWidth / window.innerWidth).toFixed(2)) || 1;
};
var isZoomed = function() {
  return zoomLevel() > 1;
};
var zIndex = function(anchor, container) {
  if (!anchor || !utils_default.canUseDOM()) {
    return null;
  }
  var sibling = sibling_container_default(anchor, container);
  if (!sibling) {
    return null;
  }
  var result = [anchor].concat(parents_default(anchor, sibling)).reduce(
    function(index, p8) {
      var zIndexStyle = p8.style.zIndex || window.getComputedStyle(p8).zIndex;
      var current = parseInt(zIndexStyle, 10);
      return current > index ? current : index;
    },
    0
  );
  return result ? result + 1 : null;
};
var domUtils = {
  addOffset,
  addScroll,
  align: align_default,
  boundingOffset: bounding_offset_default,
  getFontStyles,
  getWindow: getWindow2,
  hasOffsetParent,
  offset: offset2,
  offsetAtPoint,
  position: position2,
  removeScroll,
  restrictToView: restrict_to_view_default,
  scrollPosition,
  scrollableParents,
  getRelativeContextElement,
  stackingElementOffset,
  stackingElementScroll,
  stackingElementViewPort,
  useRelativePosition,
  windowViewPort: windowViewport,
  zoomLevel,
  isZoomed,
  zIndex
};
var dom_utils_default = domUtils;

// node_modules/@progress/kendo-popup-common/dist/es/align-element.js
var absoluteRect = function(anchor, element, offset3, scale) {
  var scrollPos = elementScrollPosition(anchor, element);
  var rect = utils_default.eitherRect(dom_utils_default.offset(anchor), offset3);
  var stackScale = 2 * scale;
  var stackScroll = dom_utils_default.stackingElementScroll(element);
  if (scale !== 1 && stackScroll) {
    stackScroll.x /= stackScale;
    stackScroll.y /= stackScale;
  }
  var stackOffset = dom_utils_default.stackingElementOffset(element);
  if (scale !== 1 && stackOffset) {
    stackOffset.left /= stackScale;
    stackOffset.top /= stackScale;
  }
  return dom_utils_default.removeScroll(
    dom_utils_default.addScroll(
      utils_default.removeStackingOffset(
        utils_default.scaleRect(rect, scale),
        stackOffset
      ),
      stackScroll
    ),
    scrollPos
  );
};
var relativeRect = function(anchor, element, offset3, scale) {
  var rect = utils_default.eitherRect(dom_utils_default.position(anchor, element, scale), offset3);
  return utils_default.scaleRect(rect, scale);
};
var elementScrollPosition = function(anchor, element) {
  return anchor ? { x: 0, y: 0 } : dom_utils_default.scrollPosition(element);
};
var alignElement = function(settings) {
  var anchor = settings.anchor;
  var element = settings.element;
  var anchorAlign = settings.anchorAlign;
  var elementAlign = settings.elementAlign;
  var margin = settings.margin;
  var offset3 = settings.offset;
  var positionMode = settings.positionMode;
  var scale = settings.scale;
  var currentScale = scale || 1;
  var fixedMode = positionMode === "fixed" || !dom_utils_default.hasOffsetParent(element);
  var anchorRect = fixedMode ? absoluteRect(anchor, element, offset3, currentScale) : relativeRect(anchor, element, offset3, currentScale);
  var elementRect = utils_default.scaleRect(dom_utils_default.offset(element), currentScale);
  var result = dom_utils_default.align({
    anchorAlign,
    anchorRect,
    elementAlign,
    elementRect,
    margin
  });
  return result;
};
var align_element_default = alignElement;

// node_modules/@progress/kendo-popup-common/dist/es/position-element.js
var positionElement = function(settings) {
  var anchor = settings.anchor;
  var currentLocation = settings.currentLocation;
  var element = settings.element;
  var anchorAlign = settings.anchorAlign;
  var elementAlign = settings.elementAlign;
  var collisions = settings.collisions;
  var margin = settings.margin;
  var scale = settings.scale;
  var currentScale = scale || 1;
  var elementOffset = dom_utils_default.offsetAtPoint(element, currentLocation);
  var elementRect = utils_default.scaleRect(elementOffset, currentScale);
  var anchorOffset = utils_default.scaleRect(dom_utils_default.offset(anchor), currentScale);
  var anchorRect = utils_default.eitherRect(anchorOffset, currentLocation);
  var viewPort = settings.viewPort || dom_utils_default.windowViewPort(element);
  viewPort.width = viewPort.width / currentScale;
  viewPort.height = viewPort.height / currentScale;
  var result = dom_utils_default.restrictToView({
    anchorAlign,
    anchorRect,
    collisions,
    elementAlign,
    elementRect,
    margin,
    viewPort
  });
  var offset3 = dom_utils_default.addOffset(currentLocation, result.offset);
  return {
    flip: result.flip,
    flipped: result.flipped,
    fit: result.fit,
    fitted: result.fitted,
    offset: offset3
  };
};
var position_element_default = positionElement;

// node_modules/@progress/kendo-react-popup/util.mjs
var d2 = 16.666666666666668;
var g2 = function(u5, f3, t21 = {}) {
  let e20, n14, l5, r10, i10 = 0;
  t21 = t21 || {};
  const s15 = function() {
    i10 = t21.leading === false ? 0 : (/* @__PURE__ */ new Date()).getTime(), e20 = void 0, r10 = u5.apply(n14, l5), e20 || (n14 = l5 = null);
  };
  return function() {
    const o15 = (/* @__PURE__ */ new Date()).getTime();
    !i10 && t21.leading === false && (i10 = o15);
    const a11 = f3 - (o15 - i10);
    return n14 = void 0, l5 = arguments, a11 <= 0 || a11 > f3 ? (e20 && (clearTimeout(e20), e20 = void 0), i10 = o15, r10 = u5.apply(n14, l5), e20 || (n14 = l5 = null)) : !e20 && t21.trailing !== false && (e20 = window.setTimeout(s15, a11)), r10;
  };
};

// node_modules/@progress/kendo-react-popup/Popup.mjs
var Te = i3.createContext((c3) => c3);
var Re = 100;
var Ne = 1;
function b(c3, p8) {
  if (c3 === p8)
    return true;
  if (!!c3 != !!p8)
    return false;
  const T2 = Object.getOwnPropertyNames(c3), R = Object.getOwnPropertyNames(p8);
  if (T2.length !== R.length)
    return false;
  for (let m5 = 0; m5 < T2.length; m5++) {
    const h3 = T2[m5];
    if (c3[h3] !== p8[h3])
      return false;
  }
  return true;
}
var ze = {
  left: -1e3,
  top: 0
};
var te = i3.forwardRef((c3, p8) => {
  const R = i3.useContext(Te).call(void 0, c3), {
    collision: m5 = g3.collision,
    anchorAlign: h3 = g3.anchorAlign,
    popupAlign: v4 = g3.popupAlign,
    offset: N2 = g3.offset,
    animate: ne = g3.animate,
    show: y3 = g3.show,
    margin: _ = g3.margin,
    positionMode: F2 = g3.positionMode,
    appendTo: P3,
    contentKey: z2,
    anchor: f3,
    scale: oe2,
    role: re2,
    onKeyDown: ie3,
    onPosition: q,
    onOpen: V2,
    onMouseDownOutside: W,
    onClose: X,
    className: I3,
    popupClass: L,
    id: se,
    style: M2,
    children: ce
  } = R, le2 = n3(), S = R.unstyled || le2, C2 = S && S.uPopup, [n14, U2] = i3.useState({
    current: "hidden",
    previous: "hidden",
    props: {}
  }), B = (e20) => {
    window == null || window.addEventListener("mousedown", J2), k3(e20), G3(e20.firstChild, "enter", ae), U2({ ...o15, current: "shown", previous: o15.current });
  }, k3 = (e20) => {
    const { width: r10, height: d3 } = e20.style;
    if (e20.offsetWidth === 0 && e20.offsetHeight === 0)
      return;
    e20.style.width = e20.offsetWidth + "px", e20.style.height = e20.offsetHeight + "px";
    const a11 = align_element_default({
      anchor: f3,
      anchorAlign: h3,
      element: e20,
      elementAlign: v4,
      offset: N2,
      margin: _,
      positionMode: F2,
      scale: oe2
    }), u5 = position_element_default({
      anchor: f3,
      anchorAlign: h3,
      element: e20,
      elementAlign: v4,
      collisions: m5,
      currentLocation: a11,
      margin: _
    });
    if (e20.style.top = u5.offset.top + "px", e20.style.left = u5.offset.left + "px", e20.style.width = r10, e20.style.height = d3, K.current = {
      fit: u5.fit,
      fitted: u5.fitted,
      flip: u5.flip,
      flipped: u5.flipped
    }, q) {
      const x4 = {
        target: E2.current,
        flipped: u5.flipped,
        fitted: u5.fitted
      };
      q.call(void 0, x4);
    }
  }, ae = () => {
    const e20 = s15.current;
    e20 && (y3 && e20.classList.add(
      ...n2(l.animationContainerShown({ c: C2 })).split(" ").filter((r10) => r10)
    ), fe(e20), V2 && V2.call(void 0, { target: E2.current }));
  }, G3 = (e20, r10, d3) => {
    if (!v4)
      return;
    let a11;
    const { horizontal: u5, vertical: x4 } = v4;
    typeof c3.animate == "object" && c3.animate.direction ? a11 = c3.animate.direction : u5 === "left" && x4 === "center" ? a11 = "right" : u5 === "right" && x4 === "center" ? a11 = "left" : x4 === "top" ? a11 = "down" : a11 = "up";
    const ge = {
      down: "up",
      up: "down",
      left: "right",
      right: "left"
    };
    K.current && K.current.flipped && (a11 = ge[a11]), x2(e20, a11, pe()[r10], r10, d3, C2);
  }, J2 = (e20) => {
    var a11;
    const r10 = ((a11 = e20 == null ? void 0 : e20.target) == null ? void 0 : a11.closest(".k-animation-container")) === null, d3 = (f3 == null ? void 0 : f3.contains(e20 == null ? void 0 : e20.target)) || false;
    if (r10) {
      if (W) {
        const u5 = {
          target: E2.current,
          event: e20,
          state: n14,
          isAnchorClicked: d3
        };
        W.call(void 0, u5);
      }
      window == null || window.removeEventListener("mousedown", J2);
    }
  }, ue = (e20) => {
    if (!y3) {
      const r10 = S && S.uPopup;
      e20.classList.remove(
        ...n2(l.animationContainerShown({ c: r10 })).split(" ").filter((d3) => d3)
      );
    }
    H();
  }, Q4 = () => {
    o15.current === "hiding" && (o15.previous === "shown" || o15.previous === "reposition") && U2({ ...o15, current: "hidden", previous: o15.current }), X && X.call(void 0, { target: E2.current });
  }, pe = () => {
    const e20 = ne;
    let r10 = 0, d3 = 0;
    return e20 && (e20 === true ? r10 = d3 = 300 : (r10 = e20.openDuration || 0, d3 = e20.closeDuration || 0)), { enter: r10, exit: d3 };
  }, fe = (e20) => {
    H(), O.current = dom_utils_default.scrollableParents(f3 || e20), O.current && O.current.map((r10) => r10.addEventListener("scroll", j)), window.addEventListener("resize", j);
  }, H = () => {
    O.current && (O.current.map((e20) => e20.removeEventListener("scroll", j)), O.current = void 0), window.removeEventListener("resize", j);
  }, j = g2(() => {
    s15.current && o15.current !== "hidden" && o15.current !== "hiding" && U2({ ...n14, current: "reposition", previous: o15.current });
  }, d2), de = () => Y2 ? Y2 + Ne : Re, Y2 = n() || 0, K = i3.useRef(void 0), O = i3.useRef(void 0), s15 = i3.useRef(null), E2 = i3.useRef(null), $ = i3.useRef({}), Z = i3.useRef(false);
  i3.useImperativeHandle(E2, () => ({
    element: s15.current,
    setPosition: k3,
    props: c3
  })), i3.useImperativeHandle(p8, () => E2.current);
  const o15 = i3.useMemo(() => {
    const e20 = {
      ...n14,
      props: {
        show: y3,
        anchor: f3,
        anchorAlign: h3,
        appendTo: P3,
        collision: m5,
        popupAlign: v4,
        className: I3,
        popupClass: L,
        style: M2,
        offset: N2,
        contentKey: z2
      }
    };
    return y3 ? n14.current === "hidden" || n14.current === "hiding" ? { ...e20, current: "showing", previous: n14.current } : n14.current === "showing" ? { ...e20, current: "shown", previous: n14.current } : n14.current === "shown" && (!b(N2, n14.props.offset) || !b(h3, n14.props.anchorAlign) || !b(P3, n14.props.appendTo) || !b(m5, n14.props.collision) || !b(v4, n14.props.popupAlign) || !b(M2, n14.props.style) || f3 !== n14.props.anchor || L !== n14.props.popupClass || I3 !== n14.props.className) ? { ...e20, current: "reposition", previous: n14.current } : e20 : n14.current === "hiding" || n14.current === "hidden" ? { ...e20, current: "hidden", previous: n14.current } : { ...e20, current: "hiding", previous: n14.current };
  }, [
    y3,
    f3,
    h3,
    P3,
    m5,
    v4,
    I3,
    L,
    M2,
    N2,
    z2,
    n14
  ]);
  i3.useEffect(() => {
    o15.current === "hiding" && !Z.current && s15.current ? (Z.current = true, ue(s15.current), G3(s15.current.firstChild, "exit", Q4)) : (Z.current = false, o15.current === "showing" && s15.current && !s15.current.classList.contains("k-animation-container-shown") ? B(s15.current) : o15.current === "hiding" && s15.current ? Q4() : o15.current === "reposition" && o15.previous === "shown" ? setTimeout(() => {
      U2({ ...o15, current: "shown", previous: o15.current });
    }, 0) : o15.current === "shown" && $.current.contentKey !== z2 && s15.current && k3(s15.current)), o15.current === "reposition" && (o15.previous === "shown" || o15.previous === "showing") && s15.current && k3(s15.current), $.current = { contentKey: z2 };
  }, [o15]), i3.useEffect(() => (o15.current === "showing" && s15.current && B(s15.current), () => {
    H();
  }), []);
  const ee2 = P3 || (e ? f3 && f3.ownerDocument ? f3.ownerDocument.body : document.body : void 0), me = Object.assign(
    {},
    { position: F2, top: 0, left: -1e4 },
    M2 || {}
  ), he = o15.current === "hiding";
  if ((y3 || he) && ee2) {
    const e20 = de(), r10 = i3.createElement(t.Provider, { value: e20 }, i3.createElement(
      "div",
      {
        onKeyDown: ie3,
        className: n2(l.animationContainer({ c: C2 }), I3),
        id: se,
        ref: s15,
        style: {
          zIndex: e20,
          ...me
        }
      },
      i3.createElement(
        "div",
        {
          className: n2(l.animationChild({ c: C2 })),
          style: { transitionDelay: "0ms" }
        },
        i3.createElement("div", { role: re2, className: n2(l.popup({ c: C2 }), L) }, ce)
      )
    ));
    return P3 !== null ? we.createPortal(r10, ee2) : r10;
  }
  return null;
});
var g3 = {
  collision: {
    horizontal: collision_default.fit,
    vertical: collision_default.flip
  },
  anchorAlign: {
    horizontal: align_point_default.left,
    vertical: align_point_default.bottom
  },
  popupAlign: {
    horizontal: align_point_default.left,
    vertical: align_point_default.top
  },
  offset: ze,
  animate: true,
  show: false,
  margin: {
    horizontal: 0,
    vertical: 0
  },
  positionMode: "absolute"
};
te.displayName = "Popup";
te.propTypes = {
  anchor: function(c3) {
    const p8 = c3.anchor;
    return p8 && typeof p8.nodeType != "number" ? new Error("Invalid prop `anchor` supplied to `Kendo React Popup`. Validation failed.") : null;
  },
  appendTo: function(c3) {
    const p8 = c3.appendTo;
    return p8 && typeof p8.nodeType != "number" ? new Error("Invalid prop `appendTo` supplied to `Kendo React Popup`. Validation failed.") : null;
  },
  className: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.arrayOf(import_prop_types4.default.string.isRequired)]),
  id: import_prop_types4.default.string,
  popupClass: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.arrayOf(import_prop_types4.default.string), import_prop_types4.default.object]),
  collision: import_prop_types4.default.shape({
    horizontal: import_prop_types4.default.oneOf([collision_default.fit, collision_default.flip, collision_default.none]),
    vertical: import_prop_types4.default.oneOf([collision_default.fit, collision_default.flip, collision_default.none])
  }),
  anchorAlign: import_prop_types4.default.shape({
    horizontal: import_prop_types4.default.oneOf([align_point_default.left, align_point_default.center, align_point_default.right]),
    vertical: import_prop_types4.default.oneOf([align_point_default.top, align_point_default.center, align_point_default.bottom])
  }),
  popupAlign: import_prop_types4.default.shape({
    horizontal: import_prop_types4.default.oneOf([align_point_default.left, align_point_default.center, align_point_default.right]),
    vertical: import_prop_types4.default.oneOf([align_point_default.top, align_point_default.center, align_point_default.bottom])
  }),
  offset: import_prop_types4.default.shape({
    left: import_prop_types4.default.number,
    top: import_prop_types4.default.number
  }),
  children: import_prop_types4.default.oneOfType([import_prop_types4.default.element, import_prop_types4.default.node]),
  show: import_prop_types4.default.bool,
  animate: import_prop_types4.default.oneOfType([
    import_prop_types4.default.bool,
    import_prop_types4.default.shape({
      openDuration: import_prop_types4.default.number,
      closeDuration: import_prop_types4.default.number
    })
  ]),
  margin: import_prop_types4.default.shape({
    horizontal: import_prop_types4.default.number,
    vertical: import_prop_types4.default.number
  }),
  positionMode: import_prop_types4.default.oneOf(["fixed", "absolute"]),
  scale: import_prop_types4.default.number,
  style: import_prop_types4.default.object,
  onClose: import_prop_types4.default.func,
  onPosition: import_prop_types4.default.func,
  onOpen: import_prop_types4.default.func,
  onKeyDown: import_prop_types4.default.func,
  onMouseDownOutside: import_prop_types4.default.func
};

// node_modules/@progress/kendo-react-buttons/ListButton/utils/popup.mjs
function n5(o15) {
  const t21 = { horizontal: "left", vertical: "bottom" };
  return o15 && (t21.horizontal = "right"), t21;
}
function i4(o15) {
  const t21 = { horizontal: "left", vertical: "top" };
  return o15 && (t21.horizontal = "right"), t21;
}

// node_modules/@progress/kendo-react-buttons/package-metadata.mjs
var e7 = Object.freeze({
  name: "@progress/kendo-react-buttons",
  productName: "KendoReact",
  productCode: "KENDOUIREACT",
  productCodes: ["KENDOUIREACT"],
  publishDate: 1755015888,
  version: "11.4.0",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/components/my-license/"
});

// node_modules/@progress/kendo-react-buttons/ListButton/SplitButton.mjs
var u2 = class u3 extends p2.Component {
  constructor(i10) {
    super(i10), this.state = {
      focused: false,
      focusedIndex: -1,
      opened: false
    }, this.wrapper = null, this.mainButton = null, this.list = null, this.skipFocus = false, this.buttonsData = [], this.showLicenseWatermark = false, this.onKeyDown = (t21) => {
      const { focusedIndex: e20 } = this.state;
      if (t21.altKey) {
        !this.opened && t21.keyCode === e2.down ? (t21.preventDefault(), this.setState({ focusedIndex: 0 }), this.setOpen(true, t21)) : this.opened && t21.keyCode === e2.up && (t21.preventDefault(), this.setState({ focusedIndex: -1 }), this.setOpen(false, t21));
        return;
      }
      let o15;
      if (t21.keyCode === e2.enter || t21.keyCode === e2.space) {
        if (t21.preventDefault(), this.dispatchClickEvent(t21, e20), e20 >= 0) {
          o15 = {
            focusedIndex: this.opened ? -1 : 0
          };
          const n14 = !this.opened;
          this.setOpen(n14, t21);
        }
      } else if (this.opened && t21.keyCode === e2.esc) {
        this.setState({ focusedIndex: -1 }), this.setOpen(false, t21);
        return;
      }
      if (this.opened) {
        const n14 = i2(e20, t21.keyCode, t21.altKey, this.buttonsData.length);
        n14 !== e20 && (o15 = o15 || {}, o15.focusedIndex = n14);
        const h3 = t21.keyCode === e2.up || t21.keyCode === e2.down || t21.keyCode === e2.left || t21.keyCode === e2.right;
        !t21.altKey && (h3 || t21.keyCode === e2.home || t21.keyCode === e2.end) && t21.preventDefault();
      }
      o15 && this.setState(o15);
    }, this.switchFocus = (t21) => {
      this.skipFocus = true, t21(), window.setTimeout(() => this.skipFocus = false, 0);
    }, this.onFocus = (t21) => {
      this.skipFocus || (v(this.props.onFocus, t21, this, void 0), this.setState({ focused: true }));
    }, this.setOpen = (t21, e20) => {
      this.opened !== t21 && (this.openedDuringOnChange = t21, this.setState({ opened: t21 }), e20 ? this.dispatchPopupEvent(e20, t21) : this.openedDuringOnChange = void 0);
    }, this.onItemClick = (t21, e20) => {
      this.opened && this.setState({ focusedIndex: 0 }), this.dispatchClickEvent(t21, e20), this.setOpen(false, t21);
    }, this.onBlur = (t21) => {
      this.skipFocus || (this.setState({
        focused: false,
        focusedIndex: -1
      }), v(this.props.onBlur, t21, this, void 0), setTimeout(() => {
        this.setOpen(false, t21);
      }, 0));
    }, this.onPopupClose = (t21) => {
      var o15;
      const e20 = o(document);
      this.element && this.element.removeAttribute("tabindex"), (e20 === this.list || (o15 = this.list) != null && o15.contains(e20)) && this.switchFocus(() => {
        this.element && this.element.focus({ preventScroll: true });
      }), this.props.popupSettings && this.props.popupSettings.onClose && this.props.popupSettings.onClose.call(void 0, t21);
    }, this.listRef = (t21) => {
      this.list = t21, t21 && this.state.focused && this.switchFocus(() => {
        t21.focus({ preventScroll: true }), this.element && (this.element.tabIndex = -1);
      });
    }, this.onSplitPartClick = (t21) => {
      if (this.buttonsData.length) {
        const e20 = !this.opened;
        this.setState({
          focusedIndex: e20 ? 0 : -1,
          focused: true
        }), this.setOpen(e20, t21);
      }
    }, this.onDownSplitPart = (t21) => {
      t21.preventDefault();
      const e20 = o(document);
      this.element && e20 !== this.element && e20 !== this.list && this.element.focus();
    }, this.onItemDown = (t21) => {
      o(document) === this.list && t21.preventDefault();
    }, this.dispatchPopupEvent = (t21, e20) => {
      v(e20 ? this.props.onOpen : this.props.onClose, t21, this, void 0), this.openedDuringOnChange = void 0;
    }, this.showLicenseWatermark = !d(e7, { component: "SplitButton" }), this.licenseMessage = w(e7);
  }
  get guid() {
    return this.props.id ? this.props.id + "-accessibility-id" : this.props.id;
  }
  get opened() {
    return this.openedDuringOnChange !== void 0 ? this.openedDuringOnChange : this.props.opened === void 0 ? this.state.opened : this.props.opened;
  }
  /**
   * @hidden
   */
  render() {
    this.buttonsData = this.props.items || p2.Children.toArray(this.props.children).filter((r10) => r10 && r10.type === e6).map((r10) => r10.props);
    const i10 = this.isRtl(), t21 = i10 ? "rtl" : void 0, { id: e20, style: o15, tabIndex: n14, disabled: h3 } = this.props;
    return p2.createElement(p2.Fragment, null, p2.createElement(
      "div",
      {
        id: e20,
        style: o15,
        className: n2(
          "k-split-button",
          "k-button-group",
          {
            "k-focus": this.state.focused
          },
          `k-rounded-${a4.roundedMap[this.props.rounded || "medium"]}`,
          this.props.className
        ),
        onKeyDown: this.onKeyDown,
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        dir: t21,
        ref: (r10) => {
          this.wrapper = r10;
        }
      },
      p2.createElement(
        k,
        {
          ref: (r10) => {
            this.mainButton = r10 && r10.element;
          },
          type: "button",
          size: this.props.size,
          rounded: this.props.rounded,
          fillMode: this.props.fillMode,
          themeColor: this.props.themeColor,
          onClick: (r10) => this.onItemClick(r10, -1),
          disabled: h3 || void 0,
          tabIndex: n14,
          accessKey: this.props.accessKey,
          className: this.props.buttonClass,
          icon: this.props.icon,
          svgIcon: this.props.svgIcon,
          iconClass: this.props.iconClass,
          startIcon: this.props.startIcon,
          endIcon: this.props.endIcon,
          imageUrl: this.props.imageUrl,
          dir: t21,
          "aria-disabled": h3,
          "aria-haspopup": true,
          "aria-expanded": this.opened || void 0,
          "aria-label": this.props.ariaLabel,
          "aria-controls": this.opened ? this.guid : void 0,
          id: "button-" + this.guid,
          title: this.props.title
        },
        this.props.text
      ),
      p2.createElement(
        k,
        {
          type: "button",
          size: this.props.size,
          rounded: this.props.rounded,
          fillMode: this.props.fillMode,
          themeColor: this.props.themeColor,
          icon: "caret-alt-down",
          svgIcon: caretAltDownIcon,
          className: "k-split-button-arrow",
          disabled: h3 || void 0,
          tabIndex: -1,
          onClick: this.onSplitPartClick,
          onMouseDown: this.onDownSplitPart,
          onPointerDown: this.onDownSplitPart,
          dir: t21,
          "aria-label": "menu toggling button"
        }
      ),
      this.renderPopup(i10)
    ), this.showLicenseWatermark && p2.createElement(P, { message: this.licenseMessage }));
  }
  /**
   * @hidden
   */
  componentDidMount() {
    (this.props.dir === void 0 && this.isRtl() || this.opened) && this.forceUpdate();
  }
  /**
   * The DOM element of main button.
   */
  get element() {
    return this.mainButton;
  }
  dispatchClickEvent(i10, t21) {
    this.isItemDisabled(t21) || (t21 === -1 ? v(this.props.onButtonClick, i10, this, void 0) : v(this.props.onItemClick, i10, this, {
      item: this.buttonsData[t21],
      itemIndex: t21
    }));
  }
  renderPopup(i10) {
    const { popupSettings: t21 = {} } = this.props, { focusedIndex: e20 } = this.state;
    return p2.createElement(
      te,
      {
        anchor: this.wrapper,
        show: this.opened,
        animate: t21.animate,
        popupClass: n2("k-menu-popup", t21.popupClass),
        anchorAlign: t21.anchorAlign || n5(i10),
        popupAlign: t21.popupAlign || i4(i10),
        style: i10 ? { direction: "rtl" } : void 0,
        onClose: this.onPopupClose
      },
      p2.createElement(
        "ul",
        {
          role: "menu",
          id: this.guid,
          "aria-labelledby": "button-" + this.guid,
          tabIndex: -1,
          ref: this.listRef,
          "aria-activedescendant": e20 >= 0 ? `${this.guid}-${e20}` : void 0,
          className: n2("k-menu-group", {
            [`k-menu-group-${a4.sizeMap[this.props.size] || this.props.size}`]: this.props.size
          })
        },
        this.renderChildItems()
      )
    );
  }
  renderChildItems() {
    const { item: i10, itemRender: t21, textField: e20 } = this.props;
    return this.buttonsData.length > 0 ? this.buttonsData.map((o15, n14) => p2.createElement(
      k2,
      {
        className: n2(
          "k-menu-item",
          { "k-first": n14 === 0 },
          { "k-last": n14 === this.buttonsData.length - 1 }
        ),
        dataItem: o15,
        textField: e20,
        focused: this.state.focusedIndex === n14,
        onClick: this.onItemClick,
        onDown: this.onItemDown,
        render: t21,
        item: i10,
        key: n14,
        index: n14,
        id: `${this.guid}-${n14}`
      }
    )) : null;
  }
  isItemDisabled(i10) {
    return this.buttonsData[i10] ? this.buttonsData[i10].disabled : this.props.disabled;
  }
  isRtl() {
    return this.props.dir !== void 0 ? this.props.dir === "rtl" : !!this.wrapper && getComputedStyle(this.wrapper).direction === "rtl";
  }
};
u2.propTypes = {
  accessKey: import_prop_types5.default.string,
  ariaLabel: import_prop_types5.default.string,
  title: import_prop_types5.default.string,
  onButtonClick: import_prop_types5.default.func,
  onFocus: import_prop_types5.default.func,
  onBlur: import_prop_types5.default.func,
  onItemClick: import_prop_types5.default.func,
  onOpen: import_prop_types5.default.func,
  onClose: import_prop_types5.default.func,
  text: import_prop_types5.default.string,
  items: import_prop_types5.default.arrayOf(import_prop_types5.default.any),
  textField: import_prop_types5.default.string,
  tabIndex: import_prop_types5.default.number,
  disabled: import_prop_types5.default.bool,
  icon: import_prop_types5.default.string,
  svgIcon: r,
  imageUrl: import_prop_types5.default.string,
  popupSettings: import_prop_types5.default.object,
  itemRender: import_prop_types5.default.any,
  item: import_prop_types5.default.func,
  className: import_prop_types5.default.string,
  buttonClass: import_prop_types5.default.string,
  dir: import_prop_types5.default.string
}, u2.defaultProps = {
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  themeColor: "base"
};
var C = u2;

// node_modules/@progress/kendo-react-buttons/ListButton/DropDownButton.mjs
var p3 = __toESM(require_react(), 1);
var import_prop_types7 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-buttons/ListButton/DropDownButtonItem.mjs
var i5 = __toESM(require_react(), 1);
var import_prop_types6 = __toESM(require_prop_types(), 1);
var r3 = class r4 extends i5.Component {
  /**
   * @hidden
   */
  render() {
    return null;
  }
};
r3.propTypes = {
  text: import_prop_types6.default.string,
  icon: import_prop_types6.default.string,
  iconClass: import_prop_types6.default.string,
  imageUrl: import_prop_types6.default.string,
  selected: import_prop_types6.default.bool,
  disabled: import_prop_types6.default.bool,
  render: import_prop_types6.default.any
};
var s7 = r3;

// node_modules/@progress/kendo-react-buttons/ListButton/DropDownButton.mjs
var J = 12e3;
var Q2 = 2e3;
var m2 = class m3 extends p3.Component {
  constructor(i10) {
    super(i10), this.state = {
      opened: false,
      focused: false,
      focusedIndex: -1
    }, this.mainButton = null, this.list = null, this.skipFocus = false, this.showLicenseWatermark = false, this.buttonsData = [], this.onKeyDown = (t21) => {
      const { focusedIndex: e20 } = this.state;
      if (t21.altKey) {
        !this.opened && t21.keyCode === e2.down ? (t21.preventDefault(), this.setOpen(true, t21), this.setState({ focusedIndex: 0 })) : this.opened && t21.keyCode === e2.up && (t21.preventDefault(), this.setState({ focusedIndex: -1 }), this.setOpen(false, t21));
        return;
      }
      const o15 = { ...this.state };
      if (t21.keyCode === e2.enter || t21.keyCode === e2.space) {
        t21.preventDefault(), e20 >= 0 && this.dispatchClickEvent(t21, e20);
        const a11 = !this.opened;
        this.setState({
          focused: true,
          focusedIndex: a11 ? 0 : -1
        }), this.setOpen(a11, t21);
        return;
      }
      if (this.opened && t21.keyCode === e2.esc) {
        this.setState({ focusedIndex: -1 }), this.setOpen(false, t21);
        return;
      }
      if (this.opened) {
        const a11 = i2(e20, t21.keyCode, t21.altKey, this.buttonsData.length);
        o15.focusedIndex = a11;
        const h3 = t21.keyCode === e2.up || t21.keyCode === e2.down || t21.keyCode === e2.left || t21.keyCode === e2.right;
        !t21.altKey && (h3 || t21.keyCode === e2.home || t21.keyCode === e2.end) && t21.preventDefault();
      }
      this.setState(o15);
    }, this.switchFocus = (t21) => {
      this.skipFocus = true, t21(), window.setTimeout(() => this.skipFocus = false, 0);
    }, this.handleFocus = (t21) => {
      this.skipFocus || (this.setState({ focused: true, focusedIndex: this.opened ? 0 : -1 }), v(this.props.onFocus, t21, this, void 0));
    }, this.handleButtonBlur = (t21) => {
      this.opened || (this.setState({ focused: false }), v(this.props.onBlur, t21, this, void 0));
    }, this.handleMenuBlur = (t21) => {
      this.skipFocus || (this.setState({ focused: false, focusedIndex: -1 }), v(this.props.onBlur, t21, this, void 0), setTimeout(() => {
        this.setOpen(false, t21);
      }, 0));
    }, this.setOpen = (t21, e20) => {
      this.opened !== t21 && (this.openedDuringOnChange = t21, this.setState({ opened: t21 }), e20 ? this.dispatchPopupEvent(e20, t21) : this.openedDuringOnChange = void 0);
    }, this.onItemClick = (t21, e20) => {
      this.setState({ focusedIndex: -1 }), this.dispatchClickEvent(t21, e20), this.setOpen(false, t21);
    }, this.onItemDown = (t21) => {
      o(document) === this.list && t21.preventDefault();
    }, this.mouseDown = (t21) => {
      t21.preventDefault();
      const e20 = o(document);
      this.element && e20 !== this.element && e20 !== this.list && this.element.focus();
    }, this.onPopupClose = (t21) => {
      var o15;
      const e20 = o(document);
      this.element && this.element.removeAttribute("tabindex"), (e20 === this.list || (o15 = this.list) != null && o15.contains(e20)) && this.switchFocus(() => {
        this.element && this.element.focus({ preventScroll: true });
      }), this.props.popupSettings && this.props.popupSettings.onClose && this.props.popupSettings.onClose.call(void 0, t21);
    }, this.listRef = (t21) => {
      this.list = t21, t21 && this.state.focused && this.switchFocus(() => {
        t21.focus({ preventScroll: true }), this.element && (this.element.tabIndex = -1);
      });
    }, this.onClickMainButton = (t21) => {
      if (!this.buttonsData.length)
        return;
      const e20 = !this.opened;
      this.setState({
        focused: true,
        focusedIndex: e20 ? 0 : -1
      }), this.setOpen(e20, t21);
    }, this.dispatchPopupEvent = (t21, e20) => {
      v(e20 ? this.props.onOpen : this.props.onClose, t21, this, void 0), this.openedDuringOnChange = void 0;
    }, this.showLicenseWatermark = !d(e7, { component: "DropDownButton" }), this.licenseMessage = w(e7);
  }
  get guid() {
    return this.props.id + "-accessibility-id";
  }
  get opened() {
    return this.openedDuringOnChange !== void 0 ? this.openedDuringOnChange : this.props.opened === void 0 ? this.state.opened : this.props.opened;
  }
  /**
   * @hidden
   */
  render() {
    const i10 = this.isRtl(), t21 = this.props.unstyled && this.props.unstyled.uDropDownButton, e20 = i10 ? "rtl" : void 0, {
      id: o15,
      style: a11,
      tabIndex: h3,
      disabled: n14,
      size: D,
      rounded: y3,
      fillMode: I3,
      themeColor: k3,
      ariaLabel: w2,
      title: b3,
      accessKey: B,
      icon: O,
      svgIcon: x4,
      iconClass: E2,
      buttonClass: S,
      className: P3,
      imageUrl: F2,
      startIcon: v4,
      endIcon: N2
    } = this.props;
    return this.buttonsData = this.props.items || p3.Children.toArray(this.props.children).filter((d3) => d3 && d3.type === s7).map((d3) => d3.props), p3.createElement(p3.Fragment, null, p3.createElement(
      k,
      {
        id: o15,
        size: D,
        style: a11,
        rounded: y3,
        fillMode: I3,
        themeColor: k3,
        onClick: this.onClickMainButton,
        onMouseDown: this.mouseDown,
        onKeyDown: this.onKeyDown,
        onFocus: this.handleFocus,
        onBlur: this.handleButtonBlur,
        "aria-disabled": n14 ? "true" : void 0,
        tabIndex: h3,
        accessKey: B,
        icon: O,
        svgIcon: x4,
        iconClass: E2,
        className: n2(
          S,
          P3,
          F.wrapper({
            c: t21,
            focused: this.state.focused,
            disabled: n14
          })
        ),
        imageUrl: F2,
        dir: e20,
        ref: (d3) => {
          this.mainButton = (d3 == null ? void 0 : d3.element) || null;
        },
        type: "button",
        "aria-expanded": this.opened ? "true" : "false",
        "aria-label": w2,
        "aria-controls": this.opened ? this.guid : void 0,
        title: b3,
        startIcon: v4,
        endIcon: N2
      },
      this.props.text
    ), this.showLicenseWatermark && p3.createElement(P, { message: this.licenseMessage }), this.renderPopup(i10));
  }
  /**
   * @hidden
   */
  componentDidMount() {
    (this.props.dir === void 0 && this.isRtl() || this.opened) && this.forceUpdate();
  }
  /**
   * The DOM element of main button.
   */
  get element() {
    return this.mainButton;
  }
  dispatchClickEvent(i10, t21) {
    this.isItemDisabled(t21) || v(this.props.onItemClick, i10, this, {
      item: this.buttonsData[t21],
      itemIndex: t21
    });
  }
  renderPopup(i10) {
    const { popupSettings: t21 = {}, _zIndex: e20, unstyled: o15 } = this.props, a11 = e20 ? e20 + Q2 : J, h3 = o15 && o15.uDropDownButton, { focusedIndex: n14 } = this.state;
    return p3.createElement(t.Provider, { value: a11 }, p3.createElement(
      te,
      {
        anchor: this.mainButton,
        show: this.opened,
        animate: t21.animate,
        popupClass: n2(F.popup({ c: h3 }), t21.popupClass),
        anchorAlign: t21.anchorAlign || n5(i10),
        popupAlign: t21.popupAlign || i4(i10),
        style: i10 ? { direction: "rtl" } : void 0,
        onClose: this.onPopupClose
      },
      p3.createElement(
        "ul",
        {
          role: "list",
          id: this.guid,
          tabIndex: -1,
          "aria-activedescendant": n14 >= 0 ? `${this.guid}-${n14}` : void 0,
          ref: this.listRef,
          onKeyDown: this.onKeyDown,
          onBlur: this.handleMenuBlur,
          className: n2(
            F.ul({
              c: h3,
              size: this.props.size
            })
          )
        },
        this.renderChildItems()
      )
    ));
  }
  renderChildItems() {
    const { item: i10, itemRender: t21, textField: e20, unstyled: o15 } = this.props, a11 = o15 && o15.uDropDownButton;
    return this.buttonsData.length > 0 ? this.buttonsData.map((h3, n14) => p3.createElement(
      k2,
      {
        className: n2(
          F.item({
            c: a11
          }),
          h3.className,
          { "k-first": n14 === 0 },
          { "k-last": n14 === this.buttonsData.length - 1 }
        ),
        dataItem: h3,
        textField: e20,
        focused: this.state.focusedIndex === n14,
        onClick: this.onItemClick,
        onDown: this.onItemDown,
        render: t21,
        item: i10,
        index: n14,
        key: n14,
        id: `${this.guid}-${n14}`
      }
    )) : null;
  }
  isItemDisabled(i10) {
    return this.buttonsData[i10] ? this.buttonsData[i10].disabled : this.props.disabled;
  }
  isRtl() {
    return this.props.dir !== void 0 ? this.props.dir === "rtl" : !!this.mainButton && getComputedStyle(this.mainButton).direction === "rtl";
  }
};
m2.propTypes = {
  accessKey: import_prop_types7.default.string,
  ariaLabel: import_prop_types7.default.string,
  title: import_prop_types7.default.string,
  onFocus: import_prop_types7.default.func,
  onBlur: import_prop_types7.default.func,
  onItemClick: import_prop_types7.default.func,
  onOpen: import_prop_types7.default.func,
  onClose: import_prop_types7.default.func,
  items: import_prop_types7.default.arrayOf(import_prop_types7.default.any),
  textField: import_prop_types7.default.string,
  tabIndex: import_prop_types7.default.number,
  disabled: import_prop_types7.default.bool,
  icon: import_prop_types7.default.string,
  svgIcon: r,
  iconClass: import_prop_types7.default.string,
  imageUrl: import_prop_types7.default.string,
  popupSettings: import_prop_types7.default.object,
  itemRender: import_prop_types7.default.func,
  item: import_prop_types7.default.func,
  className: import_prop_types7.default.string,
  buttonClass: import_prop_types7.default.string,
  dir: import_prop_types7.default.string
}, m2.defaultProps = {
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  themeColor: "base"
};
var g4 = m2;
var V = a();
var Y = a2(
  x(
    V,
    a3(m(g4))
  )
);
Y.displayName = "KendoReactDropDownButton";

// node_modules/@progress/kendo-react-buttons/toolbar/Toolbar.mjs
var t14 = __toESM(require_react(), 1);
var import_prop_types10 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-buttons/util.mjs
var t5 = ":not(.k-dropdownlist button):not(.k-colorpicker button):not(.k-split-button .k-split-button-arrow)";
var o2 = [
  "button" + t5,
  ".k-button-group > button" + t5,
  ".k-colorpicker",
  ".k-dropdownlist"
];

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollable.mjs
var t13 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarSeparator.mjs
var r5 = __toESM(require_react(), 1);
var t6 = (a11) => r5.createElement("div", { ref: a11._ref, className: n2("k-toolbar-separator k-separator", a11.className) });

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollButton.mjs
var a6 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-intl/globalization/GlobalizationContext.mjs
var o4 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-intl/dist/es/cldr/default-data.js
var defaultData = {
  en: {
    name: "en",
    identity: {
      version: {
        _unicodeVersion: "14.0.0",
        _cldrVersion: "41"
      },
      language: "en"
    },
    territory: "US",
    numbers: {
      symbols: {
        decimal: ".",
        group: ",",
        list: ";",
        percentSign: "%",
        plusSign: "+",
        minusSign: "-",
        exponential: "E",
        superscriptingExponent: "×",
        perMille: "‰",
        infinity: "∞",
        nan: "NaN",
        timeSeparator: ":",
        approximatelySign: "~"
      },
      decimal: {
        patterns: [
          "n"
        ],
        groupSize: [
          3
        ]
      },
      scientific: {
        patterns: [
          "nEn"
        ],
        groupSize: []
      },
      percent: {
        patterns: [
          "n%"
        ],
        groupSize: [
          3
        ]
      },
      currency: {
        patterns: [
          "$n"
        ],
        groupSize: [
          3
        ],
        "unitPattern-count-one": "n $",
        "unitPattern-count-other": "n $"
      },
      currencies: {
        BGN: {
          displayName: "Bulgarian Lev",
          "displayName-count-one": "Bulgarian lev",
          "displayName-count-other": "Bulgarian leva",
          symbol: "BGN"
        },
        EUR: {
          displayName: "Euro",
          "displayName-count-one": "euro",
          "displayName-count-other": "euros",
          symbol: "€",
          "symbol-alt-narrow": "€"
        },
        USD: {
          displayName: "US Dollar",
          "displayName-count-one": "US dollar",
          "displayName-count-other": "US dollars",
          symbol: "$",
          "symbol-alt-narrow": "$"
        }
      },
      localeCurrency: "USD",
      accounting: {
        patterns: [
          "$n",
          "($n)"
        ],
        groupSize: [
          3
        ]
      }
    },
    calendar: {
      gmtFormat: "GMT{0}",
      gmtZeroFormat: "GMT",
      patterns: {
        d: "M/d/y",
        D: "EEEE, MMMM d, y",
        m: "MMM d",
        M: "MMMM d",
        y: "MMM y",
        Y: "MMMM y",
        F: "EEEE, MMMM d, y h:mm:ss a",
        g: "M/d/y h:mm a",
        G: "M/d/y h:mm:ss a",
        t: "h:mm a",
        T: "h:mm:ss a",
        s: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
        u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'"
      },
      dateTimeFormats: {
        full: "{1} 'at' {0}",
        long: "{1} 'at' {0}",
        medium: "{1}, {0}",
        short: "{1}, {0}",
        availableFormats: {
          Bh: "h B",
          Bhm: "h:mm B",
          Bhms: "h:mm:ss B",
          d: "d",
          E: "ccc",
          EBhm: "E h:mm B",
          EBhms: "E h:mm:ss B",
          Ed: "d E",
          Ehm: "E h:mm a",
          EHm: "E HH:mm",
          Ehms: "E h:mm:ss a",
          EHms: "E HH:mm:ss",
          Gy: "y G",
          GyMd: "M/d/y GGGGG",
          GyMMM: "MMM y G",
          GyMMMd: "MMM d, y G",
          GyMMMEd: "E, MMM d, y G",
          h: "h a",
          H: "HH",
          hm: "h:mm a",
          Hm: "HH:mm",
          hms: "h:mm:ss a",
          Hms: "HH:mm:ss",
          hmsv: "h:mm:ss a v",
          Hmsv: "HH:mm:ss v",
          hmv: "h:mm a v",
          Hmv: "HH:mm v",
          M: "L",
          Md: "M/d",
          MEd: "E, M/d",
          MMM: "LLL",
          MMMd: "MMM d",
          MMMEd: "E, MMM d",
          MMMMd: "MMMM d",
          "MMMMW-count-one": "'week' W 'of' MMMM",
          "MMMMW-count-other": "'week' W 'of' MMMM",
          ms: "mm:ss",
          y: "y",
          yM: "M/y",
          yMd: "M/d/y",
          yMEd: "E, M/d/y",
          yMMM: "MMM y",
          yMMMd: "MMM d, y",
          yMMMEd: "E, MMM d, y",
          yMMMM: "MMMM y",
          yQQQ: "QQQ y",
          yQQQQ: "QQQQ y",
          "yw-count-one": "'week' w 'of' Y",
          "yw-count-other": "'week' w 'of' Y"
        }
      },
      timeFormats: {
        full: "h:mm:ss a zzzz",
        long: "h:mm:ss a z",
        medium: "h:mm:ss a",
        short: "h:mm a"
      },
      dateFormats: {
        full: "EEEE, MMMM d, y",
        long: "MMMM d, y",
        medium: "MMM d, y",
        short: "M/d/yy"
      },
      days: {
        format: {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        }
      },
      months: {
        format: {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        }
      },
      quarters: {
        format: {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        }
      },
      dayPeriods: {
        format: {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          narrow: {
            midnight: "mi",
            am: "a",
            "am-alt-variant": "am",
            noon: "n",
            pm: "p",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          }
        },
        "stand-alone": {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          narrow: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          }
        }
      },
      eras: {
        format: {
          wide: {
            "0": "Before Christ",
            "1": "Anno Domini",
            "0-alt-variant": "Before Common Era",
            "1-alt-variant": "Common Era"
          },
          abbreviated: {
            "0": "BC",
            "1": "AD",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          },
          narrow: {
            "0": "B",
            "1": "A",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          }
        }
      },
      dateFields: {
        era: {
          wide: "era",
          short: "era",
          narrow: "era"
        },
        year: {
          wide: "year",
          short: "yr.",
          narrow: "yr."
        },
        quarter: {
          wide: "quarter",
          short: "qtr.",
          narrow: "qtr."
        },
        month: {
          wide: "month",
          short: "mo.",
          narrow: "mo."
        },
        week: {
          wide: "week",
          short: "wk.",
          narrow: "wk."
        },
        weekOfMonth: {
          wide: "week of month",
          short: "wk. of mo.",
          narrow: "wk. of mo."
        },
        day: {
          wide: "day",
          short: "day",
          narrow: "day"
        },
        dayOfYear: {
          wide: "day of year",
          short: "day of yr.",
          narrow: "day of yr."
        },
        weekday: {
          wide: "day of the week",
          short: "day of wk.",
          narrow: "day of wk."
        },
        weekdayOfMonth: {
          wide: "weekday of the month",
          short: "wkday. of mo.",
          narrow: "wkday. of mo."
        },
        dayperiod: {
          short: "AM/PM",
          wide: "AM/PM",
          narrow: "AM/PM"
        },
        hour: {
          wide: "hour",
          short: "hr.",
          narrow: "hr."
        },
        minute: {
          wide: "minute",
          short: "min.",
          narrow: "min."
        },
        second: {
          wide: "second",
          short: "sec.",
          narrow: "sec."
        },
        zone: {
          wide: "time zone",
          short: "zone",
          narrow: "zone"
        },
        millisecond: {
          narrow: "ms",
          short: "ms",
          wide: "millisecond"
        }
      }
    }
  },
  supplemental: {
    likelySubtags: {
      en: "en-Latn-US"
    },
    currencyData: {
      region: {
        US: [
          {
            USD: {
              _from: "1792-01-01"
            }
          }
        ]
      }
    },
    weekData: {
      firstDay: {
        US: "sun"
      },
      weekendStart: {
        "001": "sat"
      },
      weekendEnd: {
        "001": "sun"
      }
    }
  }
};
var default_data_default = defaultData;

// node_modules/@progress/kendo-intl/dist/es/common/is-string.js
function isString(value) {
  return typeof value === "string";
}

// node_modules/@progress/kendo-intl/dist/es/error-details.js
var error_details_default = {
  "NoLocale": "Missing locale info for '{0}'",
  "NoCurrency": "Cannot determine currency information. Please load the locale currencies data.",
  "NoSupplementalCurrency": "Cannot determine currency. Please load the supplemental currencyData.",
  "NoCurrencyRegion": "No currency data for region '{0}'",
  "NoCurrencyDisplay": "Cannot determine currency display information. Please load the locale currencies data. The default culture does not include the all currencies data.",
  "NoGMTInfo": "Cannot determine locale GMT format. Please load the locale timeZoneNames data.",
  "NoWeekData": "Cannot determine locale first day of week. Please load the supplemental weekData.",
  "NoFirstDay": "Cannot determine locale first day of week. Please load the supplemental weekData. The default culture includes only the 'en-US' first day info.",
  "NoValidCurrency": "Cannot determine a default currency for the {0} locale. Please specify explicitly the currency with the format options.",
  "NoDateFieldNames": "Cannot determine the locale date field names. Please load the locale dateFields data."
};

// node_modules/@progress/kendo-intl/dist/es/errors.js
var formatRegExp = /\{(\d+)}?\}/g;
var IntlError = function IntlError2(ref) {
  var name = ref.name;
  var message = ref.message;
  if (!name || !message) {
    throw new Error("{ name: string, message: string } object is required!");
  }
  this.name = name;
  this.message = message;
};
IntlError.prototype.formatMessage = function formatMessage() {
  var values = [], len = arguments.length;
  while (len--) values[len] = arguments[len];
  var flattenValues = flatten(values);
  var formattedMessage = this.message.replace(formatRegExp, function(match, index) {
    return flattenValues[parseInt(index, 10)];
  });
  return this.name + ": " + formattedMessage;
};
IntlError.prototype.error = function error() {
  var values = [], len = arguments.length;
  while (len--) values[len] = arguments[len];
  return new Error(this.formatMessage(values));
};
var flatten = function(arr) {
  return arr.reduce(function(a11, b3) {
    return a11.concat(b3);
  }, []);
};
var toIntlErrors = function(errors2) {
  var predicate = function(prev, name) {
    prev[name] = new IntlError({ name, message: errors2[name] });
    return prev;
  };
  return Object.keys(errors2).reduce(predicate, {});
};
var errors = toIntlErrors(error_details_default);

// node_modules/@progress/kendo-intl/dist/es/cldr/info.js
function availableLocaleInfo(fullName, suffixes) {
  var parts = fullName.split("-");
  var language = parts[0];
  var script = parts[1];
  var territory = parts[2];
  return cldr[fullName] || suffixes.indexOf(territory) !== -1 && cldr[language + "-" + territory] || suffixes.indexOf(script) !== -1 && cldr[language + "-" + script] || cldr[language];
}
function localeFullName(language, suffixes) {
  var likelySubtags = cldr.supplemental.likelySubtags;
  for (var idx = 0; idx < suffixes.length; idx++) {
    var name = likelySubtags[language + "-" + suffixes[idx]];
    if (name) {
      return name;
    }
  }
  if (likelySubtags[language]) {
    return likelySubtags[language];
  }
}
var cldr = default_data_default;
function getLocaleInfo(locale) {
  var info;
  if (isString(locale)) {
    info = localeInfo(locale);
  } else {
    info = locale;
  }
  return info;
}
function localeInfo(locale) {
  if (cldr[locale]) {
    return cldr[locale];
  }
  var likelySubtags = cldr.supplemental.likelySubtags;
  if (likelySubtags) {
    var parts = locale.split("-");
    var language = parts[0];
    var suffixes = parts.slice(1);
    var fullName = localeFullName(language, suffixes);
    var info = fullName ? availableLocaleInfo(fullName, suffixes) : null;
    if (info) {
      return info;
    }
  }
  throw errors.NoLocale.error(locale);
}

// node_modules/@progress/kendo-intl/dist/es/common/constants.js
var DECIMAL = "decimal";
var CURRENCY = "currency";
var ACCOUNTING = "accounting";
var PERCENT = "percent";
var SCIENTIFIC = "scientific";
var CURRENCY_PLACEHOLDER = "$";
var PERCENT_PLACEHOLDER = "%";
var NUMBER_PLACEHOLDER = "n";
var LIST_SEPARATOR = ";";
var GROUP_SEPARATOR = ",";
var POINT = ".";
var EMPTY = "";
var DEFAULT_LOCALE = "en";

// node_modules/@progress/kendo-intl/dist/es/cldr/load-numbers.js
var LATIN_NUMBER_FORMATS = "Formats-numberSystem-latn";
var LATIN_NUMBER_SYMBOLS = "symbols-numberSystem-latn";
var patternRegExp = /([#,0.]+)/g;
var cldrCurrencyRegExp = /¤/g;
function getPatterns(pattern) {
  patternRegExp.lastIndex = 0;
  return pattern.replace(cldrCurrencyRegExp, CURRENCY_PLACEHOLDER).replace(patternRegExp, NUMBER_PLACEHOLDER).split(LIST_SEPARATOR);
}
function getGroupSize(pattern) {
  patternRegExp.lastIndex = 0;
  var numberPatterns = patternRegExp.exec(pattern.split(LIST_SEPARATOR)[0])[0].split(POINT);
  var integer = numberPatterns[0];
  var groupSize = integer.split(GROUP_SEPARATOR).slice(1).map(function(group) {
    return group.length;
  }).reverse();
  return groupSize;
}
function loadCurrencyUnitPatterns(currencyInfo, currencyFormats) {
  for (var field in currencyFormats) {
    if (field.startsWith("unitPattern")) {
      currencyInfo[field] = currencyFormats[field].replace("{0}", NUMBER_PLACEHOLDER).replace("{1}", CURRENCY_PLACEHOLDER);
    }
  }
}
function loadNumbersInfo(locale, info) {
  var localeInfo2 = cldr[locale];
  var numbers = localeInfo2.numbers = localeInfo2.numbers || {};
  numbers.symbols = numbers.symbols || {};
  for (var field in info) {
    if (field === LATIN_NUMBER_SYMBOLS) {
      Object.assign(numbers.symbols, info[field]);
    } else if (field.includes(LATIN_NUMBER_FORMATS)) {
      var style = field.substr(0, field.indexOf(LATIN_NUMBER_FORMATS));
      var pattern = info[field].standard;
      numbers[style] = {
        patterns: getPatterns(pattern)
      };
      if (style === CURRENCY) {
        numbers[style].groupSize = getGroupSize((info[DECIMAL + LATIN_NUMBER_FORMATS] || info[field]).standard);
        loadCurrencyUnitPatterns(numbers[style], info[field]);
        numbers[ACCOUNTING] = {
          patterns: getPatterns(info[field][ACCOUNTING]),
          groupSize: numbers[style].groupSize
        };
      } else {
        numbers[style].groupSize = getGroupSize(pattern);
      }
    } else if (field === "currencies") {
      numbers.currencies = info[field];
    }
  }
}

// node_modules/@progress/kendo-intl/dist/es/cldr/load-dates.js
var predefinedDatePatterns = {
  s: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
  u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'"
};
var YEAR_REGEX = /y+/g;
var SHORT_DATE = [["dateFormats", "short"]];
var datePatterns = {
  D: [["dateFormats", "full"]],
  m: [["dateTimeFormats", "availableFormats", "MMMd"]],
  M: [["dateTimeFormats", "availableFormats", "MMMMd"]],
  y: [["dateTimeFormats", "availableFormats", "yMMM"]],
  Y: [["dateTimeFormats", "availableFormats", "yMMMM"]],
  F: [["dateFormats", "full"], ["timeFormats", "medium"]],
  g: [["dateTimeFormats", "availableFormats", "yMd"], ["timeFormats", "short"]],
  G: [["dateTimeFormats", "availableFormats", "yMd"], ["timeFormats", "medium"]],
  t: [["timeFormats", "short"]],
  T: [["timeFormats", "medium"]]
};
function toArray(obj) {
  var result = [];
  var names = Object.getOwnPropertyNames(obj);
  for (var idx = 0; idx < names.length; idx++) {
    var value = obj[names[idx]];
    result.push(value);
  }
  return result;
}
function getCalendarNames(info, isObj) {
  var result = {};
  for (var formatType in info) {
    var names = result[formatType] = {};
    for (var format2 in info[formatType]) {
      var formats = info[formatType][format2];
      names[format2] = isObj ? formats : toArray(formats);
    }
  }
  return result;
}
function getEraNames(eras) {
  var result = {};
  var format2 = result.format = {};
  var eraNameMap = {
    eraAbbr: "abbreviated",
    eraNames: "wide",
    eraNarrow: "narrow"
  };
  for (var eraFormatName in eras) {
    var formatName = eraNameMap[eraFormatName];
    format2[formatName] = eras[eraFormatName];
  }
  return result;
}
function loadCalendarNames(locale, calendar) {
  var localeCalendar = cldr[locale].calendar;
  localeCalendar.days = getCalendarNames(calendar.days);
  localeCalendar.months = getCalendarNames(calendar.months);
  localeCalendar.quarters = getCalendarNames(calendar.quarters);
  localeCalendar.dayPeriods = getCalendarNames(calendar.dayPeriods, true);
  localeCalendar.eras = getEraNames(calendar.eras);
}
function loadCalendarDateFields(locale, fields) {
  var localeCalendar = cldr[locale].calendar;
  var dateFields = {};
  for (var field in fields) {
    var ref = field.split("-");
    var fieldName = ref[0];
    var formatType = ref[1];
    if (formatType === void 0) formatType = "wide";
    var fieldInfo = dateFields[fieldName] || {};
    var displayName = fields[field].displayName;
    if (!displayName) {
      continue;
    }
    fieldInfo[formatType] = displayName;
    dateFields[fieldName] = fieldInfo;
  }
  localeCalendar.dateFields = dateFields;
}
function getPredefinedFormat(paths, calendar) {
  var result = [];
  for (var pathIdx = 0; pathIdx < paths.length; pathIdx++) {
    var fields = paths[pathIdx];
    var pattern = calendar;
    for (var idx = 0; idx < fields.length; idx++) {
      pattern = pattern[fields[idx]];
    }
    result.push(pattern);
  }
  return result.join(" ");
}
function loadCalendarPatterns(locale, calendar) {
  var cldrCalendar = cldr[locale].calendar;
  var patterns = cldrCalendar.patterns = {};
  patterns.d = getPredefinedFormat(SHORT_DATE, calendar).replace(YEAR_REGEX, "y");
  for (var pattern in datePatterns) {
    patterns[pattern] = getPredefinedFormat(datePatterns[pattern], calendar);
  }
  for (var pattern$1 in predefinedDatePatterns) {
    patterns[pattern$1] = predefinedDatePatterns[pattern$1];
  }
  var dateTimeFormats = calendar.dateTimeFormats;
  cldrCalendar.dateTimeFormats = {
    full: dateTimeFormats.full,
    long: dateTimeFormats.long,
    medium: dateTimeFormats.medium,
    short: dateTimeFormats.short,
    availableFormats: dateTimeFormats.availableFormats
  };
  cldrCalendar.timeFormats = calendar.timeFormats;
  cldrCalendar.dateFormats = calendar.dateFormats;
}
function loadCalendarInfo(locale, info) {
  var calendar = cldr[locale].calendar = cldr[locale].calendar || {};
  for (var field in info) {
    if (field === "timeZoneNames") {
      calendar.gmtFormat = info[field].gmtFormat;
      calendar.gmtZeroFormat = info[field].gmtZeroFormat;
    } else if (field === "calendars" && info[field].gregorian) {
      loadCalendarPatterns(locale, info[field].gregorian);
      loadCalendarNames(locale, info[field].gregorian);
    } else if (field === "fields") {
      loadCalendarDateFields(locale, info.fields);
    }
  }
}

// node_modules/@progress/kendo-intl/dist/es/cldr/territory.js
function territoryFromName(name, identity) {
  var likelySubtags = cldr.supplemental.likelySubtags;
  var parts = name.split("-");
  if (likelySubtags) {
    var likelyName = likelySubtags[name] || likelySubtags[parts[0]];
    if (likelyName) {
      parts = likelyName.split("-");
    }
  }
  if (identity) {
    for (var idx = parts.length - 1; idx >= 1; idx--) {
      var part = parts[idx];
      if (part === identity.variant || part === identity.script) {
        parts.splice(idx, 1);
      }
    }
  }
  var length = parts.length;
  if (length > 1) {
    var territory = parts[length - 1];
    return territory.toUpperCase();
  }
}
function localeTerritory(info) {
  if (info.territory) {
    return info.territory;
  }
  var name = info.name;
  var identity = info.identity;
  var territory;
  if (identity && identity.territory) {
    territory = identity.territory;
  } else {
    territory = territoryFromName(name, identity);
  }
  info.territory = territory;
  return territory;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/load-units.js
var MILLISECOND = "duration-millisecond";
var UNIT_PATTERN_ONE = "unitPattern-count-one";
var UNIT_PATTERN_OTHER = "unitPattern-count-other";
var placeholderPattern = /\{0\}\s?/;
function extractUnit(unit) {
  var value = unit[UNIT_PATTERN_ONE] || unit[UNIT_PATTERN_OTHER];
  return value.replace(placeholderPattern, "");
}
function loadUnits(localeInfo2, units) {
  localeInfo2.calendar.dateFields.millisecond = {
    narrow: extractUnit(units.narrow[MILLISECOND]),
    short: extractUnit(units.short[MILLISECOND]),
    wide: extractUnit(units.long[MILLISECOND])
  };
}

// node_modules/@progress/kendo-intl/dist/es/cldr/load.js
function loadLocale(locale, info) {
  for (var field in info) {
    if (field === "numbers") {
      loadNumbersInfo(locale, info[field]);
    } else if (field === "dates") {
      loadCalendarInfo(locale, info[field]);
    }
  }
}
function load() {
  var arguments$1 = arguments;
  var length = arguments.length;
  for (var idx = 0; idx < length; idx++) {
    var entry = arguments$1[idx];
    if (entry.main) {
      var locale = Object.keys(entry.main)[0];
      var info = entry.main[locale];
      var localeInfo2 = cldr[locale] = cldr[locale] || {};
      if (info.units) {
        loadUnits(localeInfo2, info.units);
      } else {
        localeInfo2.name = localeInfo2.name || locale;
        localeInfo2.identity = localeInfo2.identity || info.identity;
        localeTerritory(localeInfo2);
        loadLocale(locale, info);
      }
    } else if (entry.supplemental) {
      if (entry.supplemental.weekData) {
        cldr.supplemental.weekData = {
          firstDay: entry.supplemental.weekData.firstDay,
          weekendStart: entry.supplemental.weekData.weekendStart,
          weekendEnd: entry.supplemental.weekData.weekendEnd
        };
      } else if (entry.supplemental.likelySubtags) {
        cldr.supplemental.likelySubtags = Object.assign(cldr.supplemental.likelySubtags, entry.supplemental.likelySubtags);
      } else if (entry.supplemental.currencyData) {
        var currencyData = cldr.supplemental.currencyData;
        currencyData.region = Object.assign(currencyData.region || {}, entry.supplemental.currencyData.region);
        currencyData.fractions = Object.assign(currencyData.fractions || {}, entry.supplemental.currencyData.fractions);
      }
    }
  }
}

// node_modules/@progress/kendo-intl/dist/es/cldr/date-field-name.js
function dateFieldName(options, locale) {
  if (locale === void 0) locale = DEFAULT_LOCALE;
  var info = localeInfo(locale);
  var dateFields = info.calendar.dateFields;
  if (!dateFields) {
    throw errors.NoDateFieldNames.error();
  }
  var fieldNameInfo = dateFields[options.type] || {};
  return fieldNameInfo[options.nameType] || fieldNameInfo["wide"];
}

// node_modules/@progress/kendo-intl/dist/es/cldr/date-format-names.js
function lowerArray(arr) {
  var result = [];
  for (var idx = 0; idx < arr.length; idx++) {
    result.push(arr[idx].toLowerCase());
  }
  return result;
}
function lowerObject(obj) {
  var result = {};
  for (var field in obj) {
    result[field] = obj[field].toLowerCase();
  }
  return result;
}
function cloneLower(obj) {
  var result = Array.isArray(obj) ? lowerArray(obj) : lowerObject(obj);
  return result;
}
function dateFormatNames(locale, options) {
  var type = options.type;
  var nameType = options.nameType;
  var standAlone = options.standAlone;
  var lower = options.lower;
  var info = getLocaleInfo(locale);
  var formatType = standAlone ? "stand-alone" : "format";
  var lowerNameType = (lower ? "lower-" : EMPTY) + nameType;
  var formatNames2 = info.calendar[type][formatType];
  var result = formatNames2[lowerNameType];
  if (!result && lower) {
    result = formatNames2[lowerNameType] = cloneLower(formatNames2[nameType]);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/parse-range-date.js
function parseRangeDate(value) {
  var parts = value.split("-");
  var year = parseInt(parts[0], 10);
  var month = parseInt(parts[1], 10) - 1;
  var day = parseInt(parts[2], 10);
  return new Date(year, month, day);
}

// node_modules/@progress/kendo-intl/dist/es/cldr/currency.js
var NoCurrency = errors.NoCurrency;
var NoCurrencyDisplay = errors.NoCurrencyDisplay;
var NoSupplementalCurrency = errors.NoSupplementalCurrency;
var NoCurrencyRegion = errors.NoCurrencyRegion;
var NoValidCurrency = errors.NoValidCurrency;
var DEFAULT_CURRENCY_FRACTIONS = 2;
var SYMBOL = "symbol";
var INVALID_CURRENCY_CODE = "XXX";
var GLOBAL_CURRENCIES = {
  "001": "USD",
  // 001 refers to world. not sure if it is correct to assume USD but seems better than throw an error
  "150": "EUR"
  // 150 territory for Europe
};
function getCurrencyInfo(locale, currency, throwIfNoValid) {
  var info = getLocaleInfo(locale);
  var currencies = info.numbers.currencies;
  if (!currencies) {
    if (throwIfNoValid) {
      throw NoCurrency.error();
    }
    return;
  }
  var currencyDisplayInfo = currencies[currency];
  if (!currencyDisplayInfo) {
    if (throwIfNoValid) {
      throw NoCurrencyDisplay.error();
    }
    return;
  }
  return currencyDisplayInfo;
}
function lengthComparer(a11, b3) {
  return b3.length - a11.length;
}
function regionCurrency(regionCurrencies) {
  var latestValidUntil, latestValidUntilRange;
  var latestStillValid, latestStillValidDate;
  for (var idx = 0; idx < regionCurrencies.length; idx++) {
    var currency = regionCurrencies[idx];
    var code = Object.keys(currency)[0];
    var info = currency[code];
    if (code !== INVALID_CURRENCY_CODE && info._tender !== "false" && info._from) {
      if (!info._to) {
        var stillValidDate = parseRangeDate(info._from);
        if (!latestStillValidDate || latestStillValidDate < stillValidDate) {
          latestStillValid = code;
          latestStillValidDate = stillValidDate;
        }
      } else if (!latestStillValid) {
        var validFrom = parseRangeDate(info._from);
        var validTo = parseRangeDate(info._to);
        if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {
          latestValidUntil = code;
          latestValidUntilRange = {
            from: validFrom,
            to: validTo
          };
        }
      }
    }
  }
  return latestStillValid || latestValidUntil;
}
function currencyDisplays(locale, currency, throwIfNoValid) {
  if (throwIfNoValid === void 0) throwIfNoValid = true;
  var currencyInfo = getCurrencyInfo(locale, currency, throwIfNoValid);
  if (!currencyInfo) {
    return;
  }
  if (!currencyInfo.displays) {
    var displays = [currency];
    for (var field in currencyInfo) {
      displays.push(currencyInfo[field]);
    }
    displays.sort(lengthComparer);
    currencyInfo.displays = displays;
  }
  return currencyInfo.displays;
}
function currencyDisplay(locale, options) {
  var value = options.value;
  var currency = options.currency;
  var currencyDisplay2 = options.currencyDisplay;
  if (currencyDisplay2 === void 0) currencyDisplay2 = SYMBOL;
  if (currencyDisplay2 === "code") {
    return currency;
  }
  var currencyInfo = getCurrencyInfo(locale, currency, true);
  var result;
  if (currencyDisplay2 === SYMBOL) {
    result = currencyInfo["symbol-alt-narrow"] || currencyInfo[SYMBOL] || currency;
  } else {
    if (typeof value === "undefined" || value !== 1) {
      result = currencyInfo["displayName-count-other"];
    } else {
      result = currencyInfo["displayName-count-one"];
    }
  }
  return result;
}
function currencyFractionOptions(code) {
  var minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;
  var maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;
  var fractions = ((cldr.supplemental.currencyData || {}).fractions || {})[code];
  if (fractions && fractions._digits) {
    maximumFractionDigits = minimumFractionDigits = parseInt(fractions._digits, 10);
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function territoryCurrencyCode(territory, throwIfNoValid) {
  if (throwIfNoValid === void 0) throwIfNoValid = true;
  if (GLOBAL_CURRENCIES[territory]) {
    return GLOBAL_CURRENCIES[territory];
  }
  var currencyData = cldr.supplemental.currencyData;
  if (!currencyData) {
    if (throwIfNoValid) {
      throw NoSupplementalCurrency.error();
    }
    return;
  }
  var regionCurrencies = currencyData.region[territory];
  if (!regionCurrencies) {
    if (throwIfNoValid) {
      throw NoCurrencyRegion.error(territory);
    }
    return;
  }
  var currencyCode = regionCurrency(regionCurrencies);
  return currencyCode;
}
function localeCurrency(locale, throwIfNoValid) {
  var info = getLocaleInfo(locale);
  var numbers = info.numbers;
  if (!numbers.localeCurrency) {
    var currency = territoryCurrencyCode(localeTerritory(info), throwIfNoValid);
    if (!currency && throwIfNoValid) {
      throw NoValidCurrency.error(info.name);
    }
    numbers.localeCurrency = currency;
  }
  return numbers.localeCurrency;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/constants.js
var DAYS_OF_WEEK = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];
var DEFAULT_TERRITORY = "001";

// node_modules/@progress/kendo-intl/dist/es/cldr/first-day.js
var NoWeekData = errors.NoWeekData;
var NoFirstDay = errors.NoFirstDay;
function firstDay(locale) {
  var info = getLocaleInfo(locale);
  if (!isNaN(info.firstDay)) {
    return info.firstDay;
  }
  var weekData = cldr.supplemental.weekData;
  if (!weekData) {
    throw NoWeekData.error();
  }
  var firstDay2 = weekData.firstDay[localeTerritory(info)] || weekData.firstDay[DEFAULT_TERRITORY];
  if (!firstDay2) {
    throw NoFirstDay.error();
  }
  info.firstDay = DAYS_OF_WEEK.indexOf(firstDay2);
  return info.firstDay;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/weekend-range.js
var NoWeekData2 = errors.NoWeekData;

// node_modules/@progress/kendo-intl/dist/es/cldr/number-symbols.js
function numberSymbols(locale) {
  var info = getLocaleInfo(locale);
  return info.numbers.symbols;
}

// node_modules/@progress/kendo-intl/dist/es/common/is-negative-zero.js
function isNegativeZero(value) {
  return 1 / value === -Infinity;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-currency-symbol.js
function formatCurrencySymbol(info, options) {
  if (options === void 0) options = {};
  if (!options.currency) {
    options.currency = localeCurrency(info, true);
  }
  var display = currencyDisplay(info, options);
  return display;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/group-integer.js
function groupInteger(number, start, end, options, info) {
  var symbols = info.numbers.symbols;
  var decimalIndex = number.indexOf(symbols.decimal);
  var groupSizes = options.groupSize.slice();
  var groupSize = groupSizes.shift();
  var integerEnd = decimalIndex !== -1 ? decimalIndex : end + 1;
  var integer = number.substring(start, integerEnd);
  var result = number;
  var integerLength = integer.length;
  if (integerLength >= groupSize) {
    var idx = integerLength;
    var parts = [];
    while (idx > -1) {
      var value = integer.substring(idx - groupSize, idx);
      if (value) {
        parts.push(value);
      }
      idx -= groupSize;
      var newGroupSize = groupSizes.shift();
      groupSize = newGroupSize !== void 0 ? newGroupSize : groupSize;
      if (groupSize === 0) {
        value = integer.substring(0, idx);
        if (value) {
          parts.push(value);
        }
        break;
      }
    }
    integer = parts.reverse().join(symbols.group);
    result = number.substring(0, start) + integer + number.substring(integerEnd);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/is-currency-style.js
function isCurrencyStyle(style) {
  return style === CURRENCY || style === ACCOUNTING;
}

// node_modules/@progress/kendo-intl/dist/es/common/pad.js
function pad(number, digits, right) {
  if (digits === void 0) digits = 2;
  if (right === void 0) right = false;
  var count = digits - String(number).length;
  var result = number;
  if (count > 0) {
    var padString = new Array(count + 1).join("0");
    result = right ? number + padString : padString + number;
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/common/round.js
var MAX_PRECISION = 20;
function round(value, precision) {
  var result = value;
  var decimals = precision || 0;
  result = result.toString().split("e");
  result = Math.round(Number(result[0] + "e" + (result[1] ? Number(result[1]) + decimals : decimals)));
  result = result.toString().split("e");
  result = Number(result[0] + "e" + (result[1] ? Number(result[1]) - decimals : -decimals));
  return result.toFixed(Math.min(decimals, MAX_PRECISION));
}

// node_modules/@progress/kendo-intl/dist/es/numbers/standard-number-format.js
var DEFAULT_DECIMAL_ROUNDING = 3;
var DEFAULT_PERCENT_ROUNDING = 0;
var trailingZeroRegex = /0+$/;
function fractionOptions(options) {
  var minimumFractionDigits = options.minimumFractionDigits;
  var maximumFractionDigits = options.maximumFractionDigits;
  var style = options.style;
  var isCurrency = isCurrencyStyle(style);
  var currencyFractions;
  if (isCurrency) {
    currencyFractions = currencyFractionOptions(options.currency);
  }
  if (minimumFractionDigits === void 0) {
    minimumFractionDigits = isCurrency ? currencyFractions.minimumFractionDigits : 0;
  }
  if (maximumFractionDigits === void 0) {
    if (style === PERCENT) {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_PERCENT_ROUNDING);
    } else if (isCurrency) {
      maximumFractionDigits = Math.max(minimumFractionDigits, currencyFractions.maximumFractionDigits);
    } else {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_DECIMAL_ROUNDING);
    }
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function applyPattern(value, pattern, symbol) {
  var result = EMPTY;
  for (var idx = 0, length = pattern.length; idx < length; idx++) {
    var ch = pattern.charAt(idx);
    if (ch === NUMBER_PLACEHOLDER) {
      result += value;
    } else if (ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER) {
      result += symbol;
    } else {
      result += ch;
    }
  }
  return result;
}
function currencyUnitPattern(info, value) {
  var currencyInfo = info.numbers.currency;
  var pattern = value !== 1 ? currencyInfo["unitPattern-count-other"] : currencyInfo["unitPattern-count-one"];
  if (value < 0) {
    pattern = pattern.replace(NUMBER_PLACEHOLDER, "-" + NUMBER_PLACEHOLDER);
  }
  return pattern;
}
function standardNumberFormat(number, options, info) {
  var symbols = info.numbers.symbols;
  var style = options.style;
  var isCurrency = isCurrencyStyle(style);
  if (style === SCIENTIFIC) {
    var exponential = options.minimumFractionDigits !== void 0 ? number.toExponential(options.minimumFractionDigits) : number.toExponential();
    return exponential.replace(POINT, symbols.decimal);
  }
  var value = number;
  var symbol;
  if (isCurrency) {
    options.value = value;
    symbol = formatCurrencySymbol(info, options);
  }
  if (style === PERCENT) {
    value *= 100;
    symbol = symbols.percentSign;
  }
  var ref = fractionOptions(options);
  var minimumFractionDigits = ref.minimumFractionDigits;
  var maximumFractionDigits = ref.maximumFractionDigits;
  value = round(value, maximumFractionDigits);
  var negative = value < 0;
  var negativeZero = isNegativeZero(number);
  var parts = value.split(POINT);
  var integer = parts[0];
  var fraction = pad(parts[1] ? parts[1].replace(trailingZeroRegex, EMPTY) : EMPTY, minimumFractionDigits, true);
  if (negative) {
    integer = integer.substring(1);
  }
  if (options.minimumIntegerDigits) {
    integer = pad(integer, options.minimumIntegerDigits);
  }
  var formattedValue = options.useGrouping !== false ? groupInteger(integer, 0, integer.length, options, info) : integer;
  if (fraction) {
    formattedValue += symbols.decimal + fraction;
  }
  var pattern;
  if (isCurrency && options.currencyDisplay === "name") {
    pattern = currencyUnitPattern(info, number);
  } else {
    var patterns = options.patterns;
    pattern = negative || negativeZero ? patterns[1] || "-" + patterns[0] : patterns[0];
  }
  if (pattern === NUMBER_PLACEHOLDER && !negative) {
    return formattedValue;
  }
  var result = applyPattern(formattedValue, pattern, symbol);
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/utils.js
var literalRegExp = /(\\.)|(['][^']*[']?)|(["][^"]*["]?)/g;
var PLACEHOLDER = "__??__";
function setStyleOptions(formatOptions2, info) {
  var format2 = formatOptions2.format;
  if (format2.indexOf(PERCENT_PLACEHOLDER) !== -1) {
    formatOptions2.style = PERCENT;
    formatOptions2.symbol = info.numbers.symbols.percentSign;
    formatOptions2.number *= 100;
  }
  if (format2.indexOf(CURRENCY_PLACEHOLDER) !== -1) {
    formatOptions2.style = CURRENCY;
    formatOptions2.symbol = formatCurrencySymbol(info);
  }
}
function setFormatLiterals(formatOptions2) {
  var format2 = formatOptions2.format;
  if (format2.indexOf("'") > -1 || format2.indexOf('"') > -1 || format2.indexOf("\\") > -1) {
    var literals = formatOptions2.literals = [];
    formatOptions2.format = format2.replace(literalRegExp, function(match) {
      var quoteChar = match.charAt(0).replace("\\", EMPTY);
      var literal = match.slice(1).replace(quoteChar, EMPTY);
      literals.push(literal);
      return PLACEHOLDER;
    });
  }
}
function replaceLiterals(number, literals) {
  var result = number;
  if (literals) {
    var length = literals.length;
    for (var idx = 0; idx < length; idx++) {
      result = result.replace(PLACEHOLDER, literals[idx]);
    }
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/custom-number-format.js
var SHARP = "#";
var ZERO = "0";
var trailingZerosRegExp = /(\.(?:[0-9]*[1-9])?)0+$/g;
var trailingPointRegExp = /\.$/;
var commaRegExp = /,/g;
function trimTrailingZeros(value, lastZero) {
  var trimRegex;
  if (lastZero === 0) {
    trimRegex = trailingZerosRegExp;
  } else {
    trimRegex = new RegExp("(\\.[0-9]{" + lastZero + "}[1-9]*)0+$", "g");
  }
  return value.replace(trimRegex, "$1").replace(trailingPointRegExp, EMPTY);
}
function roundNumber(formatOptions2) {
  var number = formatOptions2.number;
  var format2 = formatOptions2.format;
  var decimalIndex = format2.indexOf(POINT);
  if (decimalIndex !== -1) {
    var zeroIndex = format2.lastIndexOf(ZERO) - decimalIndex;
    var sharpIndex = format2.lastIndexOf(SHARP) - decimalIndex;
    var hasZero = zeroIndex > -1;
    var hasSharp = sharpIndex > -1;
    var fraction = number.toString().split("e");
    if (fraction[1]) {
      fraction = round(number, Math.abs(fraction[1]));
    } else {
      fraction = fraction[0];
    }
    fraction = fraction.split(POINT)[1] || EMPTY;
    var precision = fraction.length;
    var trailingZeros = -1;
    if (!hasZero && !hasSharp) {
      formatOptions2.format = format2.substring(0, decimalIndex) + format2.substring(decimalIndex + 1);
      decimalIndex = -1;
      precision = 0;
    } else if (hasZero && zeroIndex > sharpIndex) {
      precision = zeroIndex;
    } else if (sharpIndex > zeroIndex) {
      if (hasSharp && precision > sharpIndex) {
        precision = sharpIndex;
      } else if (hasZero && precision < zeroIndex) {
        precision = zeroIndex;
      }
      trailingZeros = hasZero ? zeroIndex : 0;
    }
    if (precision > -1) {
      number = round(number, precision);
      if (trailingZeros > -1) {
        number = trimTrailingZeros(number, trailingZeros);
      }
    }
  } else {
    number = round(number);
  }
  if (formatOptions2.negative && number * -1 >= 0 && !formatOptions2.negativeZero) {
    formatOptions2.negative = false;
  }
  formatOptions2.number = number;
  formatOptions2.decimalIndex = decimalIndex;
}
function isConstantFormat(format2) {
  return format2.indexOf(SHARP) === -1 && format2.indexOf(ZERO) === -1;
}
function setValueSpecificFormat(formatOptions2) {
  var number = formatOptions2.number;
  var format2 = formatOptions2.format;
  format2 = format2.split(LIST_SEPARATOR);
  if ((formatOptions2.negative || formatOptions2.negativeZero) && format2[1]) {
    format2 = format2[1];
    formatOptions2.hasNegativeFormat = true;
  } else if (number === 0) {
    var zeroFormat = format2[2];
    format2 = zeroFormat || format2[0];
    if (zeroFormat && isConstantFormat(zeroFormat)) {
      formatOptions2.constant = zeroFormat;
    }
  } else {
    format2 = format2[0];
  }
  formatOptions2.format = format2;
}
function setGroupOptions(formatOptions2) {
  formatOptions2.hasGroup = formatOptions2.format.indexOf(GROUP_SEPARATOR) > -1;
  if (formatOptions2.hasGroup) {
    formatOptions2.format = formatOptions2.format.replace(commaRegExp, EMPTY);
  }
}
function placeholderIndex(index1, index2, start) {
  var index;
  if (index1 === -1 && index2 !== -1) {
    index = index2;
  } else if (index1 !== -1 && index2 === -1) {
    index = index1;
  } else {
    index = start ? Math.min(index1, index2) : Math.max(index1, index2);
  }
  return index;
}
function setPlaceholderIndices(formatOptions2) {
  var format2 = formatOptions2.format;
  var sharpIndex = format2.indexOf(SHARP);
  var zeroIndex = format2.indexOf(ZERO);
  var start = placeholderIndex(sharpIndex, zeroIndex, true);
  sharpIndex = format2.lastIndexOf(SHARP);
  zeroIndex = format2.lastIndexOf(ZERO);
  var end = placeholderIndex(sharpIndex, zeroIndex);
  if (start === format2.length) {
    end = start;
  }
  formatOptions2.start = start;
  formatOptions2.end = end;
  formatOptions2.lastZeroIndex = zeroIndex;
}
function replaceStyleSymbols(number, style, symbol) {
  var result = number;
  if (style === CURRENCY || style === PERCENT) {
    result = EMPTY;
    for (var idx = 0, length = number.length; idx < length; idx++) {
      var ch = number.charAt(idx);
      result += ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER ? symbol : ch;
    }
  }
  return result;
}
function replacePlaceHolders(formatOptions2, info) {
  var start = formatOptions2.start;
  var end = formatOptions2.end;
  var negative = formatOptions2.negative;
  var negativeZero = formatOptions2.negativeZero;
  var format2 = formatOptions2.format;
  var decimalIndex = formatOptions2.decimalIndex;
  var lastZeroIndex = formatOptions2.lastZeroIndex;
  var hasNegativeFormat = formatOptions2.hasNegativeFormat;
  var hasGroup = formatOptions2.hasGroup;
  var number = formatOptions2.number;
  var value = number.toString().split(POINT);
  var length = format2.length;
  var integer = value[0];
  var fraction = value[1] || EMPTY;
  var integerLength = integer.length;
  var replacement = EMPTY;
  number = format2.substring(0, start);
  if ((negative || negativeZero) && !hasNegativeFormat) {
    number += "-";
  }
  for (var idx = start; idx < length; idx++) {
    var ch = format2.charAt(idx);
    if (decimalIndex === -1) {
      if (end - idx < integerLength) {
        number += integer;
        break;
      }
    } else {
      if (lastZeroIndex !== -1 && lastZeroIndex < idx) {
        replacement = EMPTY;
      }
      if (decimalIndex - idx <= integerLength && decimalIndex - idx > -1) {
        number += integer;
        idx = decimalIndex;
      }
      if (decimalIndex === idx) {
        number += (fraction ? info.numbers.symbols.decimal : EMPTY) + fraction;
        idx += end - decimalIndex + 1;
        continue;
      }
    }
    if (ch === ZERO) {
      number += ch;
      replacement = ch;
    } else if (ch === SHARP) {
      number += replacement;
    }
  }
  if (hasGroup) {
    number = groupInteger(number, start + (negative && !hasNegativeFormat ? 1 : 0), Math.max(end, integerLength + start), info.numbers.decimal, info);
  }
  if (end >= start) {
    number += format2.substring(end + 1);
  }
  return number;
}
function applyCustomFormat(formatOptions2, info) {
  var number = formatOptions2.number;
  if (formatOptions2.start !== -1) {
    number = replacePlaceHolders(formatOptions2, info);
    number = replaceStyleSymbols(number, formatOptions2.style, formatOptions2.symbol);
    number = replaceLiterals(number, formatOptions2.literals);
  }
  return number;
}
function customNumberFormat(number, format2, info) {
  var formatOptions2 = {
    negative: number < 0,
    number: Math.abs(number),
    negativeZero: isNegativeZero(number),
    format: format2
  };
  setValueSpecificFormat(formatOptions2);
  if (formatOptions2.constant) {
    return formatOptions2.constant;
  }
  setFormatLiterals(formatOptions2);
  setStyleOptions(formatOptions2, info);
  setGroupOptions(formatOptions2);
  roundNumber(formatOptions2);
  setPlaceholderIndices(formatOptions2);
  return applyCustomFormat(formatOptions2, info);
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-options.js
var standardFormatRegExp = /^(n|c|p|e|a)(\d*)$/i;
function standardFormatOptions(format2) {
  var formatAndPrecision = standardFormatRegExp.exec(format2);
  if (formatAndPrecision) {
    var options = {
      style: DECIMAL
    };
    var style = formatAndPrecision[1].toLowerCase();
    if (style === "c") {
      options.style = CURRENCY;
    } else if (style === "a") {
      options.style = ACCOUNTING;
    } else if (style === "p") {
      options.style = PERCENT;
    } else if (style === "e") {
      options.style = SCIENTIFIC;
    }
    if (formatAndPrecision[2]) {
      options.minimumFractionDigits = options.maximumFractionDigits = parseInt(formatAndPrecision[2], 10);
    }
    return options;
  }
}
function formatOptions(format2) {
  var options;
  if (isString(format2)) {
    options = standardFormatOptions(format2);
  } else {
    options = format2;
  }
  return options;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-number.js
function formatNumber(number, format2, locale) {
  if (format2 === void 0) format2 = NUMBER_PLACEHOLDER;
  if (locale === void 0) locale = DEFAULT_LOCALE;
  if (number === void 0 || number === null) {
    return EMPTY;
  }
  if (!isFinite(number)) {
    return String(number);
  }
  var info = localeInfo(locale);
  var options = formatOptions(format2);
  var result;
  if (options) {
    var style = options.style || DECIMAL;
    result = standardNumberFormat(number, Object.assign({}, info.numbers[style], options), info);
  } else {
    result = customNumberFormat(number, format2, info);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/common/is-number.js
function isNumber(value) {
  return typeof value === "number";
}

// node_modules/@progress/kendo-intl/dist/es/numbers/parse-number.js
var exponentRegExp = /[eE][-+]?[0-9]+/;
var nonBreakingSpaceRegExp = /\u00A0/g;
function cleanNegativePattern(number, patterns) {
  if (patterns.length > 1) {
    var parts = (patterns[1] || EMPTY).replace(CURRENCY_PLACEHOLDER, EMPTY).split(NUMBER_PLACEHOLDER);
    if (number.indexOf(parts[0]) > -1 && number.indexOf(parts[1]) > -1) {
      return number.replace(parts[0], EMPTY).replace(parts[1], EMPTY);
    }
  }
}
function cleanCurrencyNumber(value, info, format2) {
  var options = formatOptions(format2) || {};
  var isCurrency = isCurrencyStyle(options.style);
  var number = value;
  var negative;
  var currency = options.currency || localeCurrency(info, isCurrency);
  if (currency) {
    var displays = currencyDisplays(info, currency, isCurrency);
    if (displays) {
      for (var idx = 0; idx < displays.length; idx++) {
        var display = displays[idx];
        if (number.includes(display)) {
          number = number.replace(display, EMPTY);
          isCurrency = true;
          break;
        }
      }
    }
    if (isCurrency) {
      var cleanNumber = cleanNegativePattern(number, info.numbers.currency.patterns) || cleanNegativePattern(number, info.numbers.accounting.patterns);
      if (cleanNumber) {
        negative = true;
        number = cleanNumber;
      }
    }
  }
  return {
    number,
    negative
  };
}
function cleanLiterals(number, formatOptions2) {
  var literals = formatOptions2.literals;
  var result = number;
  if (literals) {
    for (var idx = 0; idx < literals.length; idx++) {
      result = result.replace(literals[idx], EMPTY);
    }
  }
  return result;
}
function divideBy100(number) {
  var strNumber = String(number);
  var pointIndex = strNumber.indexOf(POINT);
  var zeroesCount = 2;
  var result = number / Math.pow(10, zeroesCount);
  if (pointIndex === -1 || String(result).length <= strNumber.length + zeroesCount) {
    return result;
  }
  var fractionDigits = strNumber.length - pointIndex + 1 + zeroesCount;
  return parseFloat(result.toFixed(fractionDigits));
}
function parseNumber(value, locale, format2) {
  if (locale === void 0) locale = DEFAULT_LOCALE;
  if (format2 === void 0) format2 = {};
  if (!value && value !== 0) {
    return null;
  }
  if (isNumber(value)) {
    return value;
  }
  var info = localeInfo(locale);
  var symbols = info.numbers.symbols;
  var number = value.toString();
  var formatOptions2 = format2 || {};
  var isPercent;
  if (isString(format2)) {
    formatOptions2 = { format: format2 };
    setFormatLiterals(formatOptions2);
    number = cleanLiterals(number, formatOptions2);
    setStyleOptions(formatOptions2, info);
  }
  if (formatOptions2.style === PERCENT || number.indexOf(symbols.percentSign) > -1) {
    number = number.replace(symbols.percentSign, EMPTY);
    isPercent = true;
  }
  if (exponentRegExp.test(number)) {
    number = parseFloat(number.replace(symbols.decimal, POINT));
    return isNaN(number) ? null : number;
  }
  var ref = cleanCurrencyNumber(number, info, formatOptions2);
  var negativeCurrency = ref.negative;
  var currencyNumber = ref.number;
  number = String(currencyNumber).trim();
  var negativeSignIndex = number.indexOf("-");
  if (negativeSignIndex > 0) {
    return null;
  }
  var isNegative = negativeSignIndex > -1;
  isNegative = negativeCurrency !== void 0 ? negativeCurrency : isNegative;
  number = number.replace("-", EMPTY).replace(nonBreakingSpaceRegExp, " ").split(symbols.group.replace(nonBreakingSpaceRegExp, " ")).join(EMPTY).replace(symbols.decimal, POINT);
  number = parseFloat(number);
  if (isNaN(number)) {
    number = null;
  } else if (isNegative) {
    number *= -1;
  }
  if (number && isPercent) {
    number = divideBy100(number);
  }
  return number;
}

// node_modules/@progress/kendo-intl/dist/es/common/format-string.js
var formatRegExp2 = /\{(\d+)}/g;
function formatString(format2) {
  var values = arguments;
  return format2.replace(formatRegExp2, function(match, index) {
    var value = values[parseInt(index, 10) + 1];
    return value;
  });
}

// node_modules/@progress/kendo-intl/dist/es/dates/date-pattern.js
var REMOVAL_PENALTY = 120;
var ADDITION_PENALTY = 20;
var LENGHT_DELTA = [2, 1, 5, 3, 4];
var LONG_LESS_PENALTY_DELTA = -2;
var SHORT_LESS_PENALTY_DELTA = -1;
var SHORT_MORE_PENALTY_DELTA = 1;
var LONG_MORE_PENALTY_DELTA = 2;
var PENALTIES = {};
PENALTIES[LONG_LESS_PENALTY_DELTA.toString()] = 8;
PENALTIES[SHORT_LESS_PENALTY_DELTA.toString()] = 6;
PENALTIES[LONG_MORE_PENALTY_DELTA.toString()] = 6;
PENALTIES[SHORT_MORE_PENALTY_DELTA.toString()] = 3;
var VALUE_FORMAT_LENGTH = {
  numeric: 1,
  "2-digit": 2,
  short: 3,
  long: 4,
  narrow: 5
};
var TIME_SPECIFIERS_REGEX = /[hHmsSzZoOvVxX]/;
function getHourSpecifier(options) {
  return options.hour12 ? "h" : "H";
}
var DATE_OPTIONS_MAP = [{
  key: "era",
  specifier: "G"
}, {
  key: "year",
  specifier: "y"
}, {
  key: "month",
  specifier: "M"
}, {
  key: "day",
  specifier: "d"
}, {
  key: "weekday",
  specifier: "E"
}, {
  key: "hour",
  getSpecifier: getHourSpecifier
}, {
  key: "minute",
  specifier: "m"
}, {
  key: "second",
  specifier: "s"
}, {
  key: "timeZoneName",
  specifier: "z"
}];
var STAND_ALONE_SPECIFIERS = {
  e: "c",
  E: "c",
  M: "L",
  Q: "q"
};
var specifiersRegex = {};
var resolvedFormats = {};
function getSpecifierRegex(specifier) {
  if (!specifiersRegex[specifier]) {
    specifiersRegex[specifier] = new RegExp(specifier + "+");
  }
  return specifiersRegex[specifier];
}
function skeletonSpecifiers(skeleton) {
  var result = [];
  var current = skeleton.charAt(0);
  var specifier = current;
  for (var idx = 1; idx < skeleton.length; idx++) {
    var character = skeleton.charAt(idx);
    if (character === specifier) {
      current += character;
    } else {
      result.push(current);
      current = specifier = character;
    }
  }
  result.push(current);
  return result;
}
function findBestMatch(specifiers, availableFormats) {
  var specifiersLength = specifiers.length;
  var maxScore = -Number.MAX_VALUE;
  var bestMatches, result;
  for (var format2 in availableFormats) {
    var matches = [];
    var currentFormat = format2.replace("v", "z");
    var score = 0;
    for (var idx = 0; idx < specifiersLength; idx++) {
      var specifier = specifiers[idx];
      var specifierRegex = getSpecifierRegex(specifier[0]);
      var match = (specifierRegex.exec(currentFormat) || [])[0];
      if (!match) {
        score -= REMOVAL_PENALTY;
      } else {
        currentFormat = currentFormat.replace(match, EMPTY);
        if (match.length !== specifier.length) {
          var delta = Math.max(Math.min(LENGHT_DELTA[match.length] - LENGHT_DELTA[specifier.length], 2), -2);
          score -= PENALTIES[delta];
        }
      }
      matches.push(match);
      if (score < maxScore) {
        break;
      }
    }
    if (currentFormat.length) {
      score -= skeletonSpecifiers(currentFormat).length * ADDITION_PENALTY;
    }
    if (score > maxScore) {
      maxScore = score;
      bestMatches = matches;
      result = availableFormats[format2];
    }
  }
  result = result.replace("v", "z");
  for (var idx$1 = 0; idx$1 < specifiersLength; idx$1++) {
    var bestMatch = bestMatches[idx$1];
    if (bestMatch && bestMatch !== specifiers[idx$1]) {
      var matchSpecifier = bestMatches[idx$1][0];
      result = result.replace(getSpecifierRegex(matchSpecifier), specifiers[idx$1]);
      if (STAND_ALONE_SPECIFIERS[matchSpecifier]) {
        result = result.replace(getSpecifierRegex(STAND_ALONE_SPECIFIERS[matchSpecifier]), specifiers[idx$1]);
      }
    }
  }
  return result;
}
function cacheFormat(skeleton, format2, locale) {
  if (!resolvedFormats[locale]) {
    resolvedFormats[locale] = {};
  }
  resolvedFormats[locale][skeleton] = format2;
}
function skeletonFormat(skeleton, info) {
  var availableFormats = info.calendar.dateTimeFormats.availableFormats;
  if (availableFormats[skeleton]) {
    return availableFormats[skeleton];
  }
  if (resolvedFormats[info.name] && resolvedFormats[info.name][skeleton]) {
    return resolvedFormats[info.name][skeleton];
  }
  var timeStartIndex = skeleton.search(TIME_SPECIFIERS_REGEX);
  var result;
  if (timeStartIndex > 0) {
    var dateSkeleton = skeleton.substr(0, timeStartIndex);
    var timeSkeleton = skeleton.substr(timeStartIndex);
    result = formatString(
      info.calendar.dateTimeFormats.short,
      //should be deterimed based on specifiers
      availableFormats[timeSkeleton] || findBestMatch(skeletonSpecifiers(timeSkeleton), availableFormats),
      availableFormats[dateSkeleton] || findBestMatch(skeletonSpecifiers(dateSkeleton), availableFormats)
    );
  } else {
    result = findBestMatch(skeletonSpecifiers(skeleton), availableFormats);
  }
  cacheFormat(skeleton, result, info.name);
  return result;
}
function skeletonFromOptions(options) {
  var result = [];
  for (var idx = 0; idx < DATE_OPTIONS_MAP.length; idx++) {
    var option = DATE_OPTIONS_MAP[idx];
    var field = option.key;
    var value = options[field];
    if (value) {
      var spcifier = option.specifier || option.getSpecifier(options);
      result.push(spcifier.repeat(VALUE_FORMAT_LENGTH[value]));
    }
  }
  return result.join(EMPTY);
}
function datePattern(format2, info) {
  var calendar = info.calendar;
  var result;
  if (isString(format2)) {
    if (calendar.patterns[format2]) {
      result = calendar.patterns[format2];
    } else {
      result = format2;
    }
  } else if (format2) {
    if (format2.pattern) {
      return format2.pattern;
    }
    var skeleton = format2.skeleton;
    if (!skeleton) {
      if (format2.datetime) {
        result = formatString(calendar.dateTimeFormats[format2.datetime], calendar.timeFormats[format2.datetime], calendar.dateFormats[format2.datetime]);
      } else if (format2.date) {
        result = calendar.dateFormats[format2.date];
      } else if (format2.time) {
        result = calendar.timeFormats[format2.time];
      } else {
        skeleton = skeletonFromOptions(format2);
      }
    }
    if (skeleton) {
      result = skeletonFormat(skeleton, info);
    }
  }
  if (!result) {
    result = calendar.patterns.d;
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/dates/date-name-type.js
function dateNameType(formatLength) {
  var nameType;
  if (formatLength <= 3) {
    nameType = "abbreviated";
  } else if (formatLength === 4) {
    nameType = "wide";
  } else if (formatLength === 5) {
    nameType = "narrow";
  } else if (formatLength === 6) {
    nameType = "short";
  }
  return nameType;
}

// node_modules/@progress/kendo-intl/dist/es/dates/format-names.js
function formatNames(locale, type, formatLength, standAlone, lower) {
  return dateFormatNames(locale, {
    type,
    nameType: dateNameType(formatLength),
    standAlone,
    lower
  });
}

// node_modules/@progress/kendo-intl/dist/es/common/is-date.js
function isFunction(fun) {
  return typeof fun === "function";
}
function isDate(value) {
  return Boolean(value) && isFunction(value.getTime) && isFunction(value.getMonth);
}

// node_modules/@progress/kendo-intl/dist/es/dates/constants.js
var MONTH = "month";
var HOUR = "hour";
var ZONE = "zone";
var WEEKDAY = "weekday";
var QUARTER = "quarter";
var DATE_FIELD_MAP = {
  "G": "era",
  "y": "year",
  "q": QUARTER,
  "Q": QUARTER,
  "M": MONTH,
  "L": MONTH,
  "d": "day",
  "E": WEEKDAY,
  "c": WEEKDAY,
  "e": WEEKDAY,
  "h": HOUR,
  "H": HOUR,
  "k": HOUR,
  "K": HOUR,
  "m": "minute",
  "s": "second",
  "S": "millisecond",
  "a": "dayperiod",
  "x": ZONE,
  "X": ZONE,
  "z": ZONE,
  "Z": ZONE
};
var dateFormatRegExp = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|k{1,2}|K{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|"[^"]*"|'[^']*'/g;

// node_modules/@progress/kendo-intl/dist/es/dates/format-date.js
function formatDayOfWeekIndex(day, formatLength, localeInfo2) {
  var firstDayIndex = firstDay(localeInfo2);
  var dayIndex;
  if (day < firstDayIndex) {
    dayIndex = 7 - firstDayIndex + day;
  } else {
    dayIndex = day - firstDayIndex;
  }
  return dayIndex + 1;
}
function formatMonth(month, formatLength, info, standAlone) {
  if (formatLength <= 2) {
    return pad(month + 1, formatLength);
  }
  return formatNames(info, "months", formatLength, standAlone)[month];
}
function formatQuarter(date, formatLength, info, standAlone) {
  var quarter = Math.floor(date.getMonth() / 3);
  if (formatLength < 3) {
    return quarter + 1;
  }
  return formatNames(info, "quarters", formatLength, standAlone)[quarter];
}
function formatTimeZone(date, info, options) {
  var shortHours = options.shortHours;
  var optionalMinutes = options.optionalMinutes;
  var separator = options.separator;
  var localizedName = options.localizedName;
  var zZeroOffset = options.zZeroOffset;
  var offset3 = date.getTimezoneOffset() / 60;
  if (offset3 === 0 && zZeroOffset) {
    return "Z";
  }
  var sign = offset3 <= 0 ? "+" : "-";
  var hoursMinutes = Math.abs(offset3).toString().split(".");
  var minutes = hoursMinutes[1] || 0;
  var result = sign + (shortHours ? hoursMinutes[0] : pad(hoursMinutes[0], 2));
  if (minutes || !optionalMinutes) {
    result += (separator ? ":" : EMPTY) + pad(minutes, 2);
  }
  if (localizedName) {
    var localizedFormat = offset3 === 0 ? info.calendar.gmtZeroFormat : info.calendar.gmtFormat;
    result = formatString(localizedFormat, result);
  }
  return result;
}
function formatDayOfWeek(date, formatLength, info, standAlone) {
  var result;
  if (formatLength < 3) {
    result = formatDayOfWeekIndex(date.getDay(), formatLength, info);
  } else {
    result = formatNames(info, "days", formatLength, standAlone)[date.getDay()];
  }
  return result;
}
var formatters = {};
formatters.d = function(date, formatLength) {
  return pad(date.getDate(), formatLength);
};
formatters.E = function(date, formatLength, info) {
  return formatNames(info, "days", formatLength)[date.getDay()];
};
formatters.M = function(date, formatLength, info) {
  return formatMonth(date.getMonth(), formatLength, info, false);
};
formatters.L = function(date, formatLength, info) {
  return formatMonth(date.getMonth(), formatLength, info, true);
};
formatters.y = function(date, formatLength) {
  var year = date.getFullYear();
  if (formatLength === 2) {
    year = year % 100;
  }
  return pad(year, formatLength);
};
formatters.h = function(date, formatLength) {
  var hours = date.getHours() % 12 || 12;
  return pad(hours, formatLength);
};
formatters.H = function(date, formatLength) {
  return pad(date.getHours(), formatLength);
};
formatters.k = function(date, formatLength) {
  return pad(date.getHours() || 24, formatLength);
};
formatters.K = function(date, formatLength) {
  return pad(date.getHours() % 12, formatLength);
};
formatters.m = function(date, formatLength) {
  return pad(date.getMinutes(), formatLength);
};
formatters.s = function(date, formatLength) {
  return pad(date.getSeconds(), formatLength);
};
formatters.S = function(date, formatLength) {
  var milliseconds = date.getMilliseconds();
  var result;
  if (milliseconds !== 0) {
    result = pad(String(milliseconds / 1e3).split(".")[1].substr(0, formatLength), formatLength, true);
  } else {
    result = pad(EMPTY, formatLength);
  }
  return result;
};
formatters.a = function(date, formatLength, info) {
  return formatNames(info, "dayPeriods", formatLength)[date.getHours() < 12 ? "am" : "pm"];
};
formatters.z = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    shortHours: formatLength < 4,
    optionalMinutes: formatLength < 4,
    separator: true,
    localizedName: true
  });
};
formatters.Z = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    separator: formatLength > 3,
    localizedName: formatLength === 4,
    zZeroOffset: formatLength === 5
  });
};
formatters.x = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5
  });
};
formatters.X = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5,
    zZeroOffset: true
  });
};
formatters.G = function(date, formatLength, info) {
  var era = date.getFullYear() >= 0 ? 1 : 0;
  return formatNames(info, "eras", formatLength)[era];
};
formatters.e = formatDayOfWeek;
formatters.c = function(date, formatLength, info) {
  return formatDayOfWeek(date, formatLength, info, true);
};
formatters.q = function(date, formatLength, info) {
  return formatQuarter(date, formatLength, info, true);
};
formatters.Q = formatQuarter;
function formatDate(date, format2, locale) {
  if (locale === void 0) locale = DEFAULT_LOCALE;
  if (!isDate(date)) {
    if (date === void 0 || date === null) {
      return EMPTY;
    }
    return date;
  }
  var info = localeInfo(locale);
  var pattern = datePattern(format2, info);
  return pattern.replace(dateFormatRegExp, function(match) {
    var formatLength = match.length;
    var result;
    if (match.includes("'") || match.includes('"')) {
      result = match.slice(1, formatLength - 1);
    } else {
      result = formatters[match[0]](date, formatLength, info);
    }
    return result;
  });
}

// node_modules/@progress/kendo-intl/dist/es/dates/time-utils.js
function convertTimeZone(date, fromOffset, toOffset) {
  var fromLocalOffset = date.getTimezoneOffset();
  var offsetDate = new Date(date.getTime() + (fromOffset - toOffset) * 6e4);
  var toLocalOffset = offsetDate.getTimezoneOffset();
  return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 6e4);
}
function adjustDST(date, hours) {
  if (!hours && date.getHours() === 23) {
    date.setHours(date.getHours() + 2);
  }
}

// node_modules/@progress/kendo-intl/dist/es/dates/parse-date.js
var timeZoneOffsetRegExp = /([+|-]\d{1,2})(:?)(\d{2})?/;
var dateRegExp = /^\/Date\((.*?)\)\/$/;
var offsetRegExp = /[+-]\d*/;
var numberRegExp = {
  2: /^\d{1,2}/,
  3: /^\d{1,3}/,
  4: /^\d{4}/
};
var numberRegex = /\d+/;
var PLACEHOLDER2 = "{0}";
var leadingSpacesRegex = /^ */;
var trailingSpacesRegex = / *$/;
var standardDateFormats = [
  "yyyy/MM/dd HH:mm:ss",
  "yyyy/MM/dd HH:mm",
  "yyyy/MM/dd",
  "E MMM dd yyyy HH:mm:ss",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSXXX",
  "yyyy-MM-ddTHH:mm:ssXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSS",
  "yyyy-MM-ddTHH:mm:ss.SSS",
  "yyyy-MM-ddTHH:mmXXX",
  "yyyy-MM-ddTHH:mmX",
  "yyyy-MM-ddTHH:mm:ss",
  "yyyy-MM-ddTHH:mm",
  "yyyy-MM-dd HH:mm:ss",
  "yyyy-MM-dd HH:mm",
  "yyyy-MM-dd",
  "HH:mm:ss",
  "HH:mm"
];
var FORMATS_SEQUENCE = ["G", "g", "F", "Y", "y", "M", "m", "D", "d", "y", "T", "t"];
var TWO_DIGIT_YEAR_MAX = 2029;
function outOfRange(value, start, end) {
  return !(value >= start && value <= end);
}
function lookAhead(match, state) {
  var format2 = state.format;
  var idx = state.idx;
  var i10 = 0;
  while (format2[idx] === match) {
    i10++;
    idx++;
  }
  if (i10 > 0) {
    idx -= 1;
  }
  state.idx = idx;
  return i10;
}
function getNumber(size, state) {
  var regex = size ? numberRegExp[size] || new RegExp("^\\d{1," + size + "}") : numberRegex, match = state.value.substr(state.valueIdx, size).match(regex);
  if (match) {
    match = match[0];
    state.valueIdx += match.length;
    return parseInt(match, 10);
  }
  return null;
}
function getIndexByName(names, state, lower) {
  var i10 = 0, length = names.length, name, nameLength, matchLength = 0, matchIdx = 0, subValue;
  for (; i10 < length; i10++) {
    name = names[i10];
    nameLength = name.length;
    subValue = state.value.substr(state.valueIdx, nameLength);
    if (lower) {
      subValue = subValue.toLowerCase();
    }
    if (subValue === name && nameLength > matchLength) {
      matchLength = nameLength;
      matchIdx = i10;
    }
  }
  if (matchLength) {
    state.valueIdx += matchLength;
    return matchIdx + 1;
  }
  return null;
}
function checkLiteral(state) {
  var result = false;
  if (state.value.charAt(state.valueIdx) === state.format[state.idx]) {
    state.valueIdx++;
    result = true;
  }
  return result;
}
function calendarGmtFormats(calendar) {
  var gmtFormat = calendar.gmtFormat;
  var gmtZeroFormat = calendar.gmtZeroFormat;
  if (!gmtFormat) {
    throw errors.NoGMTInfo.error();
  }
  return [gmtFormat.replace(PLACEHOLDER2, EMPTY).toLowerCase(), gmtZeroFormat.replace(PLACEHOLDER2, EMPTY).toLowerCase()];
}
function parseTimeZoneOffset(state, info, options) {
  var shortHours = options.shortHours;
  var noSeparator = options.noSeparator;
  var optionalMinutes = options.optionalMinutes;
  var localizedName = options.localizedName;
  var zLiteral = options.zLiteral;
  state.UTC = true;
  if (zLiteral && state.value.charAt(state.valueIdx) === "Z") {
    state.valueIdx++;
    return false;
  }
  if (localizedName && !getIndexByName(calendarGmtFormats(info.calendar), state, true)) {
    return true;
  }
  var matches = timeZoneOffsetRegExp.exec(state.value.substr(state.valueIdx, 6));
  if (!matches) {
    return !localizedName;
  }
  var hoursMatch = matches[1];
  var minutesMatch = matches[3];
  var hoursOffset = parseInt(hoursMatch, 10);
  var separator = matches[2];
  var minutesOffset = parseInt(minutesMatch, 10);
  if (isNaN(hoursOffset) || !shortHours && hoursMatch.length !== 3 || !optionalMinutes && isNaN(minutesOffset) || noSeparator && separator) {
    return true;
  }
  if (isNaN(minutesOffset)) {
    minutesOffset = null;
  }
  if (outOfRange(hoursOffset, -12, 13) || minutesOffset && outOfRange(minutesOffset, 0, 59)) {
    return true;
  }
  state.valueIdx += matches[0].length;
  state.hoursOffset = hoursOffset;
  state.minutesOffset = minutesOffset;
}
function parseMonth(ch, state, info) {
  var count = lookAhead(ch, state);
  var names = formatNames(info, "months", count, ch === "L", true);
  var month = count < 3 ? getNumber(2, state) : getIndexByName(names, state, true);
  if (month === null || outOfRange(month, 1, 12)) {
    return true;
  }
  state.month = month - 1;
}
function parseDayOfWeek(ch, state, info) {
  var count = lookAhead(ch, state);
  var names = formatNames(info, "days", count, ch === "c", true);
  var dayOfWeek = count < 3 ? getNumber(1, state) : getIndexByName(names, state, true);
  if (!dayOfWeek && dayOfWeek !== 0 || outOfRange(dayOfWeek, 1, 7)) {
    return true;
  }
}
var parsers = {};
parsers.d = function(state) {
  lookAhead("d", state);
  var day = getNumber(2, state);
  if (day === null || outOfRange(day, 1, 31)) {
    return true;
  }
  if (state.day === null) {
    state.day = day;
  }
};
parsers.E = function(state, info) {
  var count = lookAhead("E", state);
  var dayOfWeek = getIndexByName(formatNames(info, "days", count, false, true), state, true);
  if (dayOfWeek === null) {
    return true;
  }
};
parsers.M = function(state, info) {
  return parseMonth("M", state, info);
};
parsers.L = function(state, info) {
  return parseMonth("L", state, info);
};
parsers.y = function(state) {
  var count = lookAhead("y", state);
  var year = getNumber(count === 1 ? void 0 : count, state);
  if (year === null) {
    return true;
  }
  if (count === 2) {
    var currentYear = (/* @__PURE__ */ new Date()).getFullYear();
    year = currentYear - currentYear % 100 + year;
    if (year > TWO_DIGIT_YEAR_MAX) {
      year -= 100;
    }
  }
  state.year = year;
};
parsers.h = function(state) {
  lookAhead("h", state);
  var hours = getNumber(2, state);
  if (hours === 12) {
    hours = 0;
  }
  if (hours === null || outOfRange(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers.K = function(state) {
  lookAhead("K", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers.a = function(state, info) {
  var count = lookAhead("a", state);
  var periodFormats = formatNames(info, "dayPeriods", count, false, true);
  var pmHour = getIndexByName([periodFormats.pm], state, true);
  if (!pmHour && !getIndexByName([periodFormats.am], state, true)) {
    return true;
  }
  state.pmHour = pmHour;
};
parsers.H = function(state) {
  lookAhead("H", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 0, 23)) {
    return true;
  }
  state.hours = hours;
};
parsers.k = function(state) {
  lookAhead("k", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 1, 24)) {
    return true;
  }
  state.hours = hours === 24 ? 0 : hours;
};
parsers.m = function(state) {
  lookAhead("m", state);
  var minutes = getNumber(2, state);
  if (minutes === null || outOfRange(minutes, 0, 59)) {
    return true;
  }
  state.minutes = minutes;
};
parsers.s = function(state) {
  lookAhead("s", state);
  var seconds = getNumber(2, state);
  if (seconds === null || outOfRange(seconds, 0, 59)) {
    return true;
  }
  state.seconds = seconds;
};
parsers.S = function(state) {
  var count = lookAhead("S", state);
  var match = state.value.substr(state.valueIdx, count);
  var milliseconds = null;
  if (!isNaN(parseInt(match, 10))) {
    milliseconds = parseFloat("0." + match, 10);
    milliseconds = round(milliseconds, 3);
    milliseconds *= 1e3;
    state.valueIdx += count;
  }
  if (milliseconds === null || outOfRange(milliseconds, 0, 999)) {
    return true;
  }
  state.milliseconds = milliseconds;
};
parsers.z = function(state, info) {
  var count = lookAhead("z", state);
  var shortFormat = count < 4;
  var invalid = parseTimeZoneOffset(state, info, {
    shortHours: shortFormat,
    optionalMinutes: shortFormat,
    localizedName: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers.Z = function(state, info) {
  var count = lookAhead("Z", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count < 4,
    zLiteral: count === 5,
    localizedName: count === 4
  });
  if (invalid) {
    return invalid;
  }
};
parsers.x = function(state, info) {
  var count = lookAhead("x", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count !== 3 && count !== 5,
    optionalMinutes: count === 1
  });
  if (invalid) {
    return invalid;
  }
};
parsers.X = function(state, info) {
  var count = lookAhead("X", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count !== 3 && count !== 5,
    optionalMinutes: count === 1,
    zLiteral: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers.G = function(state, info) {
  var count = lookAhead("G", state);
  var eras = formatNames(info, "eras", count, false, true);
  var era = getIndexByName([eras[0], eras[1]], state, true);
  if (era === null) {
    return true;
  }
};
parsers.e = function(state, info) {
  return parseDayOfWeek("e", state, info);
};
parsers.c = function(state, info) {
  return parseDayOfWeek("c", state, info);
};
function createDate(state) {
  var year = state.year;
  var month = state.month;
  var day = state.day;
  var hours = state.hours;
  var minutes = state.minutes;
  var seconds = state.seconds;
  var milliseconds = state.milliseconds;
  var pmHour = state.pmHour;
  var UTC = state.UTC;
  var hoursOffset = state.hoursOffset;
  var minutesOffset = state.minutesOffset;
  var hasTime = hours !== null || minutes !== null || seconds || null;
  var date = /* @__PURE__ */ new Date();
  var result;
  if (year === null && month === null && day === null && hasTime) {
    year = date.getFullYear();
    month = date.getMonth();
    day = date.getDate();
  } else {
    if (year === null) {
      year = date.getFullYear();
    }
    if (day === null) {
      day = 1;
    }
  }
  if (pmHour && hours < 12) {
    hours += 12;
  }
  if (UTC) {
    if (hoursOffset) {
      hours += -hoursOffset;
    }
    if (minutesOffset) {
      minutes += -minutesOffset * (hoursOffset < 0 ? -1 : 1);
    }
    result = new Date(Date.UTC(year, month, day, hours, minutes, seconds, milliseconds));
  } else {
    result = new Date(year, month, day, hours, minutes, seconds, milliseconds);
    adjustDST(result, hours);
  }
  if (year < 100) {
    result.setFullYear(year);
  }
  if (result.getDate() !== day && UTC === void 0) {
    return null;
  }
  return result;
}
function addFormatSpaces(value, format2) {
  var leadingSpaces = leadingSpacesRegex.exec(format2)[0];
  var trailingSpaces = trailingSpacesRegex.exec(format2)[0];
  return "" + leadingSpaces + value + trailingSpaces;
}
function parseExact(value, format2, info) {
  var pattern = datePattern(format2, info).split(EMPTY);
  var state = {
    format: pattern,
    idx: 0,
    value: addFormatSpaces(value, format2),
    valueIdx: 0,
    year: null,
    month: null,
    day: null,
    hours: null,
    minutes: null,
    seconds: null,
    milliseconds: null
  };
  var length = pattern.length;
  var literal = false;
  for (; state.idx < length; state.idx++) {
    var ch = pattern[state.idx];
    if (literal) {
      if (ch === "'") {
        literal = false;
      }
      checkLiteral(state);
    } else {
      if (parsers[ch]) {
        var invalid = parsers[ch](state, info);
        if (invalid) {
          return null;
        }
      } else if (ch === "'") {
        literal = true;
        checkLiteral(state);
      } else if (!checkLiteral(state)) {
        return null;
      }
    }
  }
  if (state.valueIdx < value.length) {
    return null;
  }
  return createDate(state) || null;
}
function parseMicrosoftDateOffset(offset3) {
  var sign = offset3.substr(0, 1) === "-" ? -1 : 1;
  var result = offset3.substring(1);
  result = parseInt(result.substr(0, 2), 10) * 60 + parseInt(result.substring(2), 10);
  return sign * result;
}
function parseMicrosoftDateFormat(value) {
  if (value && value.indexOf("/D") === 0) {
    var date = dateRegExp.exec(value);
    if (date) {
      date = date[1];
      var tzoffset = offsetRegExp.exec(date.substring(1));
      date = new Date(parseInt(date, 10));
      if (tzoffset) {
        tzoffset = parseMicrosoftDateOffset(tzoffset[0]);
        date = convertTimeZone(date, date.getTimezoneOffset(), 0);
        date = convertTimeZone(date, 0, -1 * tzoffset);
      }
      return date;
    }
  }
}
function defaultFormats(calendar) {
  var formats = [];
  var patterns = calendar.patterns;
  var length = FORMATS_SEQUENCE.length;
  for (var idx = 0; idx < length; idx++) {
    formats.push(patterns[FORMATS_SEQUENCE[idx]]);
  }
  return formats.concat(standardDateFormats);
}
function parseDate(value, formats, locale) {
  if (locale === void 0) locale = DEFAULT_LOCALE;
  if (!value) {
    return null;
  }
  if (isDate(value)) {
    return value;
  }
  var parseValue = String(value).trim();
  var date = parseMicrosoftDateFormat(parseValue);
  if (date) {
    return date;
  }
  var info = localeInfo(locale);
  var parseFormats = formats || defaultFormats(info.calendar);
  parseFormats = Array.isArray(parseFormats) ? parseFormats : [parseFormats];
  var length = parseFormats.length;
  for (var idx = 0; idx < length; idx++) {
    date = parseExact(parseValue, parseFormats[idx], info);
    if (date) {
      return date;
    }
  }
  return date;
}

// node_modules/@progress/kendo-intl/dist/es/dates/split-date-format.js
var NAME_TYPES = {
  month: {
    type: "months",
    minLength: 3,
    standAlone: "L"
  },
  quarter: {
    type: "quarters",
    minLength: 3,
    standAlone: "q"
  },
  weekday: {
    type: "days",
    minLength: {
      E: 0,
      c: 3,
      e: 3
    },
    standAlone: "c"
  },
  dayperiod: {
    type: "dayPeriods",
    minLength: 0
  },
  era: {
    type: "eras",
    minLength: 0
  }
};
var LITERAL = "literal";
function addLiteral(parts, value) {
  var lastPart = parts[parts.length - 1];
  if (lastPart && lastPart.type === LITERAL) {
    lastPart.pattern += value;
  } else {
    parts.push({
      type: LITERAL,
      pattern: value
    });
  }
}
function isHour12(pattern) {
  return pattern === "h" || pattern === "K";
}
function splitDateFormat(format2, locale) {
  if (locale === void 0) locale = DEFAULT_LOCALE;
  var info = localeInfo(locale);
  var pattern = datePattern(format2, info);
  var parts = [];
  var lastIndex = dateFormatRegExp.lastIndex = 0;
  var match = dateFormatRegExp.exec(pattern);
  while (match) {
    var value = match[0];
    if (lastIndex < match.index) {
      addLiteral(parts, pattern.substring(lastIndex, match.index));
    }
    if (value.startsWith('"') || value.startsWith("'")) {
      addLiteral(parts, value);
    } else {
      var specifier = value[0];
      var type = DATE_FIELD_MAP[specifier];
      var part = {
        type,
        pattern: value
      };
      if (type === "hour") {
        part.hour12 = isHour12(value);
      }
      var names = NAME_TYPES[type];
      if (names) {
        var minLength = isNumber(names.minLength) ? names.minLength : names.minLength[specifier];
        var patternLength = value.length;
        if (patternLength >= minLength) {
          part.names = {
            type: names.type,
            nameType: dateNameType(patternLength),
            standAlone: names.standAlone === specifier
          };
        }
      }
      parts.push(part);
    }
    lastIndex = dateFormatRegExp.lastIndex;
    match = dateFormatRegExp.exec(pattern);
  }
  if (lastIndex < pattern.length) {
    addLiteral(parts, pattern.substring(lastIndex));
  }
  return parts;
}

// node_modules/@progress/kendo-intl/dist/es/format.js
var formatRegExp3 = /\{(\d+)(:[^}]+)?\}/g;
function toString(value, format2, locale) {
  if (format2) {
    if (isDate(value)) {
      return formatDate(value, format2, locale);
    } else if (isNumber(value)) {
      return formatNumber(value, format2, locale);
    }
  }
  return value !== void 0 && value !== null ? value : EMPTY;
}
function format(format2, values, locale) {
  return format2.replace(formatRegExp3, function(match, index, placeholderFormat) {
    var value = values[parseInt(index, 10)];
    return toString(value, placeholderFormat ? placeholderFormat.substring(1) : EMPTY, locale);
  });
}

// node_modules/@progress/kendo-react-intl/Intl/IntlService.mjs
var o3 = class {
  /**
   * Creates a new instance of the internationalization service.
   *
   * @param locale - The locale that will be used by the internationalization methods.
   */
  constructor(r10) {
    if (this.locale = r10, r10 === "" && true)
      throw "Locale should not be empty string";
  }
  /**
   * Formats a string with placeholders such as `Total amount {0:c}`.
   *
   * @param format - The format string.
   * @param values - One or more values to output in the format string placeholders.
   * @return - The formatted string.
   */
  format(r10, ...t21) {
    return t21.length === 1 && Array.isArray(t21[0]) ? format(r10, t21[0], this.locale) : format(r10, t21, this.locale);
  }
  /**
   * Converts a `Date` object to a string based on the specified format. If no format is provided, the default short date format is used.
   *
   * @param value - The date which will be formatted.
   * @param format - The format string or options.
   * @return - The formatted date.
   */
  formatDate(r10, t21) {
    return formatDate(r10, t21, this.locale);
  }
  /**
   * Converts an object to a string based on the specified format.
   *
   * @param value - The value which will be formatted.
   * @param format - The format to use.
   * @return - The formatted object.
   */
  toString(r10, t21) {
    return toString(r10, t21, this.locale);
  }
  /**
   * Converts a string to a `Number`.
   *
   * @param value - The string which will be parsed.
   * @param format - The format string or options.
   * @return - The parsed number.
   */
  parseNumber(r10, t21) {
    return parseNumber(r10, this.locale, t21);
  }
  /**
   * Converts a string to a `Date` object based on the specified format.
   *
   * @param value - The string which will be converted.
   * @param format - The format strings or options.
   * @return - The parsed date.
   */
  parseDate(r10, t21) {
    return parseDate(r10, t21, this.locale);
  }
  /**
   * Converts a `Number` to a string based on the specified format.
   *
   * @param value - The number which will be formatted.
   * @param format - The format string or options.
   * @return - The formatted number.
   */
  formatNumber(r10, t21) {
    return formatNumber(r10, t21, this.locale);
  }
  /**
   * Returns a localized date field name based on specific `dateFieldName` options.
   *
   * @param options - The detailed configuration for the desired date field name.
   * @returns - The localized date field name from the current locale based on the option.
   */
  dateFieldName(r10) {
    return dateFieldName(r10, this.locale);
  }
  /**
   * Returns the day names from the current locale based on the option.
   *
   * @param options - The detailed configuration for the desired date format.
   * @return - The day names from the current locale based on the option.
   */
  dateFormatNames(r10) {
    return dateFormatNames(this.locale, r10);
  }
  /**
   * Splits the date format into objects which contain information about each part of the pattern.
   *
   * @param format - The format string or options.
   * @returns - The date format parts.
   */
  splitDateFormat(r10) {
    return splitDateFormat(r10, this.locale);
  }
  /**
   * Returns the number symbols from the current locale.
   *
   * @return - The number symbols from the current locale.
   */
  numberSymbols() {
    return numberSymbols(this.locale);
  }
  /**
   * Returns the first day index, starting from Sunday.
   *
   * @return - The index of the first day of the week (0 == Sunday).
   */
  firstDay() {
    return firstDay(this.locale);
  }
  /**
   * @hidden
   */
  localeInfo() {
    return localeInfo(this.locale);
  }
  /**
   * @hidden
   */
  localeCurrency() {
    return localeCurrency(this.locale);
  }
};

// node_modules/@progress/kendo-react-intl/Localization/messages.mjs
var e9 = /* @__PURE__ */ Object.create({});

// node_modules/@progress/kendo-react-intl/Localization/LocalizationService.mjs
var s9 = class {
  constructor(t21) {
    if (this.language = t21, t21 === "" && true)
      throw "Language should not be an empty string";
  }
  /* eslint-disable max-len */
  /**
   * Provides a string based on a key for the current language. When no string for the current language is available under this key, the `defaultValue` is returned.
   *
   * @param key - The key which identifies the string for the current language.
   * @param defaultValue - The default value which will be returned when no string
   * for the current language is available under the key.
   * @return - The string for the current language.
   */
  // tslint:enable:max-line-length
  toLanguageString(t21, e20) {
    return this.language && e9[this.language] && e9[this.language].hasOwnProperty(t21) ? e9[this.language][t21] : e20;
  }
};

// node_modules/@progress/kendo-react-intl/globalization/GlobalizationContext.mjs
var r6 = o4.createContext({
  intl: new o3("en"),
  localization: new s9()
});

// node_modules/@progress/kendo-react-intl/intlUtils.mjs
function l2(t21) {
  if (!t21 && true)
    throw `Passed component - ${t21} is invalid.`;
  const o15 = t21.context;
  return o15 && o15.intl ? o15.intl : new o3("en");
}
function s10(t21) {
  if (!t21 && true)
    throw `Passed component - ${t21} is invalid.`;
  const o15 = t21.context;
  return o15 && o15.localization ? o15.localization : new s9();
}
function p4(t21) {
  t21.contextType = r6;
}
function v3(t21) {
  t21.contextType = r6;
}

// node_modules/@progress/kendo-react-intl/server/ServerGlobalization.mjs
var import_react = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-intl/Intl/IntlProvider.mjs
var e10 = __toESM(require_react(), 1);
var import_prop_types8 = __toESM(require_prop_types(), 1);
var t7 = class t8 extends e10.Component {
  /**
   * Returns an internationalization service. The method is suitable for overriding when you implement custom internationalization behavior.
   */
  getIntlService() {
    return new o3(this.props.locale);
  }
  /**
   * @hidden
   */
  render() {
    return e10.createElement(r6.Consumer, null, (n14) => e10.createElement(r6.Provider, { value: { ...n14, intl: this.getIntlService() } }, this.props.children));
  }
};
t7.propTypes = {
  locale: import_prop_types8.default.string
};
var o5 = t7;

// node_modules/@progress/kendo-react-intl/Intl/load.mjs
var o6 = {};
var l3 = (...i10) => {
  i10.forEach((e20) => {
    const n14 = Object.keys(e20)[0];
    if (["main", "supplemental"].includes(n14)) {
      const s15 = Object.keys(e20[n14])[0];
      s15 in o6 ? o6[s15].includes(e20) || (o6[s15] = [...o6[s15], e20]) : o6[s15] = [e20];
    }
  }), load(...i10);
};

// node_modules/@progress/kendo-react-intl/Intl/IntlDataProvider.mjs
var n6 = (o15) => {
  const { locale: r10, data: t21, children: a11 } = o15;
  return r10 && l3(t21), a11;
};

// node_modules/@progress/kendo-react-intl/Localization/LocalizationProvider.mjs
var e11 = __toESM(require_react(), 1);
var import_prop_types9 = __toESM(require_prop_types(), 1);
var t9 = class t10 extends e11.Component {
  /**
   * Returns a localization service. The method is suitable for overriding when you implement custom localization behavior.
   */
  getLocalizationService() {
    return new s9(this.props.language);
  }
  /**
   * @hidden
   */
  render() {
    return e11.createElement(r6.Consumer, null, (i10) => e11.createElement(r6.Provider, { value: { ...i10, localization: this.getLocalizationService() } }, this.props.children));
  }
};
t9.propTypes = {
  language: import_prop_types9.default.string
};
var o7 = t9;

// node_modules/@progress/kendo-react-intl/Localization/loadMessages.mjs
var p5 = /* @__PURE__ */ Object.create({});
var r7 = (s15, o15, t21) => {
  for (const e20 in s15)
    if (s15.hasOwnProperty(e20)) {
      const n14 = [...t21];
      if (n14.push(e20), typeof s15[e20] != "string")
        r7(s15[e20], o15, n14);
      else {
        const f3 = s15[e20];
        Object.defineProperty(o15, n14.join("."), { value: f3, enumerable: true });
      }
    }
};
function a5(s15, o15) {
  const t21 = e9[o15] = e9[o15] || {};
  p5.lang = o15, r7(s15, t21, []);
}

// node_modules/@progress/kendo-react-intl/Localization/LocalizationDataProvider.mjs
var n8 = (o15) => {
  const { data: r10, language: a11, children: t21 } = o15;
  return a11 && a5(r10, a11), t21;
};

// node_modules/@progress/kendo-react-intl/server/ServerGlobalization.mjs
var G2 = (l5) => {
  var r10, a11, n14;
  const { language: t21 = "", locale: e20 = "en", children: c3 } = l5, s15 = localeInfo(e20), f3 = (r10 = e9[t21]) != null ? r10 : [], p8 = ((a11 = o6.version) != null ? a11 : []).concat((n14 = o6[s15.name]) != null ? n14 : []), [d3] = s2(e20 ? o5 : import_react.default.Fragment), [v4] = s2(t21 ? o7 : import_react.default.Fragment);
  return import_react.default.createElement(n8, { data: f3, language: t21 }, import_react.default.createElement(n6, { data: p8, locale: e20 }, import_react.default.createElement(v4, { language: t21 }, import_react.default.createElement(d3, { locale: e20 }, c3))));
};

// node_modules/@progress/kendo-react-intl/hooks/useInternationalization.mjs
var t11 = __toESM(require_react(), 1);
var i7 = () => t11.useContext(r6).intl;

// node_modules/@progress/kendo-react-intl/hooks/useLocalization.mjs
var o9 = __toESM(require_react(), 1);
var i8 = () => o9.useContext(r6).localization;

// node_modules/@progress/kendo-react-buttons/toolbar/messages/index.mjs
var t12 = "prevArrow.title";
var o10 = "nextArrow.title";
var e12 = "moreButtonTitle.title";
var r8 = {
  [t12]: "Previous scroll button",
  [o10]: "Next scroll button",
  [e12]: "More button"
};

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollButton.mjs
var I2 = (s15) => {
  const n14 = i8(), { disabled: r10, type: t21, scrollContentRef: o15, buttonScrollSpeed: e20, prevButton: m5, nextButton: u5 } = s15, d3 = (S) => {
    o15 && o15.current && e20 && o15.current.scrollBy({
      left: t21 === "next" ? e20 : -e20,
      behavior: "smooth"
    });
  }, p8 = t21 === "prev" ? m5 || "span" : u5 || "span";
  return (
    // Using span instead of real Button component is intentional.
    // Ref: https://progresssoftware.atlassian.net/wiki/spaces/DE/pages/edit-v2/544997922#Hidden-interactive-elements
    a6.createElement(
      p8,
      {
        className: n2(
          "k-button",
          "k-button-md",
          "k-button-solid",
          "k-button-solid-base",
          "k-rounded-md",
          "k-icon-button",
          `k-toolbar-${t21}`,
          {
            "k-disabled": r10
          }
        ),
        title: `${t21 === "prev" ? n14.toLanguageString(t12, r8[t12]) : n14.toLanguageString(o10, r8[o10])}`,
        "aria-hidden": true,
        tabIndex: r10 ? -1 : void 0,
        onClick: d3
      },
      a6.createElement(M, { icon: t21 === "prev" ? caretAltLeftIcon : caretAltRightIcon, className: "k-button-icon" })
    )
  );
};

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollable.mjs
var g5 = (i10) => {
  const {
    scrollButtons: c3,
    scrollButtonsPosition: l5,
    isOverflowing: p8,
    scrollContentRef: m5,
    buttonScrollSpeed: u5,
    dir: e20,
    isScrollStartPosition: a11,
    isScrollEndPosition: s15,
    prevButton: b3,
    nextButton: E2,
    children: S
  } = i10, r10 = (v4, x4) => t13.createElement(
    I2,
    {
      type: v4,
      disabled: x4,
      scrollContentRef: m5,
      buttonScrollSpeed: u5,
      prevButton: b3,
      nextButton: E2
    }
  ), o15 = c3 === "visible" || c3 === "auto" && p8;
  return t13.createElement(t13.Fragment, null, o15 && l5 === "split" && t13.createElement(t13.Fragment, null, r10(e20 !== "rtl" ? "prev" : "next", a11), t13.createElement(t6, { className: "k-toolbar-button-separator" })), o15 && l5 === "start" && t13.createElement(t13.Fragment, null, r10(e20 !== "rtl" ? "prev" : "next", a11), r10(e20 !== "rtl" ? "next" : "prev", s15), t13.createElement(t6, { className: "k-toolbar-button-separator" })), t13.createElement("span", { className: "k-toolbar-items k-toolbar-items-scroll", ref: m5 }, S), o15 && l5 === "split" && t13.createElement(t13.Fragment, null, t13.createElement(t6, { className: "k-toolbar-button-separator" }), r10(e20 !== "rtl" ? "next" : "prev", s15)), o15 && l5 === "end" && t13.createElement(t13.Fragment, null, t13.createElement(t6, { className: "k-toolbar-button-separator" }), r10(e20 !== "rtl" ? "prev" : "next", a11), r10(e20 !== "rtl" ? "next" : "prev", s15)));
};

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarOverflowSection.mjs
var e13 = __toESM(require_react(), 1);
var U = (h3) => {
  var m5;
  const { toolbarRef: o15, children: b3, fillMode: R, size: g6 } = h3, [u5, k3] = e13.useState(false), c3 = e13.useRef(
    e13.Children.toArray(b3).filter((t21) => e13.isValidElement(t21)).map((t21, r10) => e13.cloneElement(t21, { key: t21.key || r10 }))
  ), l5 = e13.useRef([]), a11 = e13.useRef(0), T2 = e13.useRef(null), w2 = e13.useRef(null), v4 = i8(), [N2, E2] = e13.useReducer((t21) => t21 + 1, 0), f3 = () => {
    if (!o15.current)
      return;
    let t21 = 0;
    const r10 = o15.current.clientWidth, i10 = parseInt(window.getComputedStyle(o15.current).gap || "0", 10), C2 = Array.from(o15.current.children).reduce((n14, s15, P3) => (n14 += Math.ceil(s15.clientWidth), n14), 0), p8 = Array.from(o15.current.children).length, y3 = i10 * 2;
    if (t21 = C2 + p8 * i10 + y3, t21 > r10) {
      const n14 = [...c3.current], s15 = n14.pop();
      a11.current = r10, c3.current = n14, s15 && (l5.current = [s15, ...l5.current]);
    } else if (r10 > a11.current + i10 * p8) {
      const n14 = [...l5.current], s15 = n14.shift();
      l5.current = n14, s15 && (c3.current = [...c3.current, s15]), a11.current = r10;
    }
    E2();
  };
  e13.useEffect(() => {
    f3();
    const t21 = new ResizeObserver(f3), r10 = o15.current;
    return r10 && t21.observe(r10), () => {
      r10 && t21.unobserve(r10);
    };
  }, []);
  const z2 = () => {
    k3(!u5);
  };
  return e13.createElement(e13.Fragment, null, c3.current.length > 0 && c3.current, l5.current.length > 0 && e13.createElement(e13.Fragment, null, e13.createElement(t6, { _ref: w2, className: "k-toolbar-button-separator" }), e13.createElement(
    k,
    {
      ref: T2,
      className: "k-toolbar-overflow-button",
      fillMode: "flat",
      svgIcon: moreHorizontalIcon,
      title: v4.toLanguageString(e12, r8[e12]),
      onClick: z2
    }
  ), e13.createElement(
    te,
    {
      anchor: o15.current,
      show: u5,
      popupClass: "k-toolbar-popup",
      style: { width: (m5 = o15.current) == null ? void 0 : m5.offsetWidth }
    },
    e13.createElement(
      "span",
      {
        className: `k-toolbar-items-list k-toolbar-items-list-${a4.sizeMap[g6]} k-toolbar-items-list-${R}`
      },
      l5.current.length > 0 && l5.current
    )
  )));
};

// node_modules/@progress/kendo-react-buttons/toolbar/Toolbar.mjs
var N = t14.forwardRef((i10, A) => {
  const {
    children: k3,
    className: K,
    id: j,
    ariaLabel: q,
    keyboardNavigation: w2,
    role: x4,
    onResize: C2,
    style: D,
    tabIndex: E2 = f.tabIndex,
    size: b3 = f.size,
    fillMode: I3 = f.fillMode,
    overflow: c3,
    scrollButtons: d3 = f.scrollButtons,
    scrollButtonsPosition: $ = f.scrollButtonsPosition,
    buttonScrollSpeed: F2 = f.buttonScrollSpeed,
    prevButton: _,
    nextButton: G3,
    _ariaControls: J2
  } = i10, B = t14.useRef(false), r10 = t14.useRef(null), m5 = t14.useRef(null), h3 = t14.useRef(0), S = t14.useRef(0), s15 = t14.useRef([]), R = t14.useRef({ element: null, props: i10 }), [Q4, U2] = t14.useState(false), [O, W] = t14.useState(true), [z2, P3] = t14.useState(false), y3 = u(r10, i10.dir), g6 = t14.useMemo(() => i10.buttons || o2, [i10.buttons]), V2 = t14.useMemo(() => g6.map((e20) => e20 + ":focus").join(","), [g6]), M2 = () => {
    const e20 = r10.current && r10.current.querySelector(V2);
    return Math.max(
      0,
      s15.current.findIndex((l5) => l5 === e20)
    );
  };
  t14.useImperativeHandle(
    R,
    () => ({
      element: r10.current,
      props: i10
    })
  ), t14.useImperativeHandle(A, () => R.current), t14.useEffect(() => (window.addEventListener("resize", L), r10.current && (S.current = r10.current.offsetWidth, h3.current = r10.current.offsetHeight, w2 !== false && (s15.current = Array.from(
    r10.current.querySelectorAll(g6.join(","))
  ), H(0))), () => {
    window.removeEventListener("resize", L), s15.current.length = 0;
  }), []), t14.useEffect(() => {
    if (B.current) {
      if (!r10.current || w2 === false)
        return;
      s15.current = Array.from(
        r10.current.querySelectorAll(g6.join(","))
      ), H(M2()), T2();
    } else
      B.current = true;
  });
  const H = (e20) => {
    s15.current.forEach((l5, o15) => {
      l5.tabIndex = o15 === e20 ? E2 : -1;
    });
  }, X = (e20) => {
    const l5 = e20.keyCode === e2.left || e20.keyCode === e2.right || e20.keyCode === e2.home || e20.keyCode === e2.end, o15 = M2();
    !l5 || e20.defaultPrevented || s15.current.findIndex((a11) => a11 === e20.target) === -1 || (e20.keyCode === e2.left ? v4(
      o15,
      o15 === 0 ? s15.current.length - 1 : o15 - 1
    ) : v4(
      o15,
      o15 === s15.current.length - 1 ? 0 : o15 + 1
    ), e20.keyCode === e2.home && v4(o15, 0), e20.keyCode === e2.end && v4(o15, s15.current.length - 1));
  }, v4 = (e20, l5) => {
    const o15 = s15.current[l5];
    if (o15) {
      o15.tabIndex = E2, o15.focus();
      const a11 = s15.current[e20];
      a11 && (a11.tabIndex = -1);
    }
  }, L = (e20) => {
    if (!r10.current)
      return;
    const l5 = r10.current.offsetWidth, o15 = r10.current.offsetHeight;
    if (S.current !== l5 || h3.current !== o15) {
      S.current = l5, h3.current = o15;
      const a11 = { offsetWidth: S.current, offsetHeight: h3.current };
      C2 && C2.call(void 0, { target: R.current, ...a11, nativeEvent: e20 });
    }
    T2();
  }, T2 = t14.useCallback(() => {
    const e20 = m5.current;
    e20 && U2(
      e20.scrollWidth > e20.clientWidth || e20.scrollHeight > e20.clientHeight
    );
  }, []), p8 = t14.useCallback(() => {
    const e20 = m5.current;
    if (e20) {
      const l5 = e20.scrollLeft === 0, o15 = y3 !== "rtl" ? e20.scrollLeft + e20.clientWidth === e20.scrollWidth : e20.clientWidth - e20.scrollLeft === e20.scrollWidth;
      l5 && W(true), o15 && P3(true), !l5 && !o15 && (W(false), P3(false));
    }
  }, [y3]);
  return t14.useEffect(() => {
    const e20 = m5.current;
    if (e20)
      return e20.addEventListener("scroll", p8), () => {
        e20.removeEventListener("scroll", p8);
      };
  }, [p8]), t14.createElement(
    "div",
    {
      id: j,
      "aria-label": q,
      "aria-controls": J2,
      className: n2(
        "k-toolbar",
        {
          [`k-toolbar-${a4.sizeMap[b3] || b3}`]: b3,
          [`k-toolbar-${I3}`]: I3,
          "k-toolbar-scrollable": c3 === "scroll",
          "k-toolbar-scrollable-overlay": c3 === "scroll" && (d3 === "hidden" || d3 === void 0),
          "k-toolbar-scrollable-start": c3 === "scroll" && d3 === "hidden" && O,
          "k-toolbar-scrollable-end": c3 === "scroll" && d3 === "hidden" && z2,
          "k-toolbar-section": i10.overflow && c3 === "section"
        },
        K
      ),
      style: D,
      role: x4 !== void 0 ? x4 || void 0 : "toolbar",
      dir: y3,
      ref: r10,
      onKeyDown: w2 !== false ? X : void 0
    },
    c3 === "scroll" && t14.createElement(
      g5,
      {
        scrollButtons: d3,
        scrollButtonsPosition: $,
        prevButton: _,
        nextButton: G3,
        isOverflowing: Q4,
        scrollContentRef: m5,
        buttonScrollSpeed: F2,
        dir: y3,
        isScrollStartPosition: O,
        isScrollEndPosition: z2,
        children: k3
      }
    ),
    c3 === "section" && t14.createElement(U, { toolbarRef: r10, fillMode: I3, size: b3 }, k3),
    (c3 === "none" || c3 === void 0) && k3
  );
});
var f = {
  tabIndex: 0,
  size: "medium",
  fillMode: "solid",
  scrollButtons: "auto",
  scrollButtonsPosition: "split",
  buttonScrollSpeed: 100
};
N.displayName = "KendoReactToolbar";
N.propTypes = {
  tabIndex: import_prop_types10.default.number,
  dir: import_prop_types10.default.string,
  keyboardNavigation: import_prop_types10.default.bool,
  style: import_prop_types10.default.object,
  className: import_prop_types10.default.string,
  role: import_prop_types10.default.string,
  onResize: import_prop_types10.default.func,
  buttons: import_prop_types10.default.arrayOf(import_prop_types10.default.string.isRequired),
  size: import_prop_types10.default.oneOf([null, "small", "medium", "large"]),
  fillMode: import_prop_types10.default.oneOf([null, "solid", "flat", "outline"]),
  overflow: import_prop_types10.default.oneOf(["none", "section", "scroll"]),
  scrollButtons: import_prop_types10.default.oneOf(["hidden", "visible", "auto"]),
  scrollButtonsPosition: import_prop_types10.default.oneOf(["start", "end", "split"]),
  buttonScrollSpeed: import_prop_types10.default.number
};

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarItem.mjs
var e14 = __toESM(require_react(), 1);
var import_prop_types11 = __toESM(require_prop_types(), 1);
var t15 = e14.forwardRef((a11, o15) => {
  const { id: s15, className: m5, style: l5, children: n14 } = a11, r10 = e14.useRef(null);
  return e14.useImperativeHandle(
    o15,
    () => ({
      element: r10.current
    })
  ), e14.createElement("div", { id: s15, className: n2("k-toolbar-item", m5), style: l5, ref: r10 }, n14);
});
t15.displayName = "KendoReactToolbarItem";
t15.propTypes = {
  className: import_prop_types11.default.string
};

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarSpacer.mjs
var e15 = __toESM(require_react(), 1);
var import_prop_types12 = __toESM(require_prop_types(), 1);
var s11 = e15.forwardRef(
  (r10, t21) => {
    const a11 = e15.useRef(null), m5 = e15.useRef(null);
    e15.useImperativeHandle(m5, () => ({ element: a11.current })), e15.useImperativeHandle(t21, () => ({ element: a11.current }));
    const o15 = e15.useMemo(() => n2("k-spacer", r10.className), [r10.className]);
    return e15.createElement("span", { ref: a11, className: o15 });
  }
);
s11.displayName = "KendoReactToolbarSpacer";
s11.propTypes = {
  className: import_prop_types12.default.string
};

// node_modules/@progress/kendo-react-buttons/Chip/Chip.mjs
var a9 = __toESM(require_react(), 1);
var import_prop_types13 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-buttons/Chip/chip-list-contexts.mjs
var import_react2 = __toESM(require_react(), 1);
var n10 = import_react2.default.createContext([
  null,
  (e20) => {
  }
]);
var a7 = import_react2.default.createContext([
  null,
  (e20) => {
  }
]);
var s12 = import_react2.default.createContext([
  null,
  (e20) => {
  }
]);

// node_modules/@progress/kendo-react-buttons/Chip/focus-reducer.mjs
var u4 = ((e20) => (e20.next = "next", e20.prev = "prev", e20.current = "current", e20.reset = "reset", e20))(u4 || {});
var s13 = (e20, r10) => {
  const t21 = r10.items.findIndex((n14) => n14 === e20);
  switch (r10.type) {
    case "next":
      return t21 === r10.items.length - 1 ? e20 : r10.items[t21 + 1];
    case "prev":
      return t21 === 0 ? e20 : r10.items[t21 - 1];
    case "current":
      return r10.payload;
    case "reset":
      return null;
    default:
      return e20;
  }
};

// node_modules/@progress/kendo-react-buttons/Chip/data-reducer.mjs
var a8 = ((e20) => (e20.remove = "remove", e20.add = "add", e20.reorder = "reorder", e20))(a8 || {});
var o11 = (e20, r10) => {
  switch (r10.type) {
    case "add":
      break;
    case "remove":
      return e20.filter((d3) => d3[r10.valueField] !== r10.payload);
    case "reorder":
      break;
    default:
      return e20;
  }
};

// node_modules/@progress/kendo-react-buttons/Chip/selection-reducer.mjs
var n11 = ((r10) => (r10.toggle = "toggle", r10.remove = "remove", r10))(n11 || {});
var o12 = (r10, e20) => {
  switch (e20.selection) {
    case "single":
      switch (e20.type) {
        case "toggle": {
          if (!Array.isArray(r10) || r10 === null)
            return e20.payload === r10 ? null : e20.payload;
          throw new Error("State cannot be an array in single selection");
        }
        case "remove":
          return e20.payload === r10 ? null : r10;
        default:
          return r10;
      }
    case "multiple":
      switch (e20.type) {
        case "toggle": {
          if (Array.isArray(r10))
            return r10.some((l5) => l5 === e20.payload) ? r10.filter((l5) => l5 !== e20.payload) : [...r10, e20.payload];
          if (r10 === null)
            return [e20.payload];
          throw new Error("State cannot be non-array in multiple selection");
        }
        case "remove":
          return Array.isArray(r10) ? r10.some((l5) => l5 === e20.payload) ? r10.filter((l5) => l5 !== e20.payload) : [...r10, e20.payload] : r10;
        default:
          return r10;
      }
    case "none":
      return null;
    default:
      return r10;
  }
};

// node_modules/@progress/kendo-react-buttons/Chip/Chip.mjs
var z = a9.forwardRef((e20, A) => {
  const c3 = a9.useRef(null), d3 = a9.useRef(null), {
    disabled: y3 = n12.disabled,
    fillMode: r10 = n12.fillMode,
    themeColor: N2 = n12.themeColor,
    size: f3 = n12.size,
    rounded: h3 = n12.rounded,
    dir: B = n12.dir,
    removeIcon: D = n12.removeIcon,
    removeSvgIcon: F2 = n12.removeSvgIcon,
    removable: s15 = n12.removable
  } = e20, R = u(d3, B);
  a9.useImperativeHandle(c3, () => ({
    element: d3.current,
    props: e20
  })), a9.useImperativeHandle(A, () => c3.current);
  const [m5, i10] = a9.useContext(n10), [S, o15] = a9.useContext(a7), [, T2] = a9.useContext(s12), k3 = a9.useMemo(() => e20.selected || (Array.isArray(m5) ? m5.some((t21) => t21 === e20.value) : m5 === e20.value), [e20.selected, e20.value, m5]), b3 = a9.useMemo(() => S === e20.value, [e20.value, S]);
  a9.useEffect(() => {
    b3 && d3.current && d3.current.focus();
  }, [b3]);
  const K = a9.useCallback(
    (t21) => {
      i10({ type: n11.toggle, payload: e20.value, event: t21 });
    },
    [i10, e20.value]
  ), g6 = a9.useCallback(
    (t21) => {
      s15 && (T2({ type: a8.remove, payload: e20.value, event: t21 }), o15({ type: u4.reset, payload: e20.value, event: t21 }), i10({ type: n11.remove, payload: e20.value, event: t21 }), e20.onRemove && e20.onRemove.call(void 0, {
        target: c3.current,
        syntheticEvent: t21
      }));
    },
    [e20.onRemove, e20.value, s15, T2, o15, i10]
  ), $ = a9.useCallback(
    (t21) => {
      switch (t21.keyCode) {
        case e2.left:
          o15({ type: u4.prev, payload: e20.value, event: t21 });
          break;
        case e2.right:
          o15({ type: u4.next, payload: e20.value, event: t21 });
          break;
        case e2.enter:
          i10({ type: n11.toggle, payload: e20.value, event: t21 });
          break;
        case e2.delete:
          g6(t21);
          break;
      }
      e20.onKeyDown && e20.onKeyDown.call(void 0, {
        target: c3.current,
        syntheticEvent: t21
      });
    },
    [e20.onKeyDown, e20.value, o15, i10, g6]
  ), L = a9.useCallback(
    (t21) => {
      o15({ payload: e20.value, type: u4.current, event: t21 }), e20.onFocus && e20.onFocus.call(void 0, {
        target: c3.current,
        syntheticEvent: t21
      });
    },
    [e20.onFocus, e20.value, o15]
  ), P3 = a9.useCallback(
    (t21) => {
      e20.onBlur && e20.onBlur.call(void 0, {
        target: c3.current,
        syntheticEvent: t21
      });
    },
    [e20.onBlur]
  ), _ = h(e20, c3, { onClick: K });
  return a9.createElement(
    "div",
    {
      ..._,
      role: e20.role || "button",
      id: e20.value,
      style: e20.style,
      ref: d3,
      dir: R,
      tabIndex: e3(e20.tabIndex, y3, void 0),
      className: n2(
        "k-chip",
        {
          "k-rtl": R === "rtl",
          "k-disabled": y3,
          "k-selected": k3,
          "k-focus": b3,
          [`k-chip-${a4.sizeMap[f3] || f3}`]: f3,
          [`k-rounded-${a4.roundedMap[h3] || h3}`]: h3,
          [`k-chip-${r10}`]: r10,
          [`k-chip-${r10}-${N2}`]: !!(r10 && N2)
        },
        e20.className
      ),
      "aria-pressed": e20.role ? void 0 : k3,
      "aria-disabled": y3,
      "aria-describedby": e20.ariaDescribedBy,
      "aria-keyshortcuts": s15 ? "Enter Delete" : void 0,
      onFocus: L,
      onBlur: P3,
      onKeyDown: $
    },
    k3 && (e20.selectedIcon || e20.selectedSvgIcon) && a9.createElement(
      v2,
      {
        className: "k-chip-icon",
        name: e20.selectedIcon ? i(e20.selectedIcon) : void 0,
        icon: e20.selectedSvgIcon,
        size: "small"
      }
    ),
    (e20.icon || e20.svgIcon) && a9.createElement(
      v2,
      {
        className: "k-chip-icon",
        name: e20.icon ? i(e20.icon) : void 0,
        icon: e20.svgIcon,
        size: "small"
      }
    ),
    e20.avatar && a9.createElement(
      "div",
      {
        className: `k-chip-avatar k-avatar k-rounded-${e20.avatar.rounded} k-avatar-md k-avatar-solid k-avatar-solid-primary`,
        style: e20.avatar.style
      },
      a9.createElement("span", { className: "k-avatar-image" }, a9.createElement("img", { src: e20.avatar.image, alt: e20.avatar.imageAlt }))
    ),
    a9.createElement("span", { className: "k-chip-content" }, e20.children !== void 0 ? e20.children : e20.text && a9.createElement("span", { "aria-label": e20.ariaLabel || e20.text, className: "k-chip-label" }, e20.text)),
    s15 && a9.createElement("span", { className: "k-chip-actions" }, a9.createElement("span", { className: n2("k-chip-action", "k-chip-remove-action"), onClick: g6 }, a9.createElement(
      v2,
      {
        name: D ? i(D) : void 0,
        icon: F2 || xCircleIcon,
        size: "small"
      }
    )))
  );
});
var Q3 = {
  id: import_prop_types13.default.string,
  text: import_prop_types13.default.string,
  value: import_prop_types13.default.any,
  dir: import_prop_types13.default.oneOf(["ltr", "rtl"]),
  removable: import_prop_types13.default.bool,
  removeIcon: import_prop_types13.default.string,
  removeIconSvg: r,
  disabled: import_prop_types13.default.bool,
  icon: import_prop_types13.default.string,
  svgIcon: r,
  selectedIcon: import_prop_types13.default.string,
  selectedIconSvg: r,
  onRemove: import_prop_types13.default.func,
  dataItem: import_prop_types13.default.any,
  selected: import_prop_types13.default.bool,
  ariaDescribedBy: import_prop_types13.default.string,
  size: import_prop_types13.default.oneOf([null, "small", "medium", "large"]),
  rounded: import_prop_types13.default.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: import_prop_types13.default.oneOf([null, "outline", "solid"]),
  // eslint-disable-next-line max-len
  themeColor: import_prop_types13.default.oneOf([null, "base", "info", "success", "warning", "error"])
};
var n12 = {
  disabled: false,
  removable: false,
  removeIcon: "k-i-x-circle",
  removeSvgIcon: xCircleIcon,
  dir: "ltr",
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  themeColor: "base"
};
z.displayName = "KendoReactChip";
z.propTypes = Q3;

// node_modules/@progress/kendo-react-buttons/Chip/ChipList.mjs
var t17 = __toESM(require_react(), 1);
var import_prop_types14 = __toESM(require_prop_types(), 1);
var ie = (a11, i10, s15) => {
  i10.selection === "multiple" ? Array.isArray(a11) || (a11 = a11 ? [a11] : null) : i10.selection === "single" && Array.isArray(a11) && (a11 = a11 ? a11.join("") : null);
  const [l5, o15] = t17.useState(a11);
  return [l5, (c3) => {
    const d3 = o12(i10.state || l5, { ...c3, ...i10 });
    s15 && s15(d3, c3.event), i10.selection !== "none" && o15(d3);
  }];
};
var le = (a11) => {
  const [i10, s15] = t17.useState(null);
  return [i10, (o15) => {
    const m5 = s13(o15.payload, { ...o15, ...a11 });
    s15(m5);
  }];
};
var re = (a11, i10, s15) => {
  const [l5, o15] = t17.useState(a11);
  return [l5, (c3) => {
    const d3 = o11(i10.state || l5, { ...c3, ...i10 });
    s15 && s15(d3, c3.event), o15(d3);
  }];
};
var E = t17.forwardRef((a11, i10) => {
  const s15 = t17.useRef(null), l5 = t17.useRef(null), {
    id: o15,
    style: m5,
    tabIndex: c3,
    className: d3,
    ariaDescribedBy: M2,
    ariaLabelledBy: T2,
    ariaLabel: z2,
    value: h3,
    defaultData: P3 = r9.defaultData,
    chip: g6 = r9.chip,
    disabled: b3 = r9.disabled,
    size: f3 = r9.size,
    defaultValue: N2 = r9.defaultValue,
    selection: x4 = r9.selection,
    valueField: p8 = r9.valueField,
    textField: S = r9.textField,
    dir: w2 = r9.dir,
    onChange: y3,
    onDataChange: C2
  } = a11, F2 = u(l5, w2), A = t17.useMemo(() => g6 || z, [g6, z]);
  t17.useImperativeHandle(s15, () => ({
    element: l5.current,
    props: a11
  })), t17.useImperativeHandle(i10, () => s15.current);
  const B = t17.useCallback(
    (n14, u5) => {
      y3 && s15.current && y3.call(void 0, {
        value: n14,
        target: s15.current,
        syntheticEvent: u5
      });
    },
    [y3]
  ), [L, j] = ie(
    h3 || N2,
    {
      selection: x4,
      state: h3
    },
    B
  ), G3 = t17.useCallback(
    (n14, u5) => {
      C2 && s15.current && C2.call(void 0, {
        value: n14,
        target: s15.current,
        syntheticEvent: u5
      });
    },
    [C2]
  ), [I3, H] = re(
    a11.data || P3,
    {
      state: a11.data,
      valueField: p8
    },
    G3
  ), R = t17.useCallback(
    (n14, u5) => (n14.push(u5[p8]), n14),
    [p8]
  ), v4 = t17.useMemo(() => a11.data || I3, [a11.data, I3]), K = t17.useMemo(() => h3 || L, [h3, L]), $ = t17.useMemo(() => v4.reduce(R, []), [v4, R]), k3 = t17.useCallback((n14) => s(p8)(n14), [p8]), q = t17.useCallback((n14) => s(S)(n14), [S]), [J2, Q4] = le({ items: $ }), U2 = h(a11, s15);
  return t17.createElement(n10.Provider, { value: [K, j] }, t17.createElement(a7.Provider, { value: [J2, Q4] }, t17.createElement(s12.Provider, { value: [v4, H] }, t17.createElement(
    "div",
    {
      ref: l5,
      ...U2,
      role: b3 ? void 0 : "listbox",
      id: o15,
      dir: F2,
      style: m5,
      tabIndex: e3(c3, b3, void 0),
      className: n2(
        "k-chip-list",
        {
          "k-rtl": F2 === "rtl",
          "k-disabled": b3,
          [`k-chip-list-${a4.sizeMap[f3] || f3}`]: f3
        },
        d3
      ),
      "aria-label": z2,
      "aria-labelledby": T2,
      "aria-describedby": M2,
      "aria-orientation": "horizontal",
      "aria-multiselectable": x4 === "multiple"
    },
    v4.map((n14, u5) => t17.createElement(
      A,
      {
        role: "option",
        dataItem: n14,
        size: f3,
        key: [k3(n14), u5].join("-"),
        text: q(n14),
        value: k3(n14),
        ariaLabel: n14.ariaLabel,
        svgIcon: n14.svgIcon || void 0
      }
    ))
  ))));
});
var oe = {
  id: import_prop_types14.default.string,
  className: import_prop_types14.default.string,
  tabIndex: import_prop_types14.default.number,
  data: import_prop_types14.default.any,
  defaultData: import_prop_types14.default.arrayOf(import_prop_types14.default.any),
  onDataChange: import_prop_types14.default.func,
  value: import_prop_types14.default.oneOfType([import_prop_types14.default.any, import_prop_types14.default.arrayOf(import_prop_types14.default.any)]),
  defaultValue: import_prop_types14.default.oneOfType([import_prop_types14.default.any, import_prop_types14.default.arrayOf(import_prop_types14.default.any)]),
  onChange: import_prop_types14.default.func,
  selection: import_prop_types14.default.oneOf(["single", "none", "multiple"]),
  textField: import_prop_types14.default.string,
  valueField: import_prop_types14.default.string,
  disabled: import_prop_types14.default.bool,
  dir: import_prop_types14.default.oneOf(["ltr", "rtl"]),
  ariaLabelledBy: import_prop_types14.default.string,
  ariaDescribedBy: import_prop_types14.default.string,
  size: import_prop_types14.default.oneOf([null, "small", "medium", "large"])
};
var r9 = {
  chip: z,
  size: "medium",
  disabled: false,
  defaultValue: null,
  defaultData: [],
  dir: "ltr",
  selection: "none",
  textField: "text",
  valueField: "value",
  removable: "removable"
};
E.displayName = "KendoReactChipList";
E.propTypes = oe;

// node_modules/@progress/kendo-react-buttons/FloatingActionButton/FloatingActionButton.mjs
var t19 = __toESM(require_react(), 1);
var import_prop_types16 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-buttons/FloatingActionButton/FloatingActionButtonItem.mjs
var e17 = __toESM(require_react(), 1);
var import_prop_types15 = __toESM(require_prop_types(), 1);
var f2 = e17.forwardRef((p8, I3) => {
  const {
    className: c3,
    disabled: n14,
    text: s15,
    icon: i10,
    style: g6,
    id: k3,
    focused: m5,
    tabIndex: x4,
    index: o15,
    dataItem: y3,
    item: C2,
    svgIcon: r10,
    onDown: d3,
    onClick: l5,
    ...N2
  } = p8, a11 = e17.useRef(null), u5 = e17.useCallback(() => {
    a11.current && a11.current.focus();
  }, []), v4 = e17.useCallback(
    () => ({
      element: a11.current,
      focus: u5
    }),
    [u5]
  );
  e17.useImperativeHandle(I3, v4);
  const E2 = e17.useCallback(
    (P3) => {
      l5 && o15 !== void 0 && !n14 && l5(P3, o15);
    },
    [l5, o15]
  ), w2 = e17.useMemo(
    () => n2(
      "k-fab-item",
      {
        "k-focus": m5,
        "k-disabled": n14
      },
      c3
    ),
    [c3, n14, m5]
  ), b3 = C2;
  return e17.createElement(
    "li",
    {
      ref: a11,
      id: k3,
      className: w2,
      style: g6,
      role: "menuitem",
      tabIndex: e3(x4, n14),
      "aria-disabled": n14,
      "aria-label": `${s15 || ""} floatingactionbutton item`,
      onClick: E2,
      onMouseDown: d3,
      onPointerDown: d3,
      ...N2
    },
    b3 ? e17.createElement(b3, { itemIndex: o15, item: y3 }) : e17.createElement(e17.Fragment, null, s15 && e17.createElement("span", { className: "k-fab-item-text" }, s15), i10 || r10 ? e17.createElement(v2, { className: "k-fab-item-icon", name: i10, icon: r10 }) : null)
  );
});
f2.propTypes = {
  className: import_prop_types15.default.string,
  style: import_prop_types15.default.object,
  children: import_prop_types15.default.any,
  disabled: import_prop_types15.default.bool,
  focused: import_prop_types15.default.bool,
  index: import_prop_types15.default.number,
  icon: import_prop_types15.default.string,
  svgIcon: r,
  text: import_prop_types15.default.string,
  tabIndex: import_prop_types15.default.number,
  customProp: import_prop_types15.default.any
};
f2.displayName = "KendoFloatingActionButtonItem";

// node_modules/@progress/kendo-react-buttons/FloatingActionButton/utils.mjs
var s14 = "16px";
var i9 = (o15) => typeof o15 == "number" ? o15 + "px" : o15;
var y2 = (o15, r10) => {
  const t21 = { horizontal: r10 ? "right" : "left", vertical: "bottom" };
  return o15.horizontal === "end" && (t21.horizontal = r10 ? "left" : "right"), t21;
};
var x3 = (o15, r10) => {
  const t21 = { horizontal: r10 ? "right" : "left", vertical: "top" };
  return o15.horizontal === "end" && (t21.horizontal = r10 ? "left" : "right"), t21;
};
var b2 = (o15, r10) => {
  const t21 = r10 === "end" ? "end" : "start";
  return {
    rtl: { end: "k-text-left", start: "k-text-right" },
    ltr: { start: "k-text-left", end: "k-text-right" }
  }[o15][t21];
};
var m4 = (o15, r10, t21, c3) => {
  const n14 = r10.horizontal, e20 = r10.vertical;
  if (o15.current) {
    const l5 = t21 && t21.x !== void 0 ? i9(t21.x) : s14, d3 = t21 && t21.x !== void 0 ? `calc(50% + ${i9(t21.x)})` : "50%", h3 = t21 && t21.y !== void 0 ? i9(t21.y) : s14, u5 = t21 && t21.y !== void 0 ? `calc(50% + ${i9(t21.y)})` : "50%";
    o15.current.style.setProperty(a10(r10, c3), n14 === "center" ? d3 : l5), o15.current.style.setProperty(p6(r10), e20 === "middle" ? u5 : h3), c3 && ((e20 === "top" || e20 === "bottom") && n14 === "start" && o15.current.style.setProperty("left", "unset"), e20 === "middle" && n14 === "end" && o15.current.style.setProperty("right", "unset"), e20 === "middle" && n14 === "start" && o15.current.style.setProperty("left", "unset"));
  }
};
var a10 = (o15, r10) => {
  const { horizontal: t21 } = o15;
  return {
    end: r10 ? "left" : "right",
    center: "left",
    start: r10 ? "right" : "left"
  }[t21 || "end"];
};
var p6 = (o15) => ({
  top: "top",
  middle: "top",
  bottom: "bottom"
})[o15.vertical || "bottom"];

// node_modules/@progress/kendo-react-buttons/FloatingActionButton/FloatingActionButton.mjs
var Be = 2;
var Me = 100;
var ee = t19.forwardRef(
  (P3, te2) => {
    const {
      align: u5 = h2.align,
      alignOffset: $,
      className: K,
      disabled: d3,
      icon: w2,
      svgIcon: R,
      iconClass: S,
      id: W,
      items: n14,
      item: oe2,
      text: C2,
      positionMode: A = h2.positionMode,
      size: y3 = h2.size,
      style: ae,
      rounded: I3 = h2.rounded,
      themeColor: F2 = h2.themeColor,
      overlayStyle: ne,
      tabIndex: se,
      accessKey: le2,
      popupSettings: v4 = {},
      modal: ie3,
      onClick: O,
      onItemClick: Z,
      onFocus: z2,
      onBlur: q,
      onKeyDown: _,
      onOpen: H,
      onClose: j,
      ...re2
    } = P3, L = n(), X = L ? L + Be : Me, U2 = t19.useRef(null), l5 = t19.useRef(null), ce = t19.useRef(null), ue = t19.useRef(null), G3 = t19.useCallback(() => {
      l5.current && l5.current.focus();
    }, []), f3 = t19.useCallback(
      () => ({
        element: l5.current,
        focus: G3
      }),
      [G3]
    );
    t19.useImperativeHandle(U2, f3), t19.useImperativeHandle(
      te2,
      () => U2.current
    );
    const [i10, r10] = t19.useState(false), [E2, p8] = t19.useState(false), [g6, s15] = t19.useState(-1), de = I() + "-button-id", T2 = u(l5, P3.dir), k3 = T2 === "rtl", x4 = I() + "-list-id";
    t19.useEffect(() => {
      m4(l5, u5, $, k3);
    }, [l5, u5, $, k3]), t19.useEffect(() => {
      E2 && l5 && l5.current && l5.current.focus();
    }, [E2, l5]);
    const m5 = t19.useCallback(
      (e20, a11) => {
        n14 && v(a11 ? H : j, e20, f3(), void 0);
      },
      [H, j, n14]
    ), J2 = t19.useCallback(
      (e20) => {
        !e20.target || d3 || (!n14 && O ? v(
          O,
          e20,
          f3(),
          void 0
        ) : (r10(!i10), p8(true), s15(i10 ? -1 : 0), m5(e20, !i10)));
      },
      [r10, p8, s15, O, m5, i10, n14, d3]
    ), fe = t19.useCallback(
      (e20) => {
        p8(true), s15(i10 ? 0 : -1), z2 && v(
          z2,
          e20,
          f3(),
          void 0
        );
      },
      [z2, p8, s15]
    ), pe = t19.useCallback(
      (e20) => {
        p8(false), r10(false), s15(-1), v(
          q,
          e20,
          f3(),
          void 0
        ), i10 && m5(e20, false);
      },
      [q, p8, r10, s15, m5]
    ), me = t19.useCallback((e20) => {
      e20.preventDefault();
    }, []), B = t19.useCallback(
      (e20, a11) => {
        n14 && (n14[a11].disabled || v(Z, e20, f3(), {
          itemProps: n14[a11],
          itemIndex: a11
        }));
      },
      [Z]
    ), be = t19.useCallback(
      (e20, a11) => {
        !e20.target || !n14 || (s15(a11), r10(false), B(e20, a11), m5(e20, false));
      },
      [s15, r10, B, m5]
    ), ge = t19.useCallback(
      (e20) => {
        o(document) === l5.current && e20.preventDefault();
      },
      [l5]
    ), ke = t19.useCallback(
      (e20) => {
        const a11 = g6, M2 = n14 ? n14.length : -1;
        if (e20.altKey) {
          !i10 && e20.keyCode === e2.down && (e20.preventDefault(), r10(true), s15(0)), i10 && e20.keyCode === e2.up && (e20.preventDefault(), r10(false), s15(-1));
          return;
        }
        switch (e20.keyCode) {
          case e2.enter:
          case e2.space:
            a11 >= 0 && B(e20, a11), n14 || J2(e20), e20.preventDefault(), r10(!i10), s15(i10 ? -1 : 0);
            break;
          case e2.esc:
            e20.preventDefault(), r10(false), s15(-1);
            break;
          case e2.home:
            e20.preventDefault(), s15(0);
            break;
          case e2.end:
            e20.preventDefault(), s15(M2 - 1);
            break;
          case e2.down:
          case e2.right:
            e20.preventDefault(), s15(a11 + 1 >= M2 ? 0 : a11 + 1);
            break;
          case e2.up:
          case e2.left:
            e20.preventDefault(), s15(a11 - 1 < 0 ? M2 - 1 : a11 - 1);
            break;
        }
        v(
          _,
          e20,
          f3(),
          void 0
        );
      },
      [_, g6, s15, k3, r10]
    ), he = t19.useMemo(
      () => n2(
        "k-fab k-fab-solid",
        {
          "k-fab-sm": y3 === "small",
          "k-fab-md": y3 === "medium",
          "k-fab-lg": y3 === "large",
          "k-disabled": d3,
          "k-pos-absolute": A === "absolute",
          "k-pos-fixed": A === "fixed",
          "k-focus": E2,
          [`k-rounded-${a4.roundedMap[I3] || I3}`]: I3,
          [`k-fab-solid-${F2}`]: F2
        },
        `k-${u5.vertical}-${u5.horizontal}`,
        K
      ),
      [F2, y3, I3, d3, A, u5, E2, K]
    ), Ce = n14 && n14.map((e20, a11) => t19.createElement(
      f2,
      {
        ...e20,
        key: a11,
        index: a11,
        id: `${x4}-${a11}`,
        disabled: d3 || e20.disabled,
        focused: g6 === a11,
        dataItem: e20,
        item: oe2,
        className: n2(e20.className, b2(T2 || "ltr", u5.horizontal)),
        onClick: be,
        onDown: ge
      }
    )), Q4 = !!((w2 || R) && !C2), V2 = (l5.current ? l5.current.offsetWidth : 0) / 2 - 32 / 2;
    let D;
    return w2 || R ? D = t19.createElement(v2, { className: "k-fab-icon", name: w2, icon: R }) : S ? D = t19.createElement("span", { role: "presentation", className: S }) : D = null, t19.createElement(t.Provider, { value: X }, t19.createElement(t19.Fragment, null, t19.createElement(
      "button",
      {
        ref: l5,
        id: W || de,
        role: "button",
        type: "button",
        "aria-disabled": d3,
        "aria-expanded": n14 ? i10 : void 0,
        "aria-haspopup": !!n14,
        "aria-label": `${C2 || ""} floatingactionbutton`,
        "aria-owns": n14 ? x4 : void 0,
        "aria-activedescendant": g6 >= 0 && n14 ? `${x4}-${g6}` : void 0,
        tabIndex: e3(se, d3),
        accessKey: le2,
        dir: T2,
        disabled: d3,
        className: he,
        style: ae,
        onClick: J2,
        onMouseDown: me,
        onFocus: fe,
        onBlur: pe,
        onKeyDown: ke,
        ...re2
      },
      D,
      C2 && t19.createElement("span", { className: "k-fab-text" }, C2)
    ), ie3 && i10 && t19.createElement(
      "div",
      {
        className: "k-overlay",
        style: {
          zIndex: X,
          ...ne
        }
      }
    ), t19.createElement(
      te,
      {
        ref: ue,
        anchor: l5.current,
        show: i10,
        animate: v4.animate,
        popupClass: n2("k-popup-transparent k-fab-popup", v4.popupClass),
        anchorAlign: v4.anchorAlign || y2(u5, k3),
        popupAlign: v4.popupAlign || x3(u5, k3),
        style: { boxShadow: "none" }
      },
      t19.createElement(
        "ul",
        {
          ref: ce,
          role: "menu",
          "aria-labelledby": W,
          id: x4,
          className: n2("k-fab-items", {
            "k-fab-items-bottom": u5.vertical !== "bottom",
            "k-fab-items-top": u5.vertical === "bottom"
          }),
          style: {
            paddingLeft: Q4 ? V2 : void 0,
            paddingRight: Q4 ? V2 : void 0
          }
        },
        Ce
      )
    )));
  }
);
ee.propTypes = {
  className: import_prop_types16.default.string,
  style: import_prop_types16.default.object,
  id: import_prop_types16.default.string,
  dir: import_prop_types16.default.string,
  tabIndex: import_prop_types16.default.number,
  accessKey: import_prop_types16.default.string,
  disabled: import_prop_types16.default.bool,
  icon: import_prop_types16.default.string,
  svgIcon: r,
  iconClass: import_prop_types16.default.string,
  text: import_prop_types16.default.string,
  alignOffset: import_prop_types16.default.shape({
    x: import_prop_types16.default.oneOfType([import_prop_types16.default.number, import_prop_types16.default.string]).isRequired,
    y: import_prop_types16.default.oneOfType([import_prop_types16.default.number, import_prop_types16.default.string]).isRequired
  }),
  align: import_prop_types16.default.shape({
    vertical: import_prop_types16.default.oneOf(["top", "middle", "bottom"]).isRequired,
    horizontal: import_prop_types16.default.oneOf(["start", "center", "end"]).isRequired
  }),
  positionMode: import_prop_types16.default.oneOf(["absolute", "fixed"]),
  size: import_prop_types16.default.oneOf([null, "small", "medium", "large"]),
  rounded: import_prop_types16.default.oneOf([null, "small", "medium", "large", "full"]),
  themeColor: import_prop_types16.default.oneOf([
    null,
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
    "inverse"
  ]),
  modal: import_prop_types16.default.bool,
  overlayStyle: import_prop_types16.default.object
};
var h2 = {
  align: { vertical: "bottom", horizontal: "end" },
  size: "medium",
  rounded: "full",
  themeColor: "primary",
  positionMode: "fixed"
};
ee.displayName = "KendoFloatingActionButton";

// node_modules/@progress/kendo-react-buttons/SpeechToTextButton/SpeechToTextButton.mjs
var import_react3 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-webspeech-common/dist/es/webspeech/speechrecognition.js
var START = "start";
var END = "end";
var RESULT = "result";
var ERROR = "error";
var DEFAULT_SPEECH_OPTIONS = {
  lang: "en-US",
  continuous: false,
  interimResults: false,
  maxAlternatives: 1,
  events: {
    [START]: null,
    [END]: null,
    [RESULT]: null,
    [ERROR]: null
  }
};
function getSpeechRecognitionCtor() {
  return window ? window.SpeechRecognition || window.webkitSpeechRecognition : void 0;
}
var KendoSpeechRecognition = class {
  constructor(options) {
    this.recognition = null;
    this.isListening = false;
    this.options = { ...DEFAULT_SPEECH_OPTIONS };
    this.handleResult = (event) => {
      this.triggerOnResult(event);
    };
    this.handleError = (event) => {
      this.triggerOnError(event);
    };
    this.handleEnd = () => {
      this.triggerOnEnd();
      this.isListening = false;
    };
    this.handleStart = () => {
      this.triggerOnStart();
      this.isListening = true;
    };
    this.init(options);
  }
  init(options) {
    const RecognitionCtor = getSpeechRecognitionCtor();
    if (!RecognitionCtor) {
      console.error("Speech recognition is not supported in this browser.");
      this.recognition = null;
      return;
    }
    this.recognition = new RecognitionCtor();
    this.setOptions(options);
    this.bindEvents();
  }
  destroy() {
    this.unbindEvents();
    this.isListening = false;
  }
  bindEvents() {
    if (!this.recognition) {
      return;
    }
    this.recognition.onresult = this.handleResult;
    this.recognition.onerror = this.handleError;
    this.recognition.onend = this.handleEnd;
    this.recognition.onstart = this.handleStart;
  }
  unbindEvents() {
    if (this.recognition) {
      this.recognition.onresult = null;
      this.recognition.onerror = null;
      this.recognition.onend = null;
      this.recognition.onstart = null;
      this.recognition.abort();
      this.recognition = null;
    }
  }
  setOptions(options) {
    if (!this.recognition) {
      return;
    }
    const mergedEvents = { ...this.options.events, ...options.events };
    this.options = {
      ...this.options,
      ...options,
      events: mergedEvents
    };
    const { lang, continuous, interimResults, maxAlternatives } = this.options;
    Object.assign(this.recognition, { lang, continuous, interimResults, maxAlternatives });
  }
  triggerOnStart() {
    if (this.options.events[START]) {
      this.options.events[START]();
    }
  }
  triggerOnEnd() {
    if (this.options.events[END]) {
      this.options.events[END]();
    }
  }
  triggerOnResult(event) {
    if (this.options.events[RESULT]) {
      this.options.events[RESULT](event);
    }
  }
  triggerOnError(event) {
    if (this.options.events[ERROR]) {
      this.options.events[ERROR](event);
    }
  }
  start() {
    if (this.recognition && !this.isListening) {
      this.recognition.start();
    }
  }
  stop() {
    if (this.recognition && this.isListening) {
      this.recognition.stop();
    }
  }
  abort() {
    if (this.recognition && this.isListening) {
      this.recognition.abort();
    }
  }
  isSupported() {
    return !!getSpeechRecognitionCtor();
  }
  isActive() {
    return this.isListening;
  }
};

// node_modules/@progress/kendo-react-buttons/messages/index.mjs
var e18 = "speechToTextButton.ariaLabel";
var t20 = "speechToTextButton.title";
var o14 = {
  [e18]: "Start speech recognition",
  [t20]: "Speech to Text Button"
};

// node_modules/@progress/kendo-react-buttons/SpeechToTextButton/SpeechToTextButton.mjs
var ie2 = import_react3.default.forwardRef((a11, M2) => {
  const y3 = !d(e7, { component: "SpeechToTextButton" }), E2 = w(e7), p8 = i8(), {
    fillMode: z2 = "solid",
    rounded: H = "medium",
    size: L = "medium",
    themeColor: B = "base",
    ariaLabel: l5,
    svgIcon: g6,
    disabled: N2,
    iconSize: F2 = "medium",
    title: u5,
    className: O,
    id: K,
    style: P3,
    lang: h3 = "en-US",
    continuous: S = false,
    interimResults: v4 = false,
    maxAlternatives: b3 = 1,
    integrationMode: W = "webSpeech",
    onStart: f3,
    onResult: c3,
    onEnd: m5,
    onError: r10,
    ..._
  } = a11, s15 = import_react3.default.useRef(null), n14 = import_react3.default.useRef(false), [o15, i10] = import_react3.default.useState(false), U2 = import_react3.default.useCallback(async () => {
    n14.current = true, i10(true), f3 && await f3();
  }, [f3]), j = import_react3.default.useCallback(async () => {
    n14.current = false, i10(false), m5 && await m5();
  }, [m5]), q = import_react3.default.useCallback(
    (t21) => {
      const w2 = t21.results, R = w2[w2.length - 1], Z = Array.from(R).map((C2) => ({
        transcript: C2.transcript,
        confidence: C2.confidence
      }));
      c3 == null || c3({
        isFinal: R.isFinal,
        alternatives: Z
      });
    },
    [c3]
  ), D = import_react3.default.useCallback(
    (t21) => {
      i10(false), n14.current = false, r10 == null || r10({
        errorMessage: t21.error
      });
    },
    [r10]
  ), G3 = () => {
    var t21;
    if (typeof window != "undefined" && !("webkitSpeechRecognition" in window || "SpeechRecognition" in window)) {
      r10 && r10({ errorMessage: "Speech Recognition API is not supported in this browser." });
      return;
    }
    (t21 = s15.current) != null && t21.isActive() && s15.current.stop(), s15.current = new KendoSpeechRecognition({
      lang: h3,
      continuous: S,
      interimResults: v4,
      maxAlternatives: b3,
      events: {
        start: U2,
        end: j,
        result: q,
        error: D
      }
    });
  }, k3 = import_react3.default.useCallback(() => {
    var t21;
    n14.current || (t21 = s15.current) == null || t21.start();
  }, []), d3 = import_react3.default.useCallback(() => {
    var t21;
    n14.current && ((t21 = s15.current) == null || t21.stop());
  }, []), J2 = import_react3.default.useCallback(() => {
    var t21;
    n14.current && ((t21 = s15.current) == null || t21.abort(), n14.current = false, i10(false));
  }, []), Q4 = () => n14.current;
  import_react3.default.useImperativeHandle(M2, () => ({
    start: k3,
    stop: d3,
    abort: J2,
    isActive: Q4
  })), import_react3.default.useEffect(() => (G3(), () => {
    n14.current && d3();
  }), [h3, S, v4, b3, W]);
  const V2 = () => {
    o15 ? d3() : k3();
  }, X = a11.icon !== void 0 || a11.iconClass !== void 0, Y2 = import_react3.default.useMemo(() => o15 ? stopSmIcon : g6 || microphoneOutlineIcon, [o15, g6]);
  return import_react3.default.createElement(import_react3.default.Fragment, null, import_react3.default.createElement(
    k,
    {
      id: K,
      className: n2(
        {
          "k-speech-to-text-button": true,
          "k-listening": o15
        },
        O
      ),
      style: P3,
      svgIcon: X ? void 0 : Y2,
      iconSize: F2,
      fillMode: z2,
      rounded: H,
      size: L,
      themeColor: B,
      "aria-label": l5 != null ? l5 : p8.toLanguageString(e18, o14[e18]),
      "aria-pressed": o15,
      disabled: N2,
      title: u5 != null ? u5 : p8.toLanguageString(t20, o14[t20]),
      onClick: V2,
      ..._
    },
    a11.children
  ), y3 && import_react3.default.createElement(P, { message: E2 }));
});
ie2.displayName = "KendoSpeechToTextButton";

// node_modules/@progress/kendo-react-buttons/index.mjs
var p7 = a2(
  Y
);
p7.displayName = "KendoReactDropDownButton";
var n13 = a2(
  C
);
n13.displayName = "KendoReactSplitButton";

export {
  k,
  T,
  e6 as e,
  te,
  C,
  s7 as s,
  Y,
  o2 as o,
  t6 as t,
  localeInfo,
  o3 as o2,
  s9 as s2,
  l2 as l,
  s10 as s3,
  p4 as p,
  v3 as v,
  G2 as G,
  i7 as i,
  i8 as i2,
  N,
  t15 as t2,
  s11 as s4,
  z,
  E,
  f2 as f,
  ee,
  ie2 as ie,
  p7 as p2,
  n13 as n
};
/*! Bundled license information:

@progress/kendo-react-buttons/Button.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/ButtonGroup.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/ListButton/ButtonItem.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/ListButton/SplitButtonItem.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/ListButton/utils/navigation.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-popup/animation.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-popup/util.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-popup/Popup.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-popup/index.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/ListButton/utils/popup.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/package-metadata.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/ListButton/SplitButton.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/ListButton/DropDownButtonItem.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/ListButton/DropDownButton.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/util.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/toolbar/tools/ToolbarSeparator.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/Intl/IntlService.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/Localization/messages.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/Localization/LocalizationService.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/globalization/GlobalizationContext.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/intlUtils.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/Intl/IntlProvider.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/Intl/load.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/Intl/IntlDataProvider.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/Localization/LocalizationProvider.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/Localization/loadMessages.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/Localization/LocalizationDataProvider.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/server/ServerGlobalization.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/hooks/useInternationalization.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/hooks/useLocalization.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-intl/index.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/toolbar/messages/index.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollButton.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollable.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/toolbar/tools/ToolbarOverflowSection.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/toolbar/Toolbar.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/toolbar/tools/ToolbarItem.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/toolbar/tools/ToolbarSpacer.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/Chip/chip-list-contexts.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/Chip/focus-reducer.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/Chip/data-reducer.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/Chip/selection-reducer.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/Chip/Chip.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/Chip/ChipList.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/FloatingActionButton/FloatingActionButtonItem.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/FloatingActionButton/utils.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/FloatingActionButton/FloatingActionButton.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/messages/index.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/SpeechToTextButton/SpeechToTextButton.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-buttons/index.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)
*/
//# sourceMappingURL=chunk-HJAFCX7L.js.map
