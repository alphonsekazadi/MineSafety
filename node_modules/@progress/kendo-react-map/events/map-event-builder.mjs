/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import { BeforeResetEvent as m } from "./before-reset-event.mjs";
import { MapClickEvent as a } from "./map-click-event.mjs";
import { MarkerActivateEvent as p } from "./marker-activate-event.mjs";
import { MarkerClickEvent as n } from "./marker-click-event.mjs";
import { MarkerCreatedEvent as i } from "./marker-created-event.mjs";
import { PanEndEvent as E } from "./pan-end-event.mjs";
import { PanEvent as f } from "./pan-event.mjs";
import { ResetEvent as v } from "./reset-event.mjs";
import { ShapeClickEvent as s } from "./shape-click-event.mjs";
import { ShapeCreatedEvent as k } from "./shape-created-event.mjs";
import { ShapeFeatureCreatedEvent as C } from "./shape-feature-created-event.mjs";
import { ShapeMouseEnterEvent as c } from "./shape-mouse-enter-event.mjs";
import { ShapeMouseLeaveEvent as d } from "./shape-mouse-leave-event.mjs";
import { ZoomEndEvent as h } from "./zoom-end-event.mjs";
import { ZoomStartEvent as M } from "./zoom-start-event.mjs";
const r = {
  beforeReset: m,
  mapClick: a,
  markerActivate: p,
  markerClick: n,
  markerCreated: i,
  panEnd: E,
  pan: f,
  reset: v,
  shapeClick: s,
  shapeCreated: k,
  shapeFeatureCreated: C,
  shapeMouseEnter: c,
  shapeMouseLeave: d,
  zoomEnd: h,
  zoomStart: M
};
function T(e, t, o) {
  if (r[e])
    return new r[e](t, o);
}
export {
  T as create
};
