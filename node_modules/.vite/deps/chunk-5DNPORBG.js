import {
  A3 as A,
  f3 as f2,
  m2 as m,
  x2 as x
} from "./chunk-OHRPGL2R.js";
import {
  a,
  a2,
  d2,
  f,
  h2 as h,
  i as i2,
  s as s3,
  t2 as t,
  t3 as t2,
  y
} from "./chunk-HFWWXSDB.js";
import {
  N,
  ee,
  i2 as i,
  ie,
  k,
  l,
  p,
  s3 as s2,
  te
} from "./chunk-HJAFCX7L.js";
import {
  arrowRotateCwIcon,
  cancelOutlineIcon,
  checkIcon,
  chevronDownIcon,
  chevronLeftIcon,
  chevronRightIcon,
  chevronUpIcon,
  commentIcon,
  copyIcon,
  menuIcon,
  moreHorizontalIcon,
  paperPlaneIcon,
  sparklesIcon,
  stopSmIcon,
  thumbDownOutlineIcon,
  thumbUpOutlineIcon
} from "./chunk-IX5JQNBR.js";
import {
  E,
  P,
  d5 as d,
  e2 as e,
  e3 as e2,
  n4 as n,
  require_prop_types,
  s7 as s,
  v,
  w2 as w
} from "./chunk-TPJZDNMR.js";
import {
  require_react
} from "./chunk-DRWLMN53.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/@progress/kendo-react-conversational-ui/components/ChatMessage.mjs
var e3 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-conversational-ui/components/base/FocusableUponSelection.mjs
var o = __toESM(require_react(), 1);
var s4 = class extends o.Component {
  /**
   * @hidden
   */
  componentDidUpdate(e15) {
    !e15.selected && this.props.selected && this.elementToFocus.focus();
  }
};

// node_modules/@progress/kendo-react-conversational-ui/components/ChatMessage.mjs
var i3 = class i4 extends s4 {
  /**
   * @hidden
   */
  render() {
    return e3.createElement(
      "div",
      {
        className: this.getClassNames(),
        tabIndex: this.props.tabIndex,
        onClick: () => this.props.onRequestSelection(this.props.item.selectionIndex),
        onFocus: () => this.props.onRequestSelection(this.props.item.selectionIndex),
        ref: (t10) => {
          this.elementToFocus = t10;
        }
      },
      this.getTimestampView(),
      this.getMainView(),
      this.getStatusView()
    );
  }
  getMainView() {
    return this.props.item.typing ? e3.createElement("div", { className: "k-chat-bubble" }, e3.createElement("div", { className: "k-typing-indicator" }, e3.createElement("span", null), e3.createElement("span", null), e3.createElement("span", null))) : this.props.template ? e3.createElement(this.props.template, { item: this.props.item }) : this.props.item.text ? e3.createElement("div", { className: "k-chat-bubble" }, this.props.item.text) : null;
  }
  getTimestampView() {
    let t10 = null;
    return this.props.item.timestamp && (t10 = e3.createElement("time", { className: "k-message-time", "aria-hidden": !this.props.selected }, l(this).formatDate(this.props.item.timestamp, this.props.dateFormat))), t10;
  }
  getStatusView() {
    let t10 = null;
    return this.props.item.status && (t10 = e3.createElement("span", { className: "k-message-status" }, this.props.item.status)), t10;
  }
  getClassNames() {
    return n(
      { "k-only": this.props.isOnlyItemInGroup },
      { "k-first": this.props.isFirstItemInGroup && !this.props.isOnlyItemInGroup },
      { "k-last": this.props.isLastItemInGroup && !this.props.isOnlyItemInGroup },
      { "k-selected": this.props.selected },
      { "k-focus": this.props.selected },
      "k-message"
    );
  }
};
i3.defaultProps = {
  dateFormat: "g",
  tabIndex: -1
};
var s5 = i3;
p(s5);

// node_modules/@progress/kendo-react-conversational-ui/components/Chat.mjs
var import_prop_types = __toESM(require_prop_types(), 1);
var i6 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-conversational-ui/utils.mjs
var h2 = (o7, t10) => o7 && t10.author && o7.id === t10.author.id;

// node_modules/@progress/kendo-react-conversational-ui/ViewItem.mjs
var o2 = (s13) => s13[s13.length - 1];
var p2 = (s13, e15) => s13 && e15 && (e15.getDate() !== s13.getDate() || e15.getMonth() !== s13.getMonth() || e15.getFullYear() !== s13.getFullYear());
var r = (s13, e15) => {
  const t10 = e15.timestamp, a9 = o2(s13);
  if (t10 && (!a9 || p2(t10, a9.timestamp))) {
    const n4 = {
      type: "date-marker",
      timestamp: t10,
      trackBy: t10.getTime()
    };
    s13.push(n4);
  }
};
var u = (s13, e15, t10) => {
  const a9 = o2(s13);
  let n4;
  e15.typing && !t10 || (a9 && a9.type === "message-group" && (n4 = a9.messages), n4 && h2(e15.author, o2(n4)) ? n4.push(e15) : s13.push({
    type: "message-group",
    messages: [e15],
    author: e15.author,
    timestamp: e15.timestamp,
    trackBy: e15
  }));
};
var c = (s13) => (e15, t10, a9) => {
  const n4 = a9 === s13 - 1;
  return r(e15, t10), u(e15, t10, n4), t10.attachments && t10.attachments.length > 1 && e15.push({
    type: "attachment-group",
    attachments: t10.attachments,
    attachmentLayout: t10.attachmentLayout,
    timestamp: t10.timestamp,
    trackBy: t10
  }), t10.suggestedActions && n4 && e15.push({
    type: "action-group",
    actions: t10.suggestedActions,
    timestamp: t10.timestamp,
    trackBy: t10
  }), e15;
};
function h3(s13) {
  let e15 = 0;
  s13.forEach((t10) => {
    t10.type === "message-group" ? t10.messages.forEach((a9) => {
      a9.selectionIndex = e15++;
    }) : (t10.type === "attachment-group" || t10.type === "action-group") && (t10.selectionIndex = e15++);
  }), s13.lastSelectionIndex = e15 - 1;
}
var m2 = (s13) => {
  const t10 = s13.slice().reduce(c(s13.length), []);
  return h3(t10), t10;
};

// node_modules/@progress/kendo-react-conversational-ui/components/ActionGroup.mjs
var s7 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-conversational-ui/components/Action.mjs
var s6 = __toESM(require_react(), 1);
var a3 = class extends s4 {
  constructor() {
    super(...arguments), this.onKeyDown = (e15) => {
      e15.keyCode === e.enter && this.props.onActionExecute(this.props.item, e15);
    };
  }
  render() {
    return s6.createElement(
      "span",
      {
        role: "button",
        className: this.getClassNames(),
        onClick: (e15) => this.props.onActionExecute(this.props.item, e15),
        ref: (e15) => {
          this.elementToFocus = e15;
        },
        onKeyDown: this.onKeyDown,
        tabIndex: 0
      },
      this.props.item.title || this.props.item.value
    );
  }
  getClassNames() {
    return n(
      "k-quick-reply",
      { "k-first": this.props.isFirstItemInGroup },
      { "k-last": this.props.isLastItemInGroup },
      { "k-selected": this.props.selected },
      { "k-focus": this.props.selected }
    );
  }
};

// node_modules/@progress/kendo-react-conversational-ui/components/base/SelectableItemsContainer.mjs
var i5 = __toESM(require_react(), 1);
var a4 = class extends i5.Component {
  constructor() {
    super(...arguments), this.state = { selectedItemIndex: null }, this.onRequestContainerSelection = () => this.props.onRequestSelection(this.props.group.selectionIndex), this.onKeyDown = (t10) => {
      let e15 = null, n4, s13;
      this.isKeyboardNavigationLeftRight ? (n4 = e.left, s13 = e.right) : (n4 = e.up, s13 = e.down), t10.keyCode === n4 ? e15 = this.navigate(false) : t10.keyCode === s13 && (e15 = this.navigate(true)), e15 !== null && (t10.preventDefault(), t10.stopPropagation());
    };
  }
  static getDerivedStateFromProps(t10, e15) {
    return !t10.selected && e15.selectedItemIndex !== null ? { selectedItemIndex: null } : t10.selected && e15.selectedItemIndex === null ? { selectedItemIndex: 0 } : null;
  }
  navigate(t10, e15 = 0) {
    let n4 = null;
    const s13 = this.state.selectedItemIndex;
    return t10 ? s13 === null ? n4 = e15 : s13 < this.getLastSelectionIndex() && (n4 = s13 + 1) : s13 === null ? n4 = 0 : s13 > 0 && (n4 = s13 - 1), n4 !== null && this.setState({ selectedItemIndex: n4 }), n4;
  }
  get isKeyboardNavigationLeftRight() {
    return true;
  }
  getLastSelectionIndex() {
    let t10 = -1;
    if (this.props.group.type === "action-group") {
      const e15 = this.props.group;
      t10 = e15.actions ? e15.actions.length - 1 : -1;
    } else if (this.props.group.type === "attachment-group") {
      const e15 = this.props.group;
      t10 = e15.attachments ? e15.attachments.length - 1 : -1;
    }
    return t10;
  }
};

// node_modules/@progress/kendo-react-conversational-ui/components/ActionGroup.mjs
var l2 = class extends a4 {
  constructor(e15) {
    super(e15);
  }
  render() {
    const e15 = this.props.group.actions ? this.props.group.actions.length - 1 : 0;
    return s7.createElement("div", { className: this.getClassNames(), onClick: this.onRequestContainerSelection, onKeyDown: this.onKeyDown }, this.props.group.actions && this.props.group.actions.map((o7, t10) => s7.createElement(
      a3,
      {
        item: o7,
        onActionExecute: this.props.onActionExecute,
        selected: t10 === this.state.selectedItemIndex,
        isFirstItemInGroup: t10 === 0,
        isLastItemInGroup: t10 === e15,
        key: t10
      }
    )));
  }
  getClassNames() {
    return n("k-quick-replies");
  }
};

// node_modules/@progress/kendo-react-conversational-ui/components/AttachmentGroup.mjs
var s8 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-conversational-ui/components/Attachment.mjs
var e4 = __toESM(require_react(), 1);
var p3 = class extends s4 {
  render() {
    return e4.createElement(
      "div",
      {
        className: this.getClassNames(),
        tabIndex: this.getTabIndexValue(),
        onClick: this.props.onClick,
        ref: (t10) => {
          this.elementToFocus = t10;
        }
      },
      this.props.template ? e4.createElement(this.props.template, { item: this.props.item }) : e4.createElement("div", { className: "k-card" }, e4.createElement("div", { className: "k-card-body" }, this.getTitleView(), this.getSubtitleView(), this.getContentView()))
    );
  }
  getTabIndexValue() {
    if (this.props.tabbable !== void 0)
      return this.props.tabbable ? 0 : -1;
  }
  getClassNames() {
    return n(
      { "k-selected": this.props.selected },
      { "k-focus": this.props.selected },
      { "k-first": this.props.isFirstItemInGroup },
      { "k-last": this.props.isLastItemInGroup }
    );
  }
  getTitleView() {
    return this.props.item.title ? e4.createElement("h5", { className: "k-card-title" }, this.props.item.title) : null;
  }
  getSubtitleView() {
    return this.props.item.subtitle ? e4.createElement("h6", { className: "k-card-subtitle" }, this.props.item.subtitle) : null;
  }
  getContentView() {
    return this.props.item.contentType.indexOf("image/") === 0 ? e4.createElement("img", { src: this.props.item.content }) : this.props.item.content;
  }
};

// node_modules/@progress/kendo-react-conversational-ui/components/AttachmentGroup.mjs
var k2 = class extends a4 {
  render() {
    const t10 = this.isCardDeckLayout(this.props), o7 = s8.createElement("div", { className: this.getClassNames(), onKeyDown: t10 ? void 0 : this.onKeyDown }, this.props.group.attachments.map((a9, e15) => s8.createElement(
      p3,
      {
        item: a9,
        template: this.props.itemTemplate,
        selected: e15 === this.state.selectedItemIndex,
        tabbable: this.props.isLastGroup && e15 === this.state.selectedItemIndex,
        isFirstItemInGroup: e15 === 0,
        isLastItemInGroup: e15 === this.getLastItemIndex(),
        onClick: () => this.onAttachmentClick(e15),
        key: e15
      }
    )));
    return t10 ? s8.createElement("div", { className: "k-card-deck-scrollwrap", onKeyDown: this.onKeyDown }, this.getLeftScrollBtn(), o7, this.getRightScrollBtn()) : o7;
  }
  // Overriding the default navigation.
  get isKeyboardNavigationLeftRight() {
    return this.isCardDeckLayout(this.props);
  }
  getLastItemIndex() {
    return this.props.group.attachments.length - 1;
  }
  getLeftScrollBtn() {
    let t10 = null;
    return this.isCardDeckLayout(this.props) && this.state.selectedItemIndex && (t10 = s8.createElement(k, { icon: "chevron-left", onClick: () => this.onNavigateBtnClick(false), svgIcon: chevronLeftIcon })), t10;
  }
  getRightScrollBtn() {
    let t10 = null;
    return this.isCardDeckLayout(this.props) && this.state.selectedItemIndex !== this.getLastItemIndex() && (t10 = s8.createElement(k, { icon: "chevron-right", onClick: () => this.onNavigateBtnClick(true), svgIcon: chevronRightIcon })), t10;
  }
  onAttachmentClick(t10) {
    this.onRequestContainerSelection(), this.setState({ selectedItemIndex: t10 });
  }
  onNavigateBtnClick(t10) {
    this.onRequestContainerSelection(), this.navigate(t10, 1);
  }
  isCardDeckLayout(t10) {
    return t10.group.attachmentLayout !== "list";
  }
  getClassNames() {
    return n({
      "k-card-list": this.props.group.attachmentLayout,
      "k-card-deck": this.isCardDeckLayout(this.props)
    });
  }
};

// node_modules/@progress/kendo-react-conversational-ui/components/DateMarker.mjs
var e5 = __toESM(require_react(), 1);
var m3 = class extends e5.Component {
  render() {
    const t10 = this.props.item;
    return e5.createElement("div", { className: "k-timestamp" }, l(this).formatDate(t10.timestamp, "D"));
  }
};
p(m3);

// node_modules/@progress/kendo-react-conversational-ui/components/MessageGroup.mjs
var s10 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-conversational-ui/messages/index.mjs
var s9 = "newMessage.sendButton";
var e6 = "newMessage.optionsButton";
var t3 = "newMessage.messageInput";
var a5 = "avatar.alt";
var n2 = "messageList.ariaLabel";
var o3 = "aIPrompt.noOutputs";
var g = "aIPrompt.cancel";
var p4 = {
  [s9]: "Send",
  [e6]: "Options",
  [t3]: "Message",
  [a5]: "Avatar",
  [n2]: "Message list",
  [g]: "Cancel",
  [o3]: "No output from AI available"
};

// node_modules/@progress/kendo-react-conversational-ui/components/MessageGroup.mjs
var G = class extends s10.Component {
  render() {
    const { avatarUrl: a9, avatarAltText: e15, name: t10 } = this.props.group.author, r4 = s2(this);
    return s10.createElement("div", { className: this.getMsgGroupClassNames() }, t10 && s10.createElement("p", { className: "k-author" }, t10), a9 && s10.createElement(i2, { type: "image" }, s10.createElement(
      "img",
      {
        src: a9,
        alt: e15 !== void 0 ? e15 : r4.toLanguageString(a5, p4[a5])
      }
    )), this.getGroupMessagesView());
  }
  getMsgGroupClassNames() {
    return n("k-message-group", {
      "k-no-avatar": !this.props.group.author.avatarUrl,
      "k-alt": h2(this.props.user, this.props.group.messages[0])
    });
  }
  getGroupMessagesView() {
    const a9 = this.props.group.messages.length - 1;
    return this.props.group.messages.map((e15, t10) => {
      const r4 = [
        s10.createElement(
          this.props.message,
          {
            item: e15,
            template: this.props.itemTemplate,
            selected: e15.selectionIndex === this.props.selectedItemIndex,
            onRequestSelection: this.props.onRequestSelection,
            tabIndex: t10 === a9 && this.props.isLastGroup ? 0 : -1,
            isFirstItemInGroup: t10 === 0,
            isLastItemInGroup: t10 === a9,
            isOnlyItemInGroup: a9 === 0,
            key: t10
          }
        )
      ];
      return e15.attachments && e15.attachments.length === 1 && r4.push(
        s10.createElement(
          p3,
          {
            item: e15.attachments[0],
            template: this.props.attachmentTemplate,
            selected: false,
            key: `att-${t10}`
          }
        )
      ), r4;
    });
  }
};

// node_modules/@progress/kendo-react-conversational-ui/components/NewMessage.mjs
var e8 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-conversational-ui/components/ChatToolbar.mjs
var e7 = __toESM(require_react(), 1);
var d3 = e7.forwardRef((t10, s13) => {
  const { className: a9, ...n4 } = t10, r4 = e7.useRef(null), o7 = e7.useRef(null);
  e7.useImperativeHandle(o7, () => ({ element: r4.current, props: t10 })), e7.useImperativeHandle(s13, () => o7.current);
  const c3 = e7.useMemo(() => n("k-chat-toolbar k-toolbar", a9), [a9]);
  return e7.useEffect(() => {
    r4.current !== null && e2(r4.current, [...E]);
  }, []), e7.createElement(
    N,
    {
      id: t10.id,
      ref: (l3) => {
        l3 && (r4.current = l3.element);
      },
      className: c3,
      ...n4
    },
    e7.createElement("div", { className: "k-button-list k-toolbar-group" }, t10.children)
  );
});
d3.displayName = "KendoReactChatToolbar";

// node_modules/@progress/kendo-react-conversational-ui/components/NewMessage.mjs
var x2 = class extends e8.Component {
  constructor() {
    super(...arguments), this.state = { focused: false }, this.inputEl = null, this.toolbarBtnRef = e8.createRef(), this.onInputKeyDown = (t10) => {
      switch (t10.key) {
        case "Enter":
          return this.sendMessage(t10);
        case "F10":
          return this.openToolbar(t10);
        default:
          return;
      }
    }, this.sendMessage = (t10) => {
      if (this.props.onMessageSend && this.inputEl !== null) {
        const s13 = this.inputEl.value;
        if (s13) {
          const o7 = {
            author: this.props.user,
            text: s13,
            timestamp: /* @__PURE__ */ new Date()
          };
          this.props.onMessageSend(o7, t10);
        }
      }
      this.inputEl !== null && (this.inputEl.value = null);
    }, this.openToolbar = (t10) => {
      this.toolbarBtnRef.current !== null && (t10.preventDefault(), this.props.onToolbarActionButtonClick(!this.props.showToolbar, t10));
    };
  }
  render() {
    const t10 = s2(this), s13 = e8.createElement(
      "input",
      {
        type: "text",
        className: this.getClassNames(),
        placeholder: this.props.placeholder,
        onKeyDown: this.onInputKeyDown,
        onFocus: () => this.setState({ focused: true }),
        onBlur: () => this.setState({ focused: false }),
        ref: (n4) => {
          this.inputEl = n4;
        },
        "aria-label": t10.toLanguageString(
          t3,
          p4[t3]
        )
      }
    ), o7 = e8.createElement(
      k,
      {
        fillMode: "flat",
        themeColor: "base",
        className: "k-chat-send",
        icon: "paper-plane",
        svgIcon: paperPlaneIcon,
        onClick: this.sendMessage,
        "aria-label": t10.toLanguageString(s9, p4[s9]),
        dir: this.props.isDirectionRightToLeft ? "rtl" : void 0
      }
    ), r4 = e8.createElement(
      k,
      {
        ref: this.toolbarBtnRef,
        fillMode: "flat",
        themeColor: "base",
        icon: "more-horizontal",
        svgIcon: moreHorizontalIcon,
        onClick: (n4) => this.props.onToolbarActionButtonClick(!this.props.showToolbar, n4),
        "aria-label": t10.toLanguageString(
          e6,
          p4[e6]
        )
      }
    );
    return e8.createElement(e8.Fragment, null, e8.createElement("span", { className: "k-message-box k-textbox k-input k-input-md k-rounded-md k-input-solid" }, this.props.MessageBox ? e8.createElement(
      this.props.MessageBox,
      {
        messageInput: s13,
        sendButton: o7,
        toolbarButton: r4
      }
    ) : e8.createElement(e8.Fragment, null, s13, e8.createElement("span", { className: "k-input-separator k-input-separator-vertical" }), e8.createElement("span", { className: "k-input-suffix k-input-suffix-horizontal" }, this.props.toolbar && r4, o7))), this.props.showToolbar && e8.createElement(d3, null, this.props.toolbar));
  }
  focusInput() {
    this.inputEl !== null && this.inputEl.focus();
  }
  getClassNames() {
    return n("k-input-inner", { "k-focus": this.state.focused });
  }
};

// node_modules/@progress/kendo-react-conversational-ui/package-metadata.mjs
var e9 = Object.freeze({
  name: "@progress/kendo-react-conversational-ui",
  productName: "KendoReact",
  productCode: "KENDOUIREACT",
  productCodes: ["KENDOUIREACT"],
  publishDate: 1755016115,
  version: "11.4.0",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/components/my-license/"
});

// node_modules/@progress/kendo-react-conversational-ui/components/Chat.mjs
var a6 = class a7 extends i6.Component {
  constructor(s13) {
    super(s13), this.viewItems = [], this.isDirectionRightToLeft = false, this.scrollToBottomOnLoadingData = true, this.showLicenseWatermark = false, this.onFocus = () => {
      clearTimeout(this.timeoutIdForChatLosingFocus);
    }, this.onBlur = () => {
      this.timeoutIdForChatLosingFocus = window.setTimeout(() => {
        this.setState({ selectedItemIndex: null });
      }, 0);
    }, this.onSelectionRequested = (e15) => {
      this.setState({ selectedItemIndex: e15 });
    }, this.onKeyDown = (e15) => {
      let t10 = null;
      const r4 = this.state.selectedItemIndex !== null ? this.state.selectedItemIndex : this.viewItems.lastSelectionIndex;
      e15.keyCode === e.up ? r4 === null ? t10 = 0 : r4 > 0 && (t10 = r4 - 1) : e15.keyCode === e.down && (r4 === null ? t10 = 0 : r4 < this.viewItems.lastSelectionIndex && (t10 = r4 + 1)), t10 !== null && (this.setState({ selectedItemIndex: t10 }), e15.preventDefault());
    }, this.onMessageSend = (e15, t10) => {
      v(this.props.onMessageSend, t10, this, { message: e15 });
    }, this.onActionExecute = (e15, t10) => {
      if (v(this.props.onActionExecute, t10, this, { action: e15 }), !t10.isDefaultPrevented()) {
        switch (e15.type) {
          case "reply":
            this.onMessageSend(
              {
                author: this.props.user,
                text: e15.value,
                timestamp: /* @__PURE__ */ new Date()
              },
              t10
            );
            break;
          case "call":
            window.open("tel:" + e15.value);
            break;
          case "openUrl":
            window.open(e15.value);
            break;
        }
        this.newMsgComp.focusInput();
      }
    }, this.showLicenseWatermark = !d(e9, { component: "Chat" }), this.licenseMessage = w(e9), this.state = { selectedItemIndex: null, isFirstRender: true };
  }
  /**
   * @hidden
   */
  render() {
    this.viewItems = this.getViewItemsFromMsgs(this.props.messages), this.isDirectionRightToLeft = this.checkIsDirectionRightToLeft(this.props);
    const s13 = s2(this);
    return i6.createElement(
      "div",
      {
        style: { width: this.props.width, position: "relative" },
        onKeyDown: this.onKeyDown,
        className: this.getClassNames(),
        ref: (e15) => {
          this.chatWrapperEl = e15;
        }
      },
      i6.createElement(
        "div",
        {
          className: "k-message-list k-avatars",
          onBlur: this.onBlur,
          onFocus: this.onFocus,
          role: "log",
          "aria-label": s13.toLanguageString(
            n2,
            p4[n2]
          ),
          "aria-live": "polite",
          onScroll: (e15) => {
            this.scrollToBottomOnLoadingData = e15.currentTarget.scrollTop === e15.currentTarget.scrollHeight - e15.currentTarget.clientHeight;
          },
          ref: (e15) => {
            this.viewItemsWrapperEl = e15;
          }
        },
        i6.createElement("div", { className: "k-message-list-content" }, this.renderViewItems())
      ),
      i6.createElement(
        x2,
        {
          user: this.props.user,
          onMessageSend: this.onMessageSend,
          isDirectionRightToLeft: this.isDirectionRightToLeft,
          ref: (e15) => {
            this.newMsgComp = e15;
          },
          placeholder: this.props.placeholder,
          MessageBox: this.props.messageBox,
          toolbar: this.props.toolbar,
          onToolbarActionButtonClick: this.props.onToolbarActionExecute,
          showToolbar: this.props.showToolbar
        }
      ),
      this.showLicenseWatermark && i6.createElement(P, { message: this.licenseMessage })
    );
  }
  /**
   * @hidden
   */
  componentDidMount() {
    this.setState({ isFirstRender: false }, () => {
      this.nextTickId = window.setTimeout(() => this.scrollViewItemsToBottom(), 250);
    });
  }
  /**
   * @hidden
   */
  componentWillUnmount() {
    clearTimeout(this.nextTickId);
  }
  /**
   * @hidden
   */
  componentDidUpdate(s13) {
    s13.messages.length !== this.props.messages.length && this.scrollToBottomOnLoadingData && this.scrollViewItemsToBottom();
  }
  getClassNames() {
    return n("k-chat", this.props.className, { "k-rtl": this.isDirectionRightToLeft });
  }
  checkIsDirectionRightToLeft(s13) {
    return !!(s13.dir !== void 0 ? s13.dir === "rtl" : this.chatWrapperEl && getComputedStyle(this.chatWrapperEl).direction === "rtl");
  }
  renderViewItems() {
    const s13 = this.viewItems.length - 1;
    return this.viewItems.map((e15, t10) => {
      if (e15.type === "date-marker")
        return i6.createElement(m3, { item: e15, key: t10 });
      if (e15.type === "message-group")
        return i6.createElement(
          G,
          {
            group: e15,
            itemTemplate: this.props.messageTemplate,
            attachmentTemplate: this.props.attachmentTemplate,
            user: this.props.user,
            selectedItemIndex: this.state.selectedItemIndex,
            onRequestSelection: this.onSelectionRequested,
            isLastGroup: t10 === s13,
            key: t10,
            message: this.props.message || a7.defaultProps.message
          }
        );
      if (e15.type === "attachment-group")
        return i6.createElement(
          k2,
          {
            group: e15,
            itemTemplate: this.props.attachmentTemplate,
            onRequestSelection: this.onSelectionRequested,
            selected: e15.selectionIndex === this.state.selectedItemIndex,
            isLastGroup: t10 === s13,
            key: t10
          }
        );
      if (e15.type === "action-group")
        return i6.createElement(
          l2,
          {
            group: e15,
            onActionExecute: this.onActionExecute,
            onRequestSelection: this.onSelectionRequested,
            selected: e15.selectionIndex === this.state.selectedItemIndex,
            isLastGroup: t10 === s13,
            key: t10
          }
        );
    });
  }
  scrollViewItemsToBottom() {
    this.viewItemsWrapperEl && (this.viewItemsWrapperEl.scrollTop = this.viewItemsWrapperEl.scrollHeight - this.viewItemsWrapperEl.clientHeight);
  }
  getViewItemsFromMsgs(s13) {
    return s13.length > 0 ? m2(s13) : [];
  }
};
a6.propTypes = {
  messages: import_prop_types.default.arrayOf(import_prop_types.default.object),
  user: import_prop_types.default.object,
  messageTemplate: import_prop_types.default.any,
  attachmentTemplate: import_prop_types.default.any,
  width: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.number]),
  onMessageSend: import_prop_types.default.func,
  onActionExecute: import_prop_types.default.func,
  dir: import_prop_types.default.string,
  messageBox: import_prop_types.default.any
}, a6.defaultProps = {
  messages: [],
  dateFormat: "g",
  message: s5
};
var h4 = a6;

// node_modules/@progress/kendo-react-conversational-ui/chat/components/SuggestionsGroup.mjs
var s11 = __toESM(require_react(), 1);
var p5 = (d4) => {
  const { suggestions: o7, onSuggestionClick: l3, suggestionsView: r4 } = d4, t10 = (e15, a9) => {
    (e15.key === "Enter" || e15.key === " ") && (e15.preventDefault(), l3(e15, a9));
  }, i8 = () => o7.map((e15) => s11.createElement(
    "span",
    {
      role: "button",
      tabIndex: e15.disabled ? -1 : 0,
      "aria-label": e15.description,
      "aria-disabled": e15.disabled,
      onClick: (a9) => !e15.disabled && l3(a9, e15),
      onKeyDown: (a9) => !e15.disabled && t10(a9, e15),
      key: e15.id,
      title: e15.description,
      className: n(r4 === "classic" ? "k-prompt-suggestion" : "k-suggestion", {
        "k-disabled": e15.disabled
      })
    },
    e15.text
  ));
  return r4 === "classic" ? i8() : s11.createElement("div", { role: "group", className: "k-suggestion-group" }, i8());
};

// node_modules/@progress/kendo-react-conversational-ui/components/templates/HeroCard.mjs
var e10 = __toESM(require_react(), 1);
var o5 = class extends e10.Component {
  constructor() {
    super(...arguments), this.onBtnClick = (t10, i8) => {
      v(this.props.onActionExecute, i8, this, { action: t10 });
    };
  }
  /**
   * @hidden
   */
  render() {
    return e10.createElement("div", { className: "k-card" }, e10.createElement(
      "img",
      {
        className: "k-card-image",
        src: this.props.imageUrl,
        style: { maxWidth: this.props.imageMaxWidth }
      }
    ), e10.createElement("div", { className: "k-card-body" }, this.getTitleView(), this.getSubtitleView()), e10.createElement("div", { className: "k-card-actions k-card-actions-vertical" }, this.getActionsView()));
  }
  getActionsView() {
    return this.props.actions.map((t10, i8) => e10.createElement("span", { className: "k-card-action", key: i8 }, e10.createElement(k, { fillMode: "flat", onClick: (s13) => this.onBtnClick(t10, s13) }, t10.title)));
  }
  getTitleView() {
    let t10 = null;
    return this.props.title && (t10 = e10.createElement("h5", { className: "k-card-title" }, this.props.title)), t10;
  }
  getSubtitleView() {
    let t10 = null;
    return this.props.subtitle && (t10 = e10.createElement("h6", { className: "k-card-subtitle" }, this.props.subtitle)), t10;
  }
};

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/AIPrompt.mjs
var import_react3 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/AIPromptHeader.mjs
var import_react = __toESM(require_react(), 1);
var u2 = (l3) => {
  const { activeView: a9, toolbarItems: r4, activeViewChange: t10 } = l3, n4 = (e15) => {
    t10 == null || t10.call(null, e15);
  };
  return import_react.default.createElement("div", { className: "k-prompt-header" }, import_react.default.createElement(N, { keyboardNavigation: false, role: "toolbar", className: "k-toolbar-flat" }, r4.map(
    (e15) => import_react.default.isValidElement(e15) ? e15 : import_react.default.createElement(
      k,
      {
        key: e15.name,
        className: a9 === e15.name ? "k-selected" : "",
        size: "medium",
        themeColor: "primary",
        fillMode: "flat",
        rounded: "full",
        title: e15.buttonText,
        svgIcon: e15.buttonIcon,
        onClick: () => n4(e15.name)
      },
      e15.buttonText
    )
  )));
};

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/views/constants.mjs
var m4 = {
  name: "Output view",
  buttonText: "Output",
  buttonIcon: commentIcon
};
var u3 = {
  name: "Commands view",
  buttonIcon: moreHorizontalIcon
};
var c2 = {
  name: "Prompt view",
  buttonText: "Ask AI",
  buttonIcon: sparklesIcon
};

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/AIPromptContext.mjs
var import_react2 = __toESM(require_react(), 1);
var e11 = import_react2.default.createContext([{}, () => {
}]);
var n3 = () => import_react2.default.useContext(e11);

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/AIPrompt.mjs
var O = (c3) => {
  const m5 = !d(e9, { component: "AIPrompt" }), n4 = w(e9), {
    activeView: a9,
    toolbarItems: i8,
    children: l3,
    onActiveViewChange: o7,
    onPromptRequest: p6,
    onCommandExecute: d4,
    style: g2,
    dir: u4,
    className: v2,
    streaming: f4,
    loading: w3,
    onCancel: P3,
    suggestionsView: t10,
    ...V
  } = c3, h5 = i8 || [c2, m4], [S, k3] = import_react3.default.useState({ activeView: a9 }), r4 = {
    ...S,
    activeView: a9,
    streaming: f4,
    loading: w3,
    suggestionsView: t10 != null ? t10 : "classic",
    onCancel: P3,
    onActiveViewChange: o7,
    onPromptRequest: p6,
    onCommandExecute: d4
  }, A2 = (C) => {
    k3(C);
  };
  return import_react3.default.createElement(e11.Provider, { value: [r4, A2] }, import_react3.default.createElement("div", { className: n("k-prompt", v2), style: g2, dir: u4, ...V }, import_react3.default.createElement(
    u2,
    {
      activeView: r4.activeView,
      toolbarItems: h5,
      activeViewChange: o7
    }
  ), l3, m5 && import_react3.default.createElement(P, { message: n4 })));
};

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/AIPromptFooter.mjs
var import_react4 = __toESM(require_react(), 1);
var a8 = (o7) => {
  const { children: e15 } = o7;
  return import_react4.default.createElement("div", { className: "k-prompt-footer" }, import_react4.default.createElement("div", { className: "k-actions k-actions-start k-actions-horizontal k-prompt-actions" }, e15));
};

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/AIPromptContent.mjs
var import_react5 = __toESM(require_react(), 1);
var I = import_react5.default.forwardRef((m5, r4) => {
  const { children: c3, streaming: s13, onCancel: o7 } = m5, n4 = i().toLanguageString(g, p4[g]), [l3] = n3(), p6 = l3.activeView === m4.name, e15 = s13 && p6, u4 = import_react5.default.useCallback(
    (a9) => {
      a9.key === "Escape" && e15 && o7 && (a9.preventDefault(), o7());
    },
    [e15, o7]
  );
  return import_react5.default.createElement("div", { className: "k-prompt-content", ref: r4, onKeyDown: u4 }, e15 && import_react5.default.createElement(
    ee,
    {
      onClick: o7,
      svgIcon: stopSmIcon,
      icon: "stop-sm",
      size: "medium",
      positionMode: "absolute",
      className: "k-prompt-stop-fab k-generating",
      "aria-label": n4,
      title: n4
    }
  ), import_react5.default.createElement("div", { className: "k-prompt-view" }, c3));
});
I.displayName = "KendoReactAIPromptContent";

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/views/AIPromptView.mjs
var import_react7 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/views/AIPromptViewRender.mjs
var r2 = (t10) => {
  const [e15] = n3();
  return e15.activeView === t10.name ? t10.children : null;
};

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/AIPromptExpander.mjs
var import_react6 = __toESM(require_react(), 1);
var s12 = (n4) => {
  const [e15, r4] = import_react6.default.useState(true), { children: a9, title: o7 } = n4;
  return import_react6.default.createElement("div", { className: "k-prompt-expander" }, import_react6.default.createElement(
    k,
    {
      "aria-controls": n4.id,
      fillMode: "flat",
      svgIcon: e15 ? chevronUpIcon : chevronDownIcon,
      title: o7,
      onClick: () => r4(!e15),
      "aria-expanded": e15
    },
    o7
  ), e15 && import_react6.default.createElement("div", { id: n4.id, className: "k-prompt-expander-content" }, a9));
};

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/views/AIPromptView.mjs
var oe = (h5) => {
  const {
    promptInput: x3 = A,
    generateButton: P3 = k,
    enableSpeechToText: o7 = false,
    promptValue: S,
    promptSuggestions: i8
  } = h5, [s13, l3] = import_react7.default.useState(S || ""), [n4] = n3(), [A2, c3] = s(P3), [E2, p6] = s(x3), I2 = () => {
    n4.onPromptRequest && n4.onPromptRequest.call(null, s13), l3("");
  }, T = (t10) => {
    l3(t10);
  }, C = (t10) => {
    l3(t10.target.value);
  }, V = {
    title: "Generate",
    children: "Generate",
    svgIcon: sparklesIcon
  }, w3 = {
    placeholder: "Ask or generate content with AI ...",
    rows: 2
  }, u4 = Object.keys(c3).length > 0 ? c3 : V, R = Object.keys(p6).length > 0 ? p6 : w3, f4 = (t10) => {
    const { isFinal: r4, alternatives: g2 } = t10;
    if (r4 && g2.length > 0) {
      const b = g2[0].transcript, k3 = (() => {
        const a9 = s13, v2 = a9 && !a9.endsWith(" ") && !a9.endsWith(`
`);
        return a9 + (v2 ? " " : "") + b;
      })();
      l3(k3);
    }
  };
  let m5;
  return o7 && (typeof o7 == "object" ? m5 = {
    ...o7,
    onResult: o7.onResult || f4
  } : m5 = {
    onResult: f4
  }), import_react7.default.createElement(r2, { name: c2.name }, import_react7.default.createElement(I, { streaming: n4.streaming, onCancel: n4.onCancel }, import_react7.default.createElement(
    E2,
    {
      value: s13,
      className: "!k-flex-col",
      suffix: o7 ? import_react7.default.createElement(import_react7.default.Fragment, null, import_react7.default.createElement(m, { orientation: "horizontal" }), import_react7.default.createElement(x, { orientation: "horizontal" }, import_react7.default.createElement(ie, { fillMode: "flat", ...m5 }))) : void 0,
      onChange: C,
      ...R
    }
  ), i8 && i8.length > 0 && import_react7.default.createElement(s12, { title: "Prompt Suggestions" }, import_react7.default.createElement(
    p5,
    {
      suggestionsView: n4.suggestionsView,
      suggestions: i8.map((t10, r4) => ({
        id: r4,
        text: t10,
        description: t10
      })),
      onSuggestionClick: (t10, r4) => {
        T(r4.text);
      }
    }
  ))), import_react7.default.createElement(a8, null, import_react7.default.createElement(
    A2,
    {
      themeColor: "primary",
      fillMode: "solid",
      rounded: "full",
      size: "medium",
      onClick: I2,
      disabled: !s13.trim(),
      ...u4
    },
    u4.children
  )));
};

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/views/AIPromptOutputView.mjs
var import_react8 = __toESM(require_react(), 1);
var X = (h5) => {
  const [b, c3] = import_react8.default.useState(""), l3 = import_react8.default.useRef(null), [n4] = n3(), { outputs: o7, showOutputRating: I2, outputCard: T } = h5, { header: d4, body: p6, actions: k3 } = T || {}, w3 = i(), v2 = (t10) => {
    n4.onPromptRequest && n4.onPromptRequest.call(null, t10.prompt, { ...t10, isRetry: true }), C();
  }, P3 = (t10) => {
    t10 != null && t10.responseContent && navigator.clipboard.writeText(t10.responseContent), c3(t10.id), setTimeout(() => {
      c3("");
    }, 1e3);
  }, u4 = (t10, m5) => {
    n4.onPromptRequest && n4.onPromptRequest.call(null, t10.prompt, { ...t10, ratingType: m5, isRetry: false }), C();
  }, C = () => {
    l3 && l3.current && l3.current.scrollTo({ top: 0, behavior: "smooth" });
  }, x3 = import_react8.default.createElement(d2, null, import_react8.default.createElement(t, null, import_react8.default.createElement(a, null, import_react8.default.createElement("span", { className: "k-skeleton k-skeleton-text k-skeleton-pulse", style: { width: "200px" } })), import_react8.default.createElement(a2, null, import_react8.default.createElement("span", { className: "k-skeleton k-skeleton-text k-skeleton-pulse", style: { width: "100%" } }))), import_react8.default.createElement(t2, null, import_react8.default.createElement("span", { className: "k-skeleton k-skeleton-rect k-skeleton-pulse", style: { height: "80px" } })), import_react8.default.createElement(s3, null, import_react8.default.createElement("span", { className: "k-skeleton k-skeleton-text k-skeleton-pulse", style: { width: "100%" } }))), a9 = o7 == null ? void 0 : o7.map((t10, m5) => import_react8.default.createElement(d2, { key: `${t10.id}_${m5}` }, import_react8.default.createElement(t, null, d4 ? d4(t10) : import_react8.default.createElement(import_react8.default.Fragment, null, t10.title && import_react8.default.createElement(a, null, t10.title), t10.subTitle && import_react8.default.createElement(a2, null, t10.subTitle))), import_react8.default.createElement(t2, null, p6 ? p6(t10) : t10.responseContent), import_react8.default.createElement(s3, null, k3 ? k3(t10) : import_react8.default.createElement(import_react8.default.Fragment, null, import_react8.default.createElement(
    k,
    {
      size: "medium",
      themeColor: "primary",
      fillMode: "flat",
      rounded: "medium",
      title: "Copy",
      svgIcon: b === t10.id ? checkIcon : copyIcon,
      onClick: () => P3(t10)
    },
    "Copy"
  ), import_react8.default.createElement(
    k,
    {
      size: "medium",
      themeColor: "base",
      fillMode: "flat",
      rounded: "medium",
      title: "Retry",
      svgIcon: arrowRotateCwIcon,
      onClick: () => v2(t10)
    },
    "Retry"
  ), I2 && import_react8.default.createElement(import_react8.default.Fragment, null, import_react8.default.createElement("span", { className: "k-spacer" }), import_react8.default.createElement(
    k,
    {
      size: "medium",
      themeColor: t10.ratingType === "positive" ? "primary" : "base",
      fillMode: "flat",
      rounded: "medium",
      title: "Rate up",
      svgIcon: thumbUpOutlineIcon,
      onClick: () => u4(t10, "positive")
    }
  ), import_react8.default.createElement(
    k,
    {
      size: "medium",
      themeColor: t10.ratingType === "negative" ? "primary" : "base",
      fillMode: "flat",
      rounded: "medium",
      title: "Rate down",
      svgIcon: thumbDownOutlineIcon,
      onClick: () => u4(t10, "negative")
    }
  )))))), N2 = import_react8.default.createElement(d2, null, import_react8.default.createElement(t2, null, w3.toLanguageString(o3, p4[o3])));
  return import_react8.default.createElement(r2, { name: m4.name }, import_react8.default.createElement(I, { ref: l3, streaming: n4.streaming, onCancel: n4.onCancel }, import_react8.default.createElement("div", { className: "k-card-list" }, n4.loading && x3, a9, (!a9 || a9.length === 0) && !n4.loading && N2)));
};

// node_modules/@progress/kendo-react-conversational-ui/ai-prompt/views/AIPromptCommandsView.mjs
var import_react9 = __toESM(require_react(), 1);
var i7 = (t10) => t10 == null ? void 0 : t10.map((e15) => import_react9.default.createElement(f, { title: e15.text, key: e15.id, svgIcon: e15.svgIcon, data: e15 }, e15.children && i7(e15.children || [])));
var w2 = (t10) => {
  const { commands: e15 } = t10, [n4] = n3(), c3 = (p6) => {
    var l3, a9, m5;
    const o7 = (a9 = (l3 = p6.target) == null ? void 0 : l3.props) == null ? void 0 : a9.data;
    (m5 = o7.children) != null && m5.length || n4.onCommandExecute && n4.onCommandExecute.call(null, o7);
  };
  return import_react9.default.createElement(r2, { name: u3.name }, import_react9.default.createElement(I, { streaming: n4.streaming, onCancel: n4.onCancel }, import_react9.default.createElement("div", { className: "k-prompt-view" }, import_react9.default.createElement(y, { onSelect: c3, selected: "" }, i7(e15 != null ? e15 : [])))));
};

// node_modules/@progress/kendo-react-conversational-ui/inline-ai-prompt/InlineAIPrompt.mjs
var import_react12 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-conversational-ui/inline-ai-prompt/InlineAIPromptPopup.mjs
var import_react10 = __toESM(require_react(), 1);
var P2 = ({
  show: e15 = false,
  anchor: t10,
  onOpen: r4,
  onClose: o7,
  animate: p6 = true,
  appendTo: m5,
  popupOptions: n4 = {},
  children: u4,
  style: a9
}) => import_react10.default.createElement(
  te,
  {
    show: e15,
    anchor: t10,
    style: a9,
    animate: p6,
    appendTo: m5,
    onOpen: r4,
    onClose: o7,
    ...n4
  },
  u4
);

// node_modules/@progress/kendo-react-conversational-ui/inline-ai-prompt/InlineAIPromptInput.mjs
var import_react11 = __toESM(require_react(), 1);
var U = ({
  placeholder: g2 = "Ask or generate content with AI...",
  promptValue: h5,
  onMenuClick: B,
  promptInput: P3 = A,
  generateButton: v2,
  enableSpeechToText: a9 = false,
  streaming: e15 = false,
  commands: l3,
  onPromptRequest: c3,
  onPromptCancel: C
}) => {
  const [o7, i8] = import_react11.default.useState(h5 || ""), [E2, u4] = s(
    v2
  ), [S, m5] = s(P3), x3 = {
    svgIcon: e15 ? stopSmIcon : paperPlaneIcon,
    active: (!!e15).toString(),
    title: "Send Button",
    "aria-label": "Send Button",
    disabled: !o7.trim() && !e15,
    "aria-disabled": !o7.trim() && !e15
  }, A2 = {
    placeholder: g2,
    className: "!k-flex-row",
    autoSize: true,
    rows: 1
  }, f4 = l3 && l3.length > 0, w3 = Object.keys(u4).length > 0 ? u4 : x3, y2 = Object.keys(m5).length > 0 ? m5 : A2, p6 = (n4) => {
    const { isFinal: s13, alternatives: k3 } = n4;
    if (s13 && k3.length > 0) {
      const b = k3[0].transcript, V = (() => {
        const r4 = o7, j = r4 && !r4.endsWith(" ") && !r4.endsWith(`
`);
        return r4 + (j ? " " : "") + b;
      })();
      i8(V);
    }
  }, N2 = (n4) => {
    const s13 = n4.target.value;
    i8(s13);
  }, d4 = () => {
    o7.trim() && c3 && c3(o7.trim());
  };
  return import_react11.default.createElement(
    S,
    {
      value: o7,
      onChange: N2,
      onKeyDown: (n4) => {
        n4.key === "Enter" && !n4.shiftKey && (n4.preventDefault(), d4());
      },
      prefix: f4 || a9 ? import_react11.default.createElement(import_react11.default.Fragment, null, import_react11.default.createElement(f2, { className: "!k-align-items-start" }, f4 && import_react11.default.createElement(
        k,
        {
          "aria-label": "Commands Button",
          title: "Commands Button",
          fillMode: "flat",
          svgIcon: menuIcon,
          onClick: B
        }
      ), a9 && import_react11.default.createElement(
        ie,
        {
          fillMode: "flat",
          ...typeof a9 == "object" ? {
            ...a9,
            onResult: a9.onResult || p6
          } : {
            onResult: p6
          }
        }
      )), import_react11.default.createElement(m, null)) : void 0,
      suffix: import_react11.default.createElement(x, { className: "!k-align-items-start" }, import_react11.default.createElement(
        E2,
        {
          className: n("k-prompt-send", {
            "k-generating": e15,
            "k-active": e15
          }),
          fillMode: "flat",
          onClick: e15 ? C : d4,
          ...w3
        }
      )),
      ...y2
    }
  );
};

// node_modules/@progress/kendo-react-conversational-ui/inline-ai-prompt/InlineAIPrompt.mjs
var Ae = (v2) => {
  const M = !d(e9, { component: "InlineAIPrompt" }), b = w(e9), {
    outputs: i8 = [],
    outputCard: w3,
    promptInput: O2 = A,
    generateButton: P3 = k,
    promptPlaceholder: S = "Ask or generate content with AI...",
    promptValue: T,
    onPromptRequest: A2,
    onCopy: d4,
    onDiscard: p6,
    outputActions: B,
    onOutputAction: f4,
    enableSpeechToText: D = false,
    streaming: r4,
    onPromptCancel: s13,
    show: N2 = false,
    anchor: R,
    width: l3,
    height: c3,
    onOpen: F,
    onClose: m5,
    animate: _ = true,
    appendTo: K,
    commands: u4,
    onCommandExecute: g2,
    style: W,
    className: $,
    popupOptions: q = {},
    ...z
  } = v2, [V, k3] = import_react12.default.useState(""), [j, C] = import_react12.default.useState(false), [G2, H] = import_react12.default.useState({
    left: 0,
    top: 0
  }), h5 = import_react12.default.useRef(null), { body: y2, actions: I2 } = w3 || {}, J = B || [
    {
      id: "copy",
      text: "Copy",
      svgIcon: copyIcon,
      themeColor: "primary",
      title: "Copy"
    },
    {
      id: "discard",
      text: "Discard",
      svgIcon: cancelOutlineIcon,
      themeColor: "base",
      title: "Discard"
    }
  ], Q = (e15) => {
    e15.responseContent && (navigator.clipboard.writeText(e15.responseContent), k3(e15.id), setTimeout(() => k3(""), 1e3)), d4 == null || d4(e15);
  }, U2 = (e15) => {
    p6 == null || p6(e15);
  }, X2 = (e15, n4) => {
    switch (e15.id) {
      case "copy":
        Q(n4);
        break;
      case "discard":
        U2(n4);
        break;
      default:
        f4 == null || f4(e15, n4);
        break;
    }
  }, Y = (e15) => {
    if (!h5.current)
      return;
    const n4 = h5.current.getBoundingClientRect();
    H({
      left: n4.left,
      top: n4.bottom
    }), C(true);
  }, Z = () => {
    C(false);
  }, L = (e15) => {
    C(false), g2 && g2(e15);
  }, ee2 = (e15) => e15 == null ? void 0 : e15.map((n4) => ({
    text: n4.text,
    svgIcon: n4.svgIcon,
    data: n4,
    items: n4.children ? n4.children.map((a9) => ({
      text: a9.text,
      data: a9
    })) : void 0
  })), te2 = import_react12.default.useCallback(
    (e15) => {
      e15.key === "Escape" && (r4 && s13 ? s13() : !r4 && m5 && m5({ target: null }));
    },
    [r4, s13, m5]
  ), ne = {
    ...W,
    ...l3 && { width: l3 },
    ...c3 && { height: c3 }
  }, ae = {
    ...l3 && { width: l3 },
    ...c3 && { height: c3 }
  }, oe2 = import_react12.default.createElement(import_react12.default.Fragment, null, import_react12.default.createElement(
    "div",
    {
      className: n("k-prompt", $),
      style: ne,
      onKeyDown: te2,
      ...z
    },
    import_react12.default.createElement(I, { ref: h5 }, i8 && i8.length > 0 && import_react12.default.createElement("div", { className: "k-card-list" }, i8.map((e15, n4) => import_react12.default.createElement(d2, { key: `${e15.id}_${n4}` }, import_react12.default.createElement(t2, null, y2 ? y2(e15) : e15.responseContent), import_react12.default.createElement(s3, null, I2 ? I2(e15) : import_react12.default.createElement(import_react12.default.Fragment, null, J.map(
      (a9) => {
        var o7;
        return a9.spacer ? import_react12.default.createElement("span", { key: a9.id, className: "k-spacer" }) : import_react12.default.createElement(
          k,
          {
            key: a9.id,
            size: "medium",
            themeColor: a9.themeColor || "primary",
            fillMode: "flat",
            rounded: "medium",
            title: (o7 = a9.title) != null ? o7 : a9.text,
            svgIcon: a9.id === "copy" && V === e15.id ? checkIcon : a9.svgIcon,
            onClick: () => X2(a9, e15)
          },
          a9.text
        );
      }
    )))))), import_react12.default.createElement(
      U,
      {
        promptValue: T,
        placeholder: S,
        onPromptRequest: A2,
        onMenuClick: Y,
        onPromptCancel: s13,
        promptInput: O2,
        generateButton: P3,
        enableSpeechToText: D,
        streaming: r4,
        commands: u4
      }
    ))
  ), M && import_react12.default.createElement(P, { message: b }));
  return import_react12.default.createElement(import_react12.default.Fragment, null, import_react12.default.createElement(
    P2,
    {
      show: N2,
      anchor: R,
      onOpen: F,
      onClose: m5,
      animate: _,
      appendTo: K,
      popupOptions: q,
      style: ae
    },
    oe2
  ), import_react12.default.createElement(
    h,
    {
      show: j,
      offset: G2,
      onClose: Z,
      items: ee2(u4),
      onSelect: (e15) => {
        var a9, o7;
        const n4 = (a9 = e15.item) == null ? void 0 : a9.data;
        n4 && !((o7 = n4.children) != null && o7.length) && L(n4);
      }
    }
  ));
};

export {
  s5 as s,
  h4 as h,
  p5 as p,
  o5 as o,
  u2 as u,
  m4 as m,
  u3 as u2,
  c2 as c,
  O,
  a8 as a,
  I,
  r2 as r,
  oe,
  X,
  w2 as w,
  Ae
};
/*! Bundled license information:

@progress/kendo-react-conversational-ui/components/base/FocusableUponSelection.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/ChatMessage.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/utils.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ViewItem.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/Action.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/base/SelectableItemsContainer.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/ActionGroup.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/Attachment.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/AttachmentGroup.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/DateMarker.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/messages/index.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/MessageGroup.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/ChatToolbar.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/NewMessage.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/package-metadata.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/Chat.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/chat/components/SuggestionsGroup.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/components/templates/HeroCard.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/AIPromptHeader.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/views/constants.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/AIPromptContext.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/AIPrompt.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/AIPromptFooter.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/AIPromptContent.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/views/AIPromptViewRender.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/AIPromptExpander.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/views/AIPromptView.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/views/AIPromptOutputView.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/ai-prompt/views/AIPromptCommandsView.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/inline-ai-prompt/InlineAIPromptPopup.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/inline-ai-prompt/InlineAIPromptInput.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/inline-ai-prompt/InlineAIPrompt.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-conversational-ui/index.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)
*/
//# sourceMappingURL=chunk-5DNPORBG.js.map
