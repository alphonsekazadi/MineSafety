/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
const u = (t) => typeof t == "object", c = (t, f) => {
  if (Object.keys(t).length !== Object.keys(f).length)
    return !0;
  for (const e in t)
    if (e !== "value" && t.hasOwnProperty(e)) {
      const n = t[e], s = f[e];
      if (u(n) && u(s) ? c(n, s) : n !== s)
        return !0;
    }
  return !1;
}, o = (t, f) => {
  if (!t || !f || (t = [].concat(t), f = [].concat(f), t.length !== f.length))
    return !0;
  for (let e = 0; e < t.length; e++)
    if (c(t[e], f[e]))
      return !0;
  return !1;
};
export {
  o as isOptionsChanged
};
