'use strict';

var JSZip = require('@progress/jszip-esm');

var current$1 = {
    compile: function(template) {
        return template;
    }
};

var TemplateService = function TemplateService () {};

TemplateService.register = function register (userImplementation) {
    current$1 = userImplementation;
};

TemplateService.compile = function compile (template) {
    return current$1.compile(template);
};

var FIELD_REGEX = /\[(?:(\d+)|['"](.*?)['"])\]|((?:(?!\[.*?\]|\.).)+)/g;
var getterCache = {};
var UNDEFINED = 'undefined';

getterCache[UNDEFINED] = function(obj) {
    return obj;
};

function getter(field) {
    if (getterCache[field]) {
        return getterCache[field];
    }

    var fields = [];
    field.replace(FIELD_REGEX, function(match, index, indexAccessor, field) {
        fields.push(typeof index !== UNDEFINED ? index : (indexAccessor || field));
    });

    getterCache[field] = function(obj) {
        var result = obj;
        for (var idx = 0; idx < fields.length && result; idx++) {
            result = result[fields[idx]];
        }

        return result;
    };

    return getterCache[field];
}

function map(array, func) {
    return array.reduce(function (result, el, i) {
        var val = func(el, i);
        if (val != null) {
            result.push(val);
        }
        return result;
    }, []);
}

function defaultGroupHeaderTemplate(data) {
    return ((data.title) + ": " + (data.value));
}

function createArray(length, callback) {
    var result = [];

    for (var idx = 0; idx < length; idx++) {
        result.push(callback(idx));
    }

    return result;
}

function defaultItemId(item) {
    return item.id;
}

var ExcelExporter = function ExcelExporter(options) {
    options.columns = this._trimColumns(options.columns || []);

    this.allColumns = map(this._leafColumns(options.columns || []), this._prepareColumn);

    this.columns = this._visibleColumns(this.allColumns);

    this.options = options;
    this.data = options.data || [];
    this.aggregates = options.aggregates || {};
    this.groups = [].concat(options.groups || []);
    this.hasGroups = this.groups.length > 0;
    this.hierarchy = options.hierarchy;
    this.hasGroupHeaderColumn = this.columns.some(function (column) { return column.groupHeaderColumnTemplate; });
    this.collapsible = this.options.collapsible;
};

ExcelExporter.prototype.workbook = function workbook () {
    var workbook = {
        sheets: [ {
            columns: this._columns(),
            rows: this.hierarchy ? this._hierarchyRows() : this._rows(),
            freezePane: this._freezePane(),
            filter: this._filter()
        } ]
    };

    return workbook;
};

ExcelExporter.prototype._trimColumns = function _trimColumns (columns) {
        var this$1$1 = this;

    return columns.filter(function (column) {
        var result = Boolean(column.field);

        if (!result && column.columns) {
            result = this$1$1._trimColumns(column.columns).length > 0;
        }

        return result;
    });
};

ExcelExporter.prototype._leafColumns = function _leafColumns (columns) {
    var result = [];

    for (var idx = 0; idx < columns.length; idx++) {
        if (!columns[idx].columns) {
            result.push(columns[idx]);
        } else {
            result = result.concat(this._leafColumns(columns[idx].columns));
        }
    }

    return result;
};

ExcelExporter.prototype._prepareColumn = function _prepareColumn (column) {
    if (!column.field) {
        return null;
    }

    var value = function(dataItem) {
        return getter(column.field)(dataItem);
    };

    var values = null;

    if (column.values) {
        values = {};

        column.values.forEach(function(item) {
            values[item.value] = item.text;
        });

        value = function(dataItem) {
            return values[getter(column.field)(dataItem)];
        };
    }

    return Object.assign({}, column, {
        value: value,
        values: values,
        groupHeaderTemplate: column.groupHeaderTemplate ? TemplateService.compile(column.groupHeaderTemplate) : defaultGroupHeaderTemplate,
        groupHeaderColumnTemplate: column.groupHeaderColumnTemplate ? TemplateService.compile(column.groupHeaderColumnTemplate) : null,
        groupFooterTemplate: column.groupFooterTemplate ? TemplateService.compile(column.groupFooterTemplate) : null,
        footerTemplate: column.footerTemplate ? TemplateService.compile(column.footerTemplate) : null
    });
};

ExcelExporter.prototype._filter = function _filter () {
    if (!this.options.filterable) {
        return null;
    }

    var depth = this._depth();

    return {
        from: depth,
        to: depth + this.columns.length - 1
    };
};

ExcelExporter.prototype._createPaddingCells = function _createPaddingCells (length) {
        var this$1$1 = this;

    return createArray(length, function () { return Object.assign({
        background: "#dfdfdf",
        color: "#333"
    }, this$1$1.options.paddingCellOptions); });
};

ExcelExporter.prototype._dataRow = function _dataRow (dataItem, level, depth) {
    var cells = this._createPaddingCells(level);

    // grouped
    if (this.hasGroups && depth && dataItem.items) {
        cells = cells.concat(this._groupHeaderCells(dataItem, level, depth));
        var rows = this._dataRows(dataItem.items, level + 1);

        rows.unshift({
            type: "group-header",
            cells: cells,
            level: this.collapsible ? level : null
        });

        return rows.concat(this._footer(dataItem, level));
    }

    var dataCells = [];

    for (var cellIdx = 0; cellIdx < this.columns.length; cellIdx++) {
        dataCells[cellIdx] = this._cell(dataItem, this.columns[cellIdx]);
    }

    if (this.hierarchy) {
        dataCells[0].colSpan = depth - level + 1;
    }

    return [ {
        type: "data",
        cells: cells.concat(dataCells),
        level: this.collapsible ? level : null
    } ];
};

ExcelExporter.prototype._groupHeaderCells = function _groupHeaderCells (dataItem, level, depth) {
    var cells = [];

    var column = this.allColumns.filter(function(column) {
        return column.field === dataItem.field;
    })[0] || {};

    var title = column && column.title ? column.title : dataItem.field;
    var template = column ? column.groupHeaderTemplate || column.groupHeaderColumnTemplate : null;
    var group = Object.assign({
        title: title,
        field: dataItem.field,
        value: column && column.values ? column.values[dataItem.value] : dataItem.value,
        aggregates: dataItem.aggregates,
        items: dataItem.items
    }, dataItem.aggregates[dataItem.field]);

    var value = template ? template(group) : (title + ": " + (dataItem.value));

    cells.push(Object.assign({
        value: value,
        background: "#dfdfdf",
        color: "#333",
        colSpan: (this.hasGroupHeaderColumn ? 1 : this.columns.length) + depth - level
    }, column.groupHeaderCellOptions));

    if (this.hasGroupHeaderColumn) {
        this.columns.forEach(function(column, index) {
            if (index > 0) {
                cells.push(Object.assign({
                    background: "#dfdfdf",
                    color: "#333",
                    value: column.groupHeaderColumnTemplate ?
                        column.groupHeaderColumnTemplate(Object.assign({ group: group }, group, dataItem.aggregates[column.field])) :
                        undefined
                }, column.groupHeaderCellOptions));
            }
        });
    }

    return cells;
};

ExcelExporter.prototype._dataRows = function _dataRows (dataItems, level) {
    var depth = this._depth();
    var rows = [];

    for (var idx = 0; idx < dataItems.length; idx++) {
        rows.push.apply(rows, this._dataRow(dataItems[idx], level, depth));
    }

    return rows;
};

ExcelExporter.prototype._hierarchyRows = function _hierarchyRows () {
    var depth = this._depth();
    var data = this.data;
    var itemLevel = this.hierarchy.itemLevel;
    var itemId = this.hierarchy.itemId || defaultItemId;
    var hasFooter = this._hasFooterTemplate();
    var rows = [];
    var parents = [];
    var previousLevel = 0;
    var previousItemId;

    if (!hasFooter) {
        this.collapsible = false;
    }

    for (var idx = 0; idx < data.length; idx++) {
        var item = data[idx];
        var level = itemLevel(item, idx);

        if (hasFooter) {
            if (level > previousLevel) {
                parents.push({ id: previousItemId, level: previousLevel });
            } else if (level < previousLevel) {
                rows.push.apply(rows, this._hierarchyFooterRows(parents, level, depth));
            }

            previousLevel = level;
            previousItemId = itemId(item, idx);
        }

        rows.push.apply(rows, this._dataRow(item, level + 1, depth));
    }

    if (hasFooter) {
        rows.push.apply(rows, this._hierarchyFooterRows(parents, 0, depth));

        var rootAggregate = data.length ? this.aggregates[data[0].parentId] : {};
        rows.push(this._hierarchyFooter(rootAggregate, 0, depth));
    }

    this._prependHeaderRows(rows);

    return rows;
};

ExcelExporter.prototype._hierarchyFooterRows = function _hierarchyFooterRows (parents, currentLevel, depth) {
    var rows = [];
    while (parents.length && parents[parents.length - 1].level >= currentLevel) {
        var parent = parents.pop();
        rows.push(this._hierarchyFooter(this.aggregates[parent.id], parent.level + 1, depth));
    }

    return rows;
};

ExcelExporter.prototype._hasFooterTemplate = function _hasFooterTemplate () {
    var columns = this.columns;
    for (var idx = 0; idx < columns.length; idx++) {
        if (columns[idx].footerTemplate) {
            return true;
        }
    }
};

ExcelExporter.prototype._hierarchyFooter = function _hierarchyFooter (aggregates, level, depth) {
    var cells = this.columns.map(function(column, index) {
        var colSpan = index ? 1 : depth - level + 1;
        if (column.footerTemplate) {
            var fieldAggregates = (aggregates || {})[column.field];
            return Object.assign({
                background: "#dfdfdf",
                color: "#333",
                colSpan: colSpan,
                value: column.footerTemplate(Object.assign({ aggregates: aggregates }, fieldAggregates))
            }, column.footerCellOptions);
        }

        return Object.assign({
            background: "#dfdfdf",
            color: "#333",
            colSpan: colSpan
        }, column.footerCellOptions);
    });

    return {
        type: "footer",
        cells: this._createPaddingCells(level).concat(cells),
        level: this.collapsible ? level : null
    };
};

ExcelExporter.prototype._footer = function _footer (dataItem, level) {
    var rows = [];
    var footer = this.columns.some(function (column) { return column.groupFooterTemplate; });

    var templateData, group;
    if (footer) {
        group = {
            group: { items: dataItem.items,
                field: dataItem.field,
                value: dataItem.value }
        };
        templateData = {};
        Object.keys(dataItem.aggregates).forEach(function (key) {
            templateData[key] = Object.assign({}, dataItem.aggregates[key], group);
        });
    }

    var cells = this.columns.map(function (column) {
        if (column.groupFooterTemplate) {
            var data = Object.assign({}, templateData, dataItem.aggregates[column.field], group);
            return Object.assign({
                background: "#dfdfdf",
                color: "#333",
                value: column.groupFooterTemplate(data)
            }, column.groupFooterCellOptions);
        }

        return Object.assign({
            background: "#dfdfdf",
            color: "#333"
        }, column.groupFooterCellOptions);
    });

    if (footer) {
        rows.push({
            type: "group-footer",
            cells: this._createPaddingCells(this.groups.length).concat(cells),
            level: this.collapsible ? level : null
        });
    }

    return rows;
};

ExcelExporter.prototype._isColumnVisible = function _isColumnVisible (column) {
    return this._visibleColumns([ column ]).length > 0 && (column.field || column.columns);
};

ExcelExporter.prototype._visibleColumns = function _visibleColumns (columns) {
        var this$1$1 = this;

    return columns.filter(function (column) {
        var exportable = column.exportable;
        if (typeof exportable === 'object') {
            exportable = column.exportable.excel;
        }

        var visibleInExport = !column.hidden && exportable !== false;
        var visibleInExportOnly = column.hidden && exportable === true;
        var visible = visibleInExport || visibleInExportOnly;
        if (visible && column.columns) {
            visible = this$1$1._visibleColumns(column.columns).length > 0;
        }
        return visible;
    });
};

ExcelExporter.prototype._headerRow = function _headerRow (row, groups) {
        var this$1$1 = this;

    var headers = row.cells.map(function(cell) {
        return Object.assign(cell, {
            colSpan: cell.colSpan > 1 ? cell.colSpan : 1,
            rowSpan: row.rowSpan > 1 && !cell.colSpan ? row.rowSpan : 1
        });
    });

    if (this.hierarchy && headers[0].firstCell) {
        headers[0].colSpan += this._depth();
    }

    return {
        type: "header",
        cells: createArray(groups.length, function () { return Object.assign({
            background: "#7a7a7a",
            color: "#fff"
        }, this$1$1.options.headerPaddingCellOptions); }).concat(headers)
    };
};

ExcelExporter.prototype._prependHeaderRows = function _prependHeaderRows (rows) {
    var groups = this.groups;

    var headerRows = [ { rowSpan: 1, cells: [], index: 0 } ];

    this._prepareHeaderRows(headerRows, this.options.columns);

    for (var idx = headerRows.length - 1; idx >= 0; idx--) {
        rows.unshift(this._headerRow(headerRows[idx], groups));
    }
};

ExcelExporter.prototype._prepareHeaderRows = function _prepareHeaderRows (rows, columns, parentCell, parentRow) {
    var row = parentRow || rows[rows.length - 1];
    var childRow = rows[row.index + 1];
    var totalColSpan = 0;

    for (var idx = 0; idx < columns.length; idx++) {
        var column = columns[idx];
        if (this._isColumnVisible(column)) {

            var cell = Object.assign({
                background: "#7a7a7a",
                color: "#fff",
                value: column.title || column.field,
                colSpan: 0,
                firstCell: idx === 0 && (!parentCell || parentCell.firstCell)
            }, column.headerCellOptions);
            row.cells.push(cell);

            if (column.columns && column.columns.length) {
                if (!childRow) {
                    childRow = { rowSpan: 0, cells: [], index: rows.length };
                    rows.push(childRow);
                }
                cell.colSpan = this._trimColumns(this._visibleColumns(column.columns)).length;
                this._prepareHeaderRows(rows, column.columns, cell, childRow);
                totalColSpan += cell.colSpan - 1;
                row.rowSpan = rows.length - row.index;
            }
        }
    }

    if (parentCell) {
        parentCell.colSpan += totalColSpan;
    }
};

ExcelExporter.prototype._rows = function _rows () {
        var this$1$1 = this;

    var rows = this._dataRows(this.data, 0);

    if (this.columns.length) {
        this._prependHeaderRows(rows);
        var footer = false;

        var cells = this.columns.map(function (column) {
            if (column.footerTemplate) {
                footer = true;

                return Object.assign({
                    background: "#dfdfdf",
                    color: "#333",
                    value: column.footerTemplate(Object.assign({}, this$1$1.aggregates, this$1$1.aggregates[column.field]))
                }, column.footerCellOptions);
            }

            return Object.assign({
                background: "#dfdfdf",
                color: "#333"
            }, column.footerCellOptions);
        });

        if (footer) {
            rows.push({
                type: "footer",
                cells: this._createPaddingCells(this.groups.length).concat(cells)
            });
        }
    }

    return rows;
};

ExcelExporter.prototype._headerDepth = function _headerDepth (columns) {
    var result = 1;
    var max = 0;

    for (var idx = 0; idx < columns.length; idx++) {
        if (columns[idx].columns) {
            var temp = this._headerDepth(columns[idx].columns);
            if (temp > max) {
                max = temp;
            }
        }
    }
    return result + max;
};

ExcelExporter.prototype._freezePane = function _freezePane () {
    var columns = this._visibleColumns(this.options.columns || []);

    var colSplit = this._visibleColumns(this._trimColumns(this._leafColumns(columns.filter(function(column) {
        return column.locked;
    })))).length;

    return {
        rowSplit: this._headerDepth(columns),
        colSplit: colSplit ? colSplit + this.groups.length : 0
    };
};

ExcelExporter.prototype._cell = function _cell (dataItem, column) {
    return Object.assign({
        value: column.value(dataItem)
    }, column.cellOptions);
};

ExcelExporter.prototype._depth = function _depth () {
    var depth = 0;

    if (this.hierarchy) {
        depth = this.hierarchy.depth;
    } else {
        depth = this.groups.length;
    }

    return depth;
};

ExcelExporter.prototype._columns = function _columns () {
    var depth = this._depth();
    var columns = createArray(depth, function () { return ({ width: 20 }); });

    return columns.concat(this.columns.map(function(column) {
        return {
            width: parseInt(column.width, 10),
            autoWidth: column.width ? false : true
        };
    }));
};

var current = {
    toString: function (value) { return value; }
};

var IntlService = function IntlService () {};

IntlService.register = function register (userImplementation) {
    current = userImplementation;
};

IntlService.toString = function toString (value, format) {
    return current.toString(value, format);
};

function createZip() {
    return new JSZip();
}

// date packing utilities from Kendo Spreadsheet

// Julian days algorithms from http://www.hermetic.ch/cal_stud/jdn.htm#comp
function dateToJulianDays(y, m, d) {
    return ((1461 * (y + 4800 + ((m - 13) / 12 | 0))) / 4 | 0) +
        ((367 * (m - 1 - 12 * ((m - 13) / 12 | 0))) / 12 | 0) -
        ((3 * (((y + 4900 + ((m - 13) / 12 | 0)) / 100 | 0))) / 4 | 0) +
        d - 32075;
}

// This uses the Google Spreadsheet approach: treat 1899-12-31 as day 1, allowing to avoid
// implementing the "Leap Year Bug" yet still be Excel compatible for dates starting 1900-03-01.
var BASE_DATE = dateToJulianDays(1900, 0, -1);

function packDate(year, month, date) {
    return dateToJulianDays(year, month, date) - BASE_DATE;
}

function packTime(hh, mm, ss, ms) {
    return (hh + (mm + (ss + ms / 1000) / 60) / 60) / 24;
}

function dateToSerial(date) {
    var time = packTime(date.getHours(),
        date.getMinutes(),
        date.getSeconds(),
        date.getMilliseconds());
    var serial = packDate(date.getFullYear(),
        date.getMonth(),
        date.getDate());
    return serial < 0 ? serial - 1 + time : serial + time;
}

var MIME_TYPE = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
var DATA_URL_PREFIX = "data:" + MIME_TYPE + ";base64,";
var DATA_URL_OPTIONS = { compression: "DEFLATE", type: "base64" };
var BLOB_OPTIONS = { compression: "DEFLATE", type: "blob" };
var ARRAYBUFFER_OPTIONS = { compression: "DEFLATE", type: "arraybuffer" };

/* eslint-disable indent */

function toDataURI(content) {
    return DATA_URL_PREFIX + content;
}

function indexOf(thing, array) {
    return array.indexOf(thing);
}

var parseJSON = JSON.parse.bind(JSON);

function ESC(val) {
    return String(val)
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/\"/g, "&quot;")
        .replace(/\'/g, "&#39;");
}

function repeat(count, func) {
    var str = "";
    for (var i = 0; i < count; ++i) {
        str += func(i);
    }
    return str;
}

function foreach(arr, func) {
    var str = "";
    if (arr != null) {
        if (Array.isArray(arr)) {
            for (var i = 0; i < arr.length; ++i) {
                str += func(arr[i], i);
            }
        } else if (typeof arr == "object") {
            Object.keys(arr).forEach(function (key, i) {
                str += func(arr[key], key, i);
            });
        }
    }
    return str;
}

var XMLHEAD = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r';

var RELS = XMLHEAD + "\n            <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n               <Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\"/>\n               <Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\"/>\n               <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\"/>\n            </Relationships>";

var CORE = function (ref) {
  var creator = ref.creator;
  var lastModifiedBy = ref.lastModifiedBy;
  var created = ref.created;
  var modified = ref.modified;

  return (XMLHEAD + "\n <cp:coreProperties xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\"\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\"\n   xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n   <dc:creator>" + (ESC(creator)) + "</dc:creator>\n   <cp:lastModifiedBy>" + (ESC(lastModifiedBy)) + "</cp:lastModifiedBy>\n   <dcterms:created xsi:type=\"dcterms:W3CDTF\">" + (ESC(created)) + "</dcterms:created>\n   <dcterms:modified xsi:type=\"dcterms:W3CDTF\">" + (ESC(modified)) + "</dcterms:modified>\n</cp:coreProperties>");
};

var APP = function (ref) {
  var sheets = ref.sheets;

  return (XMLHEAD + "\n<Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\" xmlns:vt=\"http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes\">\n  <Application>Microsoft Excel</Application>\n  <DocSecurity>0</DocSecurity>\n  <ScaleCrop>false</ScaleCrop>\n  <HeadingPairs>\n    <vt:vector size=\"2\" baseType=\"variant\">\n      <vt:variant>\n        <vt:lpstr>Worksheets</vt:lpstr>\n      </vt:variant>\n      <vt:variant>\n        <vt:i4>" + (sheets.length) + "</vt:i4>\n      </vt:variant>\n    </vt:vector>\n  </HeadingPairs>\n  <TitlesOfParts>\n    <vt:vector size=\"" + (sheets.length) + "\" baseType=\"lpstr\">" + (foreach(sheets, function (sheet, i) { return sheet.options.title
          ? ("<vt:lpstr>" + (ESC(sheet.options.title)) + "</vt:lpstr>")
          : ("<vt:lpstr>Sheet" + (i + 1) + "</vt:lpstr>"); }
      )) + "</vt:vector>\n  </TitlesOfParts>\n  <LinksUpToDate>false</LinksUpToDate>\n  <SharedDoc>false</SharedDoc>\n  <HyperlinksChanged>false</HyperlinksChanged>\n  <AppVersion>14.0300</AppVersion>\n</Properties>");
};

var CONTENT_TYPES = function (ref) {
  var sheetCount = ref.sheetCount;
  var commentFiles = ref.commentFiles;
  var drawingFiles = ref.drawingFiles;

  return (XMLHEAD + "\n<Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\">\n  <Default Extension=\"png\" ContentType=\"image/png\"/>\n  <Default Extension=\"gif\" ContentType=\"image/gif\"/>\n  <Default Extension=\"jpg\" ContentType=\"image/jpeg\"/>\n  <Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" />\n  <Default Extension=\"xml\" ContentType=\"application/xml\" />\n  <Default Extension=\"vml\" ContentType=\"application/vnd.openxmlformats-officedocument.vmlDrawing\"/>\n  <Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" />\n  <Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\"/>\n  <Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\"/>\n  " + (repeat(sheetCount, function (idx) { return ("<Override PartName=\"/xl/worksheets/sheet" + (idx + 1) + ".xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />"); })) + "\n  " + (foreach(commentFiles, function (filename) { return ("<Override PartName=\"/xl/" + filename + "\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\"/>"); })) + "\n  " + (foreach(drawingFiles, function (filename) { return ("<Override PartName=\"/xl/drawings/" + filename + "\" ContentType=\"application/vnd.openxmlformats-officedocument.drawing+xml\"/>"); })) + "\n  <Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />\n  <Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" />\n</Types>");
};

var WORKBOOK = function (ref) {
  var sheets = ref.sheets;
  var filterNames = ref.filterNames;
  var userNames = ref.userNames;

  return (XMLHEAD + "\n<workbook xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\">\n  <fileVersion appName=\"xl\" lastEdited=\"5\" lowestEdited=\"5\" rupBuild=\"9303\" />\n  <workbookPr defaultThemeVersion=\"124226\" />\n  <bookViews>\n    <workbookView xWindow=\"240\" yWindow=\"45\" windowWidth=\"18195\" windowHeight=\"7995\" />\n  </bookViews>\n  <sheets>\n  " + (foreach(sheets, function (ref, i) {
    var options = ref.options;

    var name = options.name || options.title || ("Sheet" + (i + 1));
    var state = options.state || 'visible';
    return ("<sheet name=\"" + (ESC(name)) + "\" state=\"" + state + "\" sheetId=\"" + (i + 1) + "\" r:id=\"rId" + (i + 1) + "\" />");
  })) + "\n  </sheets>\n  " + (filterNames.length || userNames.length ? ("\n    <definedNames>\n      " + (foreach(filterNames, function (f) { return ("\n         <definedName name=\"_xlnm._FilterDatabase\" hidden=\"1\" localSheetId=\"" + (f.localSheetId) + "\">" + (ESC(quoteSheet(f.name))) + "!" + (ESC(f.from)) + ":" + (ESC(f.to)) + "</definedName>"); })) + "\n      " + (foreach(userNames, function (f) { return ("\n         <definedName name=\"" + (f.name) + "\" hidden=\"" + (f.hidden ? 1 : 0) + "\" " + (f.localSheetId != null ? ("localSheetId=\"" + (f.localSheetId) + "\"") : '') + ">" + (ESC(f.value)) + "</definedName>"); })) + "\n    </definedNames>") : '') + "\n  <calcPr fullCalcOnLoad=\"1\" calcId=\"145621\" />\n</workbook>");
};

var WORKSHEET = function (ref$1) {
  var frozenColumns = ref$1.frozenColumns;
  var frozenRows = ref$1.frozenRows;
  var columns = ref$1.columns;
  var defaults = ref$1.defaults;
  var data = ref$1.data;
  var index = ref$1.index;
  var mergeCells = ref$1.mergeCells;
  var autoFilter = ref$1.autoFilter;
  var filter = ref$1.filter;
  var showGridLines = ref$1.showGridLines;
  var hyperlinks = ref$1.hyperlinks;
  var validations = ref$1.validations;
  var defaultCellStyleId = ref$1.defaultCellStyleId;
  var rtl = ref$1.rtl;
  var legacyDrawing = ref$1.legacyDrawing;
  var drawing = ref$1.drawing;
  var lastRow = ref$1.lastRow;
  var lastCol = ref$1.lastCol;
  var hasDisabledCells = ref$1.hasDisabledCells;

  return (XMLHEAD + "\n<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" mc:Ignorable=\"x14ac\">\n   " + (lastRow && lastCol ? ("<dimension ref=\"A1:" + (ref(lastRow - 1, lastCol - 1)) + "\" />") : "") + "\n\n   <sheetViews>\n     <sheetView " + (rtl ? 'rightToLeft="1"' : '') + " " + (index === 0 ? 'tabSelected="1"' : '') + " workbookViewId=\"0\" " + (showGridLines === false ? 'showGridLines="0"' : '') + ">\n     " + (frozenRows || frozenColumns ? ("\n       <pane state=\"frozen\"\n         " + (frozenColumns ? ("xSplit=\"" + frozenColumns + "\"") : '') + "\n         " + (frozenRows ? ("ySplit=\"" + frozenRows + "\"") : '') + "\n         topLeftCell=\"" + (String.fromCharCode(65 + (frozenColumns || 0)) + ((frozenRows || 0) + 1)) + "\"\n       />") : '') + "\n     </sheetView>\n   </sheetViews>\n\n   <sheetFormatPr x14ac:dyDescent=\"0.25\" " + (!defaults.skipCustomHeight ? 'customHeight="1"' : '') + " defaultRowHeight=\"" + (defaults.rowHeight ? defaults.rowHeight * 0.75 : 15) + "\"\n     " + (defaults.columnWidth ? ("defaultColWidth=\"" + (toWidth(defaults.columnWidth)) + "\"") : '') + " />\n\n   " + (defaultCellStyleId != null || (columns && columns.length > 0) ? ("\n     <cols>\n       " + (!columns || !columns.length ? ("\n         <col min=\"1\" max=\"16384\" style=\"" + defaultCellStyleId + "\"\n              " + (defaults.columnWidth ? ("width=\"" + (toWidth(defaults.columnWidth)) + "\"") : '') + " /> ") : '') + "\n       " + (foreach(columns, function (column, ci) {
         var columnIndex = typeof column.index === "number" ? column.index + 1 : (ci + 1);
         if (column.width === 0) {
           return ("<col " + (defaultCellStyleId != null ? ("style=\"" + defaultCellStyleId + "\"") : '') + "\n                        min=\"" + columnIndex + "\" max=\"" + columnIndex + "\" hidden=\"1\" customWidth=\"1\" />");
         }
         return ("<col " + (defaultCellStyleId != null ? ("style=\"" + defaultCellStyleId + "\"") : '') + "\n                      min=\"" + columnIndex + "\" max=\"" + columnIndex + "\" customWidth=\"1\"\n                      " + (column.autoWidth
                          ? ("width=\"" + (((column.width * 7 + 5) / 7 * 256) / 256) + "\" bestFit=\"1\"")
                          : ("width=\"" + (toWidth(column.width)) + "\"")) + " />");
       })) + "\n     </cols>") : '') + "\n\n   <sheetData>\n     " + (foreach(data, function (row, ri) {
       var rowIndex = typeof row.index === "number" ? row.index + 1 : (ri + 1);
       return ("\n         <row r=\"" + rowIndex + "\" x14ac:dyDescent=\"0.25\"\n              " + (row.level ? ("outlineLevel=\"" + (row.level) + "\"") : '') + "\n              " + (row.height === 0 ? 'hidden="1"'
                                 : row.height ? ("ht=\"" + (toHeight(row.height)) + "\" customHeight=\"1\"") : "") + ">\n           " + (foreach(row.data, function (cell) { return ("\n             <c r=\"" + (cell.ref) + "\" " + (cell.style ? ("s=\"" + (cell.style) + "\"") : '') + " " + (cell.type ? ("t=\"" + (cell.type) + "\"") : '') + ">\n               " + (cell.formula != null ? writeFormula(cell.formula) : '') + "\n               " + (cell.value != null ? ("<v>" + (ESC(cell.value)) + "</v>") : '') + "\n             </c>"); })) + "\n         </row>\n       ");
})) + "\n   </sheetData>\n\n   " + (hasDisabledCells ? "<sheetProtection sheet=\"1\" objects=\"1\" scenarios=\"1\"/>" : '') + "\n\n   " + (autoFilter ? ("<autoFilter ref=\"" + (autoFilter.from) + ":" + (autoFilter.to) + "\"/>")
                : filter ? spreadsheetFilters(filter) : '') + "\n\n   " + (mergeCells.length ? ("\n     <mergeCells count=\"" + (mergeCells.length) + "\">\n       " + (foreach(mergeCells, function (ref) { return ("<mergeCell ref=\"" + ref + "\"/>"); })) + "\n     </mergeCells>") : '') + "\n\n   " + (validations.length ? ("\n     <dataValidations>\n       " + (foreach(validations, function (val) { return ("\n         <dataValidation sqref=\"" + (val.sqref.join(" ")) + "\"\n                         showErrorMessage=\"" + (val.showErrorMessage) + "\"\n                         type=\"" + (ESC(val.type)) + "\"\n                         " + (val.type !== "list" ? ("operator=\"" + (ESC(val.operator)) + "\"") : '') + "\n                         allowBlank=\"" + (val.allowBlank) + "\"\n                         showDropDown=\"" + (val.showDropDown) + "\"\n                         " + (val.error ? ("error=\"" + (ESC(val.error)) + "\"") : '') + "\n                         " + (val.errorTitle ? ("errorTitle=\"" + (ESC(val.errorTitle)) + "\"") : '') + ">\n           " + (val.formula1 ? ("<formula1>" + (ESC(val.formula1)) + "</formula1>") : '') + "\n           " + (val.formula2 ? ("<formula2>" + (ESC(val.formula2)) + "</formula2>") : '') + "\n         </dataValidation>"); })) + "\n     </dataValidations>") : '') + "\n\n   " + (hyperlinks.length ? ("\n     <hyperlinks>\n       " + (foreach(hyperlinks, function (link) { return ("\n         <hyperlink ref=\"" + (link.ref) + "\" r:id=\"" + (link.rId) + "\"/>"); })) + "\n     </hyperlinks>") : '') + "\n\n   <pageMargins left=\"0.7\" right=\"0.7\" top=\"0.75\" bottom=\"0.75\" header=\"0.3\" footer=\"0.3\" />\n   " + (drawing ? ("<drawing r:id=\"" + drawing + "\"/>") : '') + "\n   " + (legacyDrawing ? ("<legacyDrawing r:id=\"" + legacyDrawing + "\"/>") : '') + "\n</worksheet>");
};

var WORKBOOK_RELS = function (ref) {
  var count = ref.count;

  return (XMLHEAD + "\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n  " + (repeat(count, function (idx) { return ("\n    <Relationship Id=\"rId" + (idx + 1) + "\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet" + (idx + 1) + ".xml\" />"); })) + "\n  <Relationship Id=\"rId" + (count + 1) + "\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />\n  <Relationship Id=\"rId" + (count + 2) + "\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />\n</Relationships>");
};

var WORKSHEET_RELS = function (ref) {
  var hyperlinks = ref.hyperlinks;
  var comments = ref.comments;
  var sheetIndex = ref.sheetIndex;
  var drawings = ref.drawings;

  return (XMLHEAD + "\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n  " + (foreach(hyperlinks, function (link) { return ("\n    <Relationship Id=\"" + (link.rId) + "\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"" + (ESC(link.target)) + "\" TargetMode=\"External\" />"); })) + "\n  " + (!comments.length ? '' : ("\n    <Relationship Id=\"comment" + sheetIndex + "\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\" Target=\"../comments" + sheetIndex + ".xml\"/>\n    <Relationship Id=\"vml" + sheetIndex + "\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\" Target=\"../drawings/vmlDrawing" + sheetIndex + ".vml\"/>")) + "\n  " + (!drawings.length ? '' : ("\n    <Relationship Id=\"drw" + sheetIndex + "\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\" Target=\"../drawings/drawing" + sheetIndex + ".xml\"/>")) + "\n</Relationships>");
};

var COMMENTS_XML = function (ref) {
  var comments = ref.comments;

  return (XMLHEAD + "\n<comments xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">\n  <authors>\n    <author></author>\n  </authors>\n  <commentList>\n    " + (foreach(comments, function (comment) { return ("\n      <comment ref=\"" + (comment.ref) + "\" authorId=\"0\">\n        <text>\n          <r>\n            <rPr>\n              <sz val=\"8\"/>\n              <color indexed=\"81\"/>\n              <rFont val=\"Tahoma\"/>\n              <charset val=\"1\"/>\n            </rPr>\n            <t>" + (ESC(comment.text)) + "</t>\n          </r>\n        </text>\n      </comment>"); })) + "\n  </commentList>\n</comments>");
};

var LEGACY_DRAWING = function (ref) {
  var comments = ref.comments;

  return ("<xml xmlns:v=\"urn:schemas-microsoft-com:vml\"\n     xmlns:o=\"urn:schemas-microsoft-com:office:office\"\n     xmlns:x=\"urn:schemas-microsoft-com:office:excel\">\n  <v:shapetype coordsize=\"21600,21600\" id=\"_x0000_t202\" path=\"m,l,21600r21600,l21600,xe\">\n    <v:stroke joinstyle=\"miter\"/>\n    <v:path gradientshapeok=\"t\" o:connecttype=\"rect\"/>\n  </v:shapetype>\n  " + (foreach(comments, function (comment) { return ("\n    <v:shape type=\"#_x0000_t202\" style=\"visibility: hidden\" fillcolor=\"#ffffe1\" o:insetmode=\"auto\">\n      <v:shadow on=\"t\" color=\"black\" obscured=\"t\"/>\n      <x:ClientData ObjectType=\"Note\">\n        <x:MoveWithCells/>\n        <x:SizeWithCells/>\n        <x:Anchor>" + (comment.anchor) + "</x:Anchor>\n        <x:AutoFill>False</x:AutoFill>\n        <x:Row>" + (comment.row) + "</x:Row>\n        <x:Column>" + (comment.col) + "</x:Column>\n      </x:ClientData>\n    </v:shape>"); })) + "\n</xml>");
};

var DRAWINGS_XML = function (drawings) { return (XMLHEAD + "\n<xdr:wsDr xmlns:xdr=\"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing\"\n          xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\"\n          xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\">\n  " + (foreach(drawings, function (drawing, index) { return ("\n    <xdr:oneCellAnchor editAs=\"oneCell\">\n      <xdr:from>\n        <xdr:col>" + (drawing.col) + "</xdr:col>\n        <xdr:colOff>" + (drawing.colOffset) + "</xdr:colOff>\n        <xdr:row>" + (drawing.row) + "</xdr:row>\n        <xdr:rowOff>" + (drawing.rowOffset) + "</xdr:rowOff>\n      </xdr:from>\n      <xdr:ext cx=\"" + (drawing.width) + "\" cy=\"" + (drawing.height) + "\" />\n      <xdr:pic>\n        <xdr:nvPicPr>\n          <xdr:cNvPr id=\"" + (index + 1) + "\" name=\"Picture " + (index + 1) + "\"/>\n          <xdr:cNvPicPr/>\n        </xdr:nvPicPr>\n        <xdr:blipFill>\n          <a:blip r:embed=\"" + (drawing.imageId) + "\"/>\n          <a:stretch>\n            <a:fillRect/>\n          </a:stretch>\n        </xdr:blipFill>\n        <xdr:spPr>\n          <a:prstGeom prst=\"rect\">\n            <a:avLst/>\n          </a:prstGeom>\n        </xdr:spPr>\n      </xdr:pic>\n      <xdr:clientData/>\n    </xdr:oneCellAnchor>"); })) + "\n</xdr:wsDr>"); };

var DRAWINGS_RELS_XML = function (rels) { return (XMLHEAD + "\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n  " + (foreach(rels, function (rel) { return ("\n    <Relationship Id=\"" + (rel.rId) + "\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\" Target=\"" + (rel.target) + "\"/>"); })) + "\n</Relationships>"); };

var SHARED_STRINGS = function (ref) {
  var count = ref.count;
  var uniqueCount = ref.uniqueCount;
  var indexes = ref.indexes;

  return (XMLHEAD + "\n<sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"" + count + "\" uniqueCount=\"" + uniqueCount + "\">\n  " + (foreach(Object.keys(indexes), function (index) { return ("\n    <si><t xml:space=\"preserve\">" + (ESC(index.substring(1))) + "</t></si>"); })) + "\n</sst>");
};

var STYLES = function (ref) {
  var formats = ref.formats;
  var fonts = ref.fonts;
  var fills = ref.fills;
  var borders = ref.borders;
  var styles = ref.styles;

  return (XMLHEAD + "\n<styleSheet\n    xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    mc:Ignorable=\"x14ac\"\n    xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">\n  <numFmts count=\"" + (formats.length) + "\">\n  " + (foreach(formats, function (format, fi) { return ("\n    <numFmt formatCode=\"" + (ESC(format.format)) + "\" numFmtId=\"" + (165 + fi) + "\" />"); })) + "\n  </numFmts>\n  <fonts count=\"" + (fonts.length + 1) + "\" x14ac:knownFonts=\"1\">\n    <font>\n       <sz val=\"11\" />\n       <color theme=\"1\" />\n       <name val=\"Calibri\" />\n       <family val=\"2\" />\n       <scheme val=\"minor\" />\n    </font>\n    " + (foreach(fonts, function (font) { return ("\n    <font>\n      " + (font.bold ? '<b/>' : '') + "\n      " + (font.italic ? '<i/>' : '') + "\n      " + (font.underline ? '<u/>' : '') + "\n      <sz val=\"" + (font.fontSize || 11) + "\" />\n      " + (font.color ? ("<color rgb=\"" + (ESC(font.color)) + "\" />") : '<color theme="1" />') + "\n      " + (font.fontFamily ? ("\n        <name val=\"" + (ESC(font.fontFamily)) + "\" />\n        <family val=\"2\" />\n      ") : "\n        <name val=\"Calibri\" />\n        <family val=\"2\" />\n        <scheme val=\"minor\" />\n      ") + "\n    </font>"); })) + "\n  </fonts>\n  <fills count=\"" + (fills.length + 2) + "\">\n      <fill><patternFill patternType=\"none\"/></fill>\n      <fill><patternFill patternType=\"gray125\"/></fill>\n    " + (foreach(fills, function (fill) { return ("\n      " + (fill.background ? ("\n        <fill>\n          <patternFill patternType=\"solid\">\n              <fgColor rgb=\"" + (ESC(fill.background)) + "\"/>\n          </patternFill>\n        </fill>\n      ") : '')); })) + "\n  </fills>\n  <borders count=\"" + (borders.length + 1) + "\">\n    <border><left/><right/><top/><bottom/><diagonal/></border>\n    " + (foreach(borders, borderTemplate)) + "\n  </borders>\n  <cellStyleXfs count=\"1\">\n    <xf borderId=\"0\" fillId=\"0\" fontId=\"0\" />\n  </cellStyleXfs>\n  <cellXfs count=\"" + (styles.length + 1) + "\">\n    <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />\n    " + (foreach(styles, function (style) { return ("\n      <xf xfId=\"0\"\n          " + (style.fontId ? ("fontId=\"" + (style.fontId) + "\" applyFont=\"1\"") : '') + "\n          " + (style.fillId ? ("fillId=\"" + (style.fillId) + "\" applyFill=\"1\"") : '') + "\n          " + (style.numFmtId ? ("numFmtId=\"" + (style.numFmtId) + "\" applyNumberFormat=\"1\"") : '') + "\n          " + (style.textAlign || style.verticalAlign || style.wrap ? 'applyAlignment="1"' : '') + "\n          " + (style.borderId ? ("borderId=\"" + (style.borderId) + "\" applyBorder=\"1\"") : '') + "\n          " + (style.disabled != null ? "applyProtection=\"1\"" : '') + ">\n        " + (style.textAlign || style.verticalAlign || style.wrap ? ("\n        <alignment\n          " + (style.textAlign ? ("horizontal=\"" + (ESC(style.textAlign)) + "\"") : '') + "\n          " + (style.verticalAlign ? ("vertical=\"" + (ESC(style.verticalAlign)) + "\"") : '') + "\n          " + (style.indent ? ("indent=\"" + (ESC(style.indent)) + "\"") : '') + "\n          " + (style.wrap ? 'wrapText="1"' : '') + " />\n        ") : '') + "\n        " + (style.disabled != null ? ("\n        <protection locked=\"" + (style.disabled ? 1 : 0) + "\" />\n        ") : '') + "\n      </xf>\n    "); })) + "\n  </cellXfs>\n  <cellStyles count=\"1\">\n    <cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/>\n  </cellStyles>\n  <dxfs count=\"0\" />\n  <tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium2\" defaultPivotStyle=\"PivotStyleMedium9\" />\n</styleSheet>");
};

function writeFormula(formula) {
    if (typeof formula == "string") {
        return ("<f>" + (ESC(formula)) + "</f>");
    }
    // array formulas
    return ("<f t=\"array\" ref=\"" + (formula.ref) + "\">" + (ESC(formula.src)) + "</f>");
}

function numChar(colIndex) {
   var letter = Math.floor(colIndex / 26) - 1;

   return (letter >= 0 ? numChar(letter) : "") + String.fromCharCode(65 + (colIndex % 26));
}

function ref(rowIndex, colIndex) {
    return numChar(colIndex) + (rowIndex + 1);
}

function $ref(rowIndex, colIndex) {
    return "$" + numChar(colIndex) + "$" + (rowIndex + 1);
}

function filterRowIndex(options) {
    var frozenRows = options.frozenRows || (options.freezePane || {}).rowSplit || 1;
    return frozenRows - 1;
}

function toWidth(px) {
    var maximumDigitWidth = 7;
    return (px / maximumDigitWidth) - (Math.floor(128 / maximumDigitWidth) / 256);
}

function toHeight(px) {
    return px * 0.75;
}

function stripFunnyChars(value) {
    return String(value)
        .replace(/[\x00-\x09\x0B\x0C\x0E-\x1F]/g, "") // leave CRLF in
        .replace(/\r?\n/g, "\r\n");                   // make sure LF is preceded by CR
}

var Worksheet = function Worksheet(options, sharedStrings, styles, borders) {
      this.options = options;
      this._strings = sharedStrings;
      this._styles = styles;
      this._borders = borders;
      this._validations = {};
      this._comments = [];
      this._drawings = options.drawings || [];
      this._hyperlinks = (this.options.hyperlinks || []).map(
          function (link, i) { return Object.assign({}, link, { rId: ("link" + i) }); });
  };

  Worksheet.prototype.relsToXML = function relsToXML () {
      var hyperlinks = this._hyperlinks;
      var comments = this._comments;
      var drawings = this._drawings;

      if (hyperlinks.length || comments.length || drawings.length) {
          return WORKSHEET_RELS({
              hyperlinks : hyperlinks,
              comments : comments,
              sheetIndex : this.options.sheetIndex,
              drawings : drawings
          });
      }
  };

  Worksheet.prototype.toXML = function toXML (index) {
      var mergeCells = this.options.mergedCells || [];
      var rows = this.options.rows || [];
      var data = inflate(rows, mergeCells);

      this._readCells(data);

      var autoFilter = this.options.filter;
      var filter;
      if (autoFilter && (typeof autoFilter.from === "number") && (typeof autoFilter.to === "number")) {
          // Grid enables auto filter
          autoFilter = {
              from: ref(filterRowIndex(this.options), autoFilter.from),
              to: ref(filterRowIndex(this.options), autoFilter.to)
          };
      } else if (autoFilter && autoFilter.ref && autoFilter.columns) {
          // this is probably from the Spreadsheet
          filter = autoFilter;
          autoFilter = null;
      }

      var validations = [];
      for (var i in this._validations) {
          if (Object.prototype.hasOwnProperty.call(this._validations, i)) {
              validations.push(this._validations[i]);
          }
      }

      var defaultCellStyleId = null;
      var defaultCellStyle = this.options.defaultCellStyle;
      if (this._hasDisabledCells) {
          if (!defaultCellStyle) {
              defaultCellStyle = { disabled: false };
          } else {
              defaultCellStyle = Object.assign({ disabled: false }, defaultCellStyle);
          }
      }
      if (defaultCellStyle) {
          defaultCellStyleId = this._lookupStyle(defaultCellStyle);
      }

      var freezePane = this.options.freezePane || {};
      var defaults = this.options.defaults || {};
      var lastRow = this.options.rows ? this._getLastRow() : 1;
      var lastCol = this.options.rows ? this._getLastCol() : 1;

      return WORKSHEET({
          frozenColumns: this.options.frozenColumns || freezePane.colSplit,
          frozenRows: this.options.frozenRows || freezePane.rowSplit,
          columns: this.options.columns,
          defaults: defaults,
          data: data,
          index: index,
          mergeCells: mergeCells,
          autoFilter: autoFilter,
          filter: filter,
          showGridLines: this.options.showGridLines,
          hyperlinks: this._hyperlinks,
          validations: validations,
          defaultCellStyleId: defaultCellStyleId,
          rtl: this.options.rtl !== undefined ? this.options.rtl : defaults.rtl,
          legacyDrawing: this._comments.length ? ("vml" + (this.options.sheetIndex)) : null,
          drawing: this._drawings.length ? ("drw" + (this.options.sheetIndex)) : null,
          lastRow: lastRow,
          lastCol: lastCol,
          hasDisabledCells: this._hasDisabledCells,
      });
  };

  Worksheet.prototype.commentsXML = function commentsXML () {
      if (this._comments.length) {
          return COMMENTS_XML({ comments: this._comments });
      }
  };

  Worksheet.prototype.drawingsXML = function drawingsXML (images) {
      if (this._drawings.length) {
          var rels = {};
          var main = this._drawings.map(function (drw) {
              var ref = parseRef(drw.topLeftCell);
              var img = rels[drw.image];
              if (!img) {
                  img = rels[drw.image] = {
                      rId: ("img" + (drw.image)),
                      target: images[drw.image].target
                  };
              }
              return {
                  col     : ref.col,
                  colOffset : pixelsToExcel(drw.offsetX),
                  row     : ref.row,
                  rowOffset : pixelsToExcel(drw.offsetY),
                  width   : pixelsToExcel(drw.width),
                  height  : pixelsToExcel(drw.height),
                  imageId : img.rId
              };
          });
          return {
              main: DRAWINGS_XML(main),
              rels: DRAWINGS_RELS_XML(rels)
          };
      }
  };

  Worksheet.prototype.legacyDrawing = function legacyDrawing () {
      if (this._comments.length) {
          return LEGACY_DRAWING({ comments: this._comments });
      }
  };

  Worksheet.prototype._lookupString = function _lookupString (value) {
      var key = "$" + value;
      var index = this._strings.indexes[key];
      var result;

      if (index !== undefined) {
          result = index;
      } else {
          result = this._strings.indexes[key] = this._strings.uniqueCount;
          this._strings.uniqueCount ++;
      }

      this._strings.count ++;

      return result;
  };

  Worksheet.prototype._lookupStyle = function _lookupStyle (style) {
      var json = JSON.stringify(style);

      if (json === "{}") {
          return 0;
      }

      var index = indexOf(json, this._styles);

      if (index < 0) {
          index = this._styles.push(json) - 1;
      }

      // There is one default style
      return index + 1;
  };

  Worksheet.prototype._lookupBorder = function _lookupBorder (border) {
      var json = JSON.stringify(border);
      if (json === "{}") {
          return;
      }

      var index = indexOf(json, this._borders);
      if (index < 0) {
          index = this._borders.push(json) - 1;
      }

      // There is one default border
      return index + 1;
  };

  Worksheet.prototype._readCells = function _readCells (rowData) {
      for (var i = 0; i < rowData.length; i++) {
          var row = rowData[i];
          var cells = row.cells;

          row.data = [];

          for (var j = 0; j < cells.length; j++) {
              var cellData = this._cell(cells[j], row.index, j);
              if (cellData) {
                  row.data.push(cellData);
              }
          }
      }
  };

  Worksheet.prototype._cell = function _cell (data, rowIndex, cellIndex) {
        var this$1$1 = this;

      if (!data || data === EMPTY_CELL) {
          return null;
      }

      var value = data.value;

      var border = {};

      if (data.borderLeft) {
          border.left = data.borderLeft;
      }

      if (data.borderRight) {
          border.right = data.borderRight;
      }

      if (data.borderTop) {
          border.top = data.borderTop;
      }

      if (data.borderBottom) {
          border.bottom = data.borderBottom;
      }

      if (data.dBorders) {
          border.diagonal = data.dBorders;
      }

      border = this._lookupBorder(border);

      var defStyle = this.options.defaultCellStyle || {};
      var style = { borderId: border };

      (function (add) {
          add("color");
          add("background");
          add("bold");
          add("italic");
          add("underline");
          if (!add("fontFamily")) { add("fontName", "fontFamily"); }
          add("fontSize");
          add("format");
          if (!add("textAlign")) { add("hAlign", "textAlign"); }
          if (!add("verticalAlign")) { add("vAlign", "verticalAlign"); }
          add("wrap");
          add("indent");
          if (!add("disabled")) {
              if (add("enable")) {
                  style.disabled = !style.enable;
                  delete style.enable;
              }
          }
          if (style.disabled) {
              this$1$1._hasDisabledCells = true;
          }
      })(function (prop, target) {
          var val = data[prop];
          if (val === undefined) {
              val = defStyle[prop];
          }
          if (val !== undefined) {
              style[target || prop] = val;
              return true;
          }
      });

      var columns = this.options.columns || [];

      var column = columns[cellIndex];
      var type = typeof value;

      if (column && column.autoWidth && (!data.colSpan || data.colSpan === 1)) {
          var displayValue = value;

          // XXX: let's not bring kendo.toString in only for this.
          //    better wait until the spreadsheet engine is available as a separate
          //    component, then we can use a real Excel-like formatter.
          //
          if (type === "number") {
              // kendo.toString will not behave exactly like the Excel format
              // Still, it's the best we have available for estimating the character count.
              displayValue = IntlService.toString(value, data.format);
          }

          column.width = Math.max(column.width || 0, String(displayValue).length);
      }

      if (type === "string") {
          value = stripFunnyChars(value);
          value = this._lookupString(value);
          type = "s";
      } else if (type === "number") {
          type = "n";
      } else if (type === "boolean") {
          type = "b";
          value = Number(value);
      } else if (value && value.getTime) {
          type = null;
          value = dateToSerial(value);
          if (!style.format) {
              style.format = "mm-dd-yy";
          }
      } else {
          type = null;
          value = null;
      }

      style = this._lookupStyle(style);

      var cellName = ref(rowIndex, cellIndex);

      if (data.validation) {
          this._addValidation(data.validation, cellName);
      }

      if (data.comment) {
          var anchor = [
              cellIndex + 1,// start column
              15,           // start column offset
              rowIndex,     // start row
              10,           // start row offset
              cellIndex + 3,// end column
              15,           // end column offset
              rowIndex + 3, // end row
              4             // end row offset
          ];
          this._comments.push({
              ref  : cellName,
              text : data.comment,
              row  : rowIndex,
              col  : cellIndex,
              anchor : anchor.join(", ")
          });
      }

      return {
          value: value,
          formula: data.formula,
          type: type,
          style: style,
          ref: cellName
      };
  };

  Worksheet.prototype._addValidation = function _addValidation (v, ref) {
      var tmp = {
          showErrorMessage : v.type === "reject" ? 1 : 0,
          formula1       : v.from,
          formula2       : v.to,
          type           : MAP_EXCEL_TYPE[v.dataType] || v.dataType,
          operator       : MAP_EXCEL_OPERATOR[v.comparerType] || v.comparerType,
          allowBlank     : v.allowNulls ? 1 : 0,
          showDropDown   : v.showButton ? 0 : 1, // LOL, Excel!
          error          : v.messageTemplate,
          errorTitle     : v.titleTemplate
      };
      var json = JSON.stringify(tmp);
      if (!this._validations[json]) {
          this._validations[json] = tmp;
          tmp.sqref = [];
      }
      this._validations[json].sqref.push(ref);
  };

  Worksheet.prototype._getLastRow = function _getLastRow () {
      return countData(this.options.rows);
  };

  Worksheet.prototype._getLastCol = function _getLastCol () {
      var last = 0;
      this.options.rows.forEach(function(row) {
          if (row.cells) {
              last = Math.max(last, countData(row.cells));
          }
      });
      return last;
  };

function countData(data) {
    var last = data.length;
    data.forEach(function(el) {
        if (el.index && el.index >= last) {
            last = el.index + 1;
        }
    });
    return last;
}

var MAP_EXCEL_OPERATOR = {
    // includes only what differs; key is our operator, value is Excel
    // operator.
    greaterThanOrEqualTo : "greaterThanOrEqual",
    lessThanOrEqualTo    : "lessThanOrEqual"
};

var MAP_EXCEL_TYPE = {
    // eslint-disable-next-line id-denylist
    number: "decimal"
};

var defaultFormats = {
    "General": 0,
    "0": 1,
    "0.00": 2,
    "#,##0": 3,
    "#,##0.00": 4,
    "0%": 9,
    "0.00%": 10,
    "0.00E+00": 11,
    "# ?/?": 12,
    "# ??/??": 13,
    "mm-dd-yy": 14,
    "d-mmm-yy": 15,
    "d-mmm": 16,
    "mmm-yy": 17,
    "h:mm AM/PM": 18,
    "h:mm:ss AM/PM": 19,
    "h:mm": 20,
    "h:mm:ss": 21,
    "m/d/yy h:mm": 22,
    "#,##0 ;(#,##0)": 37,
    "#,##0 ;[Red](#,##0)": 38,
    "#,##0.00;(#,##0.00)": 39,
    "#,##0.00;[Red](#,##0.00)": 40,
    "mm:ss": 45,
    "[h]:mm:ss": 46,
    "mmss.0": 47,
    "##0.0E+0": 48,
    "@": 49,
    "[$-404]e/m/d": 27,
    "m/d/yy": 30,
    "t0": 59,
    "t0.00": 60,
    "t#,##0": 61,
    "t#,##0.00": 62,
    "t0%": 67,
    "t0.00%": 68,
    "t# ?/?": 69,
    "t# ??/??": 70
};

function maybeRGB(value) {
    function hex(val) {
        var x = parseInt(val, 10).toString(16);
        return x.length < 2 ? "0" + x : x;
    }

    var m = /^rgba?\((\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*([0-9.]+)\s*)?\)/i.exec(value.trim());
    if (m) {
        var opacity = (m[4] ? parseFloat(m[4]) : 1) * 255 | 0;
        return "#" + hex(opacity) + hex(m[1]) + hex(m[2]) + hex(m[3]);
    }
    return value;
}

function convertColor(value) {
    var color = maybeRGB(value);
    if (color.length < 6) {
        color = color.replace(/(\w)/g, function($0, $1) {
            return $1 + $1;
        });
    }

    color = color.substring(1).toUpperCase();

    if (color.length < 8) {
        color = "FF" + color;
    }

    return color;
}

var Workbook = function Workbook(options) {
      var this$1$1 = this;

      this.options = options || {};
      this._strings = {
          indexes: {},
          count: 0,
          uniqueCount: 0
      };
      this._styles = [];
      this._borders = [];
      this._images = this.options.images;
      this._imgId = 0;

      this._sheets = map(this.options.sheets || [], function (options, i) {
          options.defaults = this$1$1.options;
          options.sheetIndex = i + 1;
          return new Worksheet(options, this$1$1._strings, this$1$1._styles, this$1$1._borders);
      });
  };

  Workbook.prototype.imageFilename = function imageFilename (mimeType) {
      var id = ++this._imgId;
      switch (mimeType) {
        case "image/jpg":
        case "image/jpeg":
          return ("image" + id + ".jpg");
        case "image/png":
          return ("image" + id + ".png");
        case "image/gif":
          return ("image" + id + ".gif");
        default:
          return ("image" + id + ".bin"); // XXX: anything better to do here?
      }
  };

  Workbook.prototype.toZIP = function toZIP () {
        var this$1$1 = this;

      var zip = createZip();

      var docProps = zip.folder("docProps");

      docProps.file("core.xml", CORE({
          creator: this.options.creator || "Kendo UI",
          lastModifiedBy: this.options.creator || "Kendo UI",
          created: this.options.date || new Date().toJSON(),
          modified: this.options.date || new Date().toJSON()
      }));

      var sheetCount = this._sheets.length;

      docProps.file("app.xml", APP({ sheets: this._sheets }));

      var rels = zip.folder("_rels");
      rels.file(".rels", RELS);

      var xl = zip.folder("xl");

      var xlRels = xl.folder("_rels");
      xlRels.file("workbook.xml.rels", WORKBOOK_RELS({ count: sheetCount }));

      if (this._images) {
          var media = xl.folder("media");
          Object.keys(this._images).forEach(function (id) {
              var img = this$1$1._images[id];
              var filename = this$1$1.imageFilename(img.type);
              media.file(filename, img.data);
              img.target = "../media/" + filename;
          });
      }

      var sheetIds = {};
      xl.file("workbook.xml", WORKBOOK({
          sheets: this._sheets,
          filterNames: map(this._sheets, function(sheet, index) {
              var options = sheet.options;
              var sheetName = (options.name || options.title || "Sheet" + (index + 1));
              sheetIds[sheetName.toLowerCase()] = index;
              var filter = options.filter;
              if (filter) {
                  if (filter.ref) {
                      // spreadsheet provides `ref`
                      var a = filter.ref.split(":");
                      var from = parseRef(a[0]);
                      var to = parseRef(a[1]);
                      return {
                          localSheetId: index,
                          name: sheetName,
                          from: $ref(from.row, from.col),
                          to: $ref(to.row, to.col)
                      };
                  } else if (typeof filter.from !== "undefined" && typeof filter.to !== "undefined") {
                      // grid does this
                      return {
                          localSheetId: index,
                          name: sheetName,
                          from: $ref(filterRowIndex(options), filter.from),
                          to: $ref(filterRowIndex(options), filter.to)
                      };
                  }
              }
          }),
          userNames: map(this.options.names || [], function(def) {
              return {
                  name: def.localName,
                  localSheetId: def.sheet ? sheetIds[def.sheet.toLowerCase()] : null,
                  value: def.value,
                  hidden: def.hidden
              };
          })
      }));

      var worksheets = xl.folder("worksheets");
      var drawings = xl.folder("drawings");
      var drawingsRels = drawings.folder("_rels");
      var sheetRels = worksheets.folder("_rels");
      var commentFiles = [];
      var drawingFiles = [];
      var hasDisabledCells = false;

      for (var idx = 0; idx < sheetCount; idx++) {
          var sheet = this._sheets[idx];
          var sheetName = "sheet" + (idx + 1) + ".xml";
          var sheetXML = sheet.toXML(idx); // must be called before relsToXML
          var relsXML = sheet.relsToXML();
          var commentsXML = sheet.commentsXML();
          var legacyDrawing = sheet.legacyDrawing();
          var drawingsXML = sheet.drawingsXML(this._images);

          if (sheet._hasDisabledCells) {
              hasDisabledCells = true;
          }

          if (relsXML) {
              sheetRels.file(sheetName + ".rels", relsXML);
          }
          if (commentsXML) {
              var name = "comments" + (sheet.options.sheetIndex) + ".xml";
              xl.file(name, commentsXML);
              commentFiles.push(name);
          }
          if (legacyDrawing) {
              drawings.file(("vmlDrawing" + (sheet.options.sheetIndex) + ".vml"), legacyDrawing);
          }
          if (drawingsXML) {
              var name$1 = "drawing" + (sheet.options.sheetIndex) + ".xml";
              drawings.file(name$1, drawingsXML.main);
              drawingsRels.file((name$1 + ".rels"), drawingsXML.rels);
              drawingFiles.push(name$1);
          }

          worksheets.file(sheetName, sheetXML);
      }

      var borders = map(this._borders, parseJSON);

      var styles = map(this._styles, parseJSON);

      var hasFont = function(style) {
          return style.underline || style.bold || style.italic || style.color || style.fontFamily || style.fontSize;
      };

      var convertFontSize = function(value) {
          var fontInPx = Number(value);
          var fontInPt;

          if (fontInPx) {
              fontInPt = fontInPx * 3 / 4;
          }

          return fontInPt;
      };

      var fonts = map(styles, function(style) {
          if (style.fontSize) {
              style.fontSize = convertFontSize(style.fontSize);
          }

          if (style.color) {
              style.color = convertColor(style.color);
          }

          if (hasFont(style)) {
              return style;
          }
      });

      var formats = map(styles, function(style) {
          if (style.format && defaultFormats[style.format] === undefined) {
              return style;
          }
      });

      var fills = map(styles, function(style) {
          if (style.background) {
              style.background = convertColor(style.background);
              return style;
          }
      });

      xl.file("styles.xml", STYLES({
          fonts: fonts,
          fills: fills,
          formats: formats,
          borders: borders,
          styles: map(styles, function(style) {
              var result = {};

              if (hasFont(style)) {
                  result.fontId = indexOf(style, fonts) + 1;
              }

              if (style.background) {
                  result.fillId = indexOf(style, fills) + 2;
              }

              result.textAlign = style.textAlign;
              result.indent = style.indent;
              result.verticalAlign = style.verticalAlign;
              result.wrap = style.wrap;
              result.borderId = style.borderId;

              if (style.format) {
                  if (defaultFormats[style.format] !== undefined) {
                      result.numFmtId = defaultFormats[style.format];
                  } else {
                      result.numFmtId = 165 + indexOf(style, formats);
                  }
              }

              if (hasDisabledCells) {
                  result.disabled = !!style.disabled;
              }

              return result;
          })
      }));

      xl.file("sharedStrings.xml", SHARED_STRINGS(this._strings));

      zip.file("[Content_Types].xml", CONTENT_TYPES({
          sheetCount: sheetCount,
          commentFiles: commentFiles,
          drawingFiles: drawingFiles
      }));

      return zip;
  };

  Workbook.prototype.toDataURL = function toDataURL () {
      var zip = this.toZIP();

      return zip.generateAsync ? zip.generateAsync(DATA_URL_OPTIONS).then(toDataURI) : toDataURI(zip.generate(DATA_URL_OPTIONS));
  };

  Workbook.prototype.toBlob = function toBlob () {
      var zip = this.toZIP();
      if (zip.generateAsync) {
          return zip.generateAsync(BLOB_OPTIONS);
      }
      return new Blob([ zip.generate(ARRAYBUFFER_OPTIONS) ], { type: MIME_TYPE });
  };

function borderStyle(width) {
    var alias = "thin";

    if (width === 2) {
        alias = "medium";
    } else if (width === 3) {
        alias = "thick";
    }

    return alias;
}

function borderSideTemplate(name, style) {
    var result = "";

    if (style) {
        result += "<" + name + " style=\"" + borderStyle(style.size) + "\">";
        if (style.color) {
            result += "<color rgb=\"" + convertColor(style.color) + "\"/>";
        }
        result += "</" + name + ">";
    }

    return result;
}

function borderTemplate(border) {
    var diag = border.diagonal ? border.diagonal.type : 0;
    return ("<border " + (diag & 2 ? 'diagonalUp="true"' : '') + " " + (diag & 1 ? 'diagonalDown="true"' : '') + ">\n      " + (borderSideTemplate("left", border.left)) + "\n      " + (borderSideTemplate("right", border.right)) + "\n      " + (borderSideTemplate("top", border.top)) + "\n      " + (borderSideTemplate("bottom", border.bottom)) + "\n      " + (borderSideTemplate("diagonal", border.diagonal)) + "\n    </border>");
}

var EMPTY_CELL = {};
function inflate(rows, mergedCells) {
    var rowData = [];
    var rowsByIndex = [];

    indexRows(rows, function(row, index) {
        var data = {
            _source: row,
            index: index,
            height: row.height,
            level: row.level,
            cells: []
        };

        rowData.push(data);
        rowsByIndex[index] = data;
    });

    var sorted = sortByIndex(rowData).slice(0);
    var ctx = {
        rowData: rowData,
        rowsByIndex: rowsByIndex,
        mergedCells: mergedCells
    };

    for (var i = 0; i < sorted.length; i++) {
        fillCells(sorted[i], ctx);
        delete sorted[i]._source;
    }

    return sortByIndex(rowData);
}

function indexRows(rows, callback) {
    for (var i = 0; i < rows.length; i++) {
        var row = rows[i];
        if (!row) {
            continue;
        }

        var index = row.index;
        if (typeof index !== "number") {
            index = i;
        }

        callback(row, index);
    }
}

function sortByIndex(items) {
    return items.sort(function(a, b) {
        return a.index - b.index;
    });
}

function pushUnique(array, el) {
    if (array.indexOf(el) < 0) {
        array.push(el);
    }
}

function getSpan(mergedCells, ref) {
    for (var i = 0; i < mergedCells.length; ++i) {
        var range = mergedCells[i];
        var a = range.split(":");
        var topLeft = a[0];
        if (topLeft === ref) {
            var bottomRight = a[1];
            topLeft = parseRef(topLeft);
            bottomRight = parseRef(bottomRight);
            return {
                rowSpan: bottomRight.row - topLeft.row + 1,
                colSpan: bottomRight.col - topLeft.col + 1
            };
        }
    }
}

function parseRef(ref) {
    function getcol(str) {
        var upperStr = str.toUpperCase();
        var col = 0;
        for (var i = 0; i < upperStr.length; ++i) {
            col = col * 26 + upperStr.charCodeAt(i) - 64;
        }
        return col - 1;
    }

    function getrow(str) {
        return parseInt(str, 10) - 1;
    }

    var m = /^([a-z]+)(\d+)$/i.exec(ref);
    return {
        row: getrow(m[2]),
        col: getcol(m[1])
    };
}

function pixelsToExcel(px) {
    return Math.round(px * 9525);
}

function fillCells(data, ctx) {
    var row = data._source;
    var rowIndex = data.index;
    var cells = row.cells;
    var cellData = data.cells;

    if (!cells) {
        return;
    }

    for (var i = 0; i < cells.length; i++) {
        var cell = cells[i] || EMPTY_CELL;

        var rowSpan = cell.rowSpan || 1;
        var colSpan = cell.colSpan || 1;

        var cellIndex = insertCell(cellData, cell);
        var topLeftRef = ref(rowIndex, cellIndex);

        if (rowSpan === 1 && colSpan === 1) {
            // could still be merged: the spreadsheet does not send
            // rowSpan/colSpan, but mergedCells is already populated.
            // https://github.com/telerik/kendo-ui-core/issues/2401
            var tmp = getSpan(ctx.mergedCells, topLeftRef);
            if (tmp) {
                colSpan = tmp.colSpan;
                rowSpan = tmp.rowSpan;
            }
        }

        spanCell(cell, cellData, cellIndex, colSpan);

        if (rowSpan > 1 || colSpan > 1) {
            pushUnique(ctx.mergedCells,
                       topLeftRef + ":" + ref(rowIndex + rowSpan - 1,
                                              cellIndex + colSpan - 1));
        }

        if (rowSpan > 1) {
            for (var ri = rowIndex + 1; ri < rowIndex + rowSpan; ri++) {
                var nextRow = ctx.rowsByIndex[ri];
                if (!nextRow) {
                    nextRow = ctx.rowsByIndex[ri] = { index: ri, cells: [] };
                    ctx.rowData.push(nextRow);
                }

                spanCell(cell, nextRow.cells, cellIndex - 1, colSpan + 1);
            }
        }
    }
}

function insertCell(data, cell) {
    var index;

    if (typeof cell.index === "number") {
        index = cell.index;
        insertCellAt(data, cell, cell.index);
    } else {
        index = appendCell(data, cell);
    }

    return index;
}

function insertCellAt(data, cell, index) {
    data[index] = cell;
}

function appendCell(data, cell) {
    var index = data.length;

    for (var i = 0; i < data.length + 1; i++) {
        if (!data[i]) {
            data[i] = cell;
            index = i;
            break;
        }
    }

    return index;
}

function spanCell(cell, row, startIndex, colSpan) {
    for (var i = 1; i < colSpan; i++) {
        var tmp = {
            borderTop    : cell.borderTop,
            borderRight  : cell.borderRight,
            borderBottom : cell.borderBottom,
            borderLeft   : cell.borderLeft
        };
        insertCellAt(row, tmp, startIndex + i);
    }
}

var SPREADSHEET_FILTERS = function (ref$1) {
  var ref = ref$1.ref;
  var columns = ref$1.columns;
  var generators = ref$1.generators;

  return ("\n<autoFilter ref=\"" + ref + "\">\n  " + (foreach(columns, function (col) { return ("\n    <filterColumn colId=\"" + (col.index) + "\">\n      " + (generators[col.filter](col)) + "\n    </filterColumn>\n  "); })) + "\n</autoFilter>");
};

var SPREADSHEET_CUSTOM_FILTER = function (ref) {
  var logic = ref.logic;
  var criteria = ref.criteria;

  return ("\n<customFilters " + (logic === 'and' ? 'and="1"' : '') + ">\n" + (foreach(criteria, function (f) {
    var op = spreadsheetFilters.customOperator(f);
    var val = spreadsheetFilters.customValue(f);
    return ("<customFilter " + (op ? ("operator=\"" + op + "\"") : '') + " val=\"" + val + "\"/>");
})) + "\n</customFilters>");
};

var SPREADSHEET_DYNAMIC_FILTER = function (ref) {
  var type = ref.type;

  return ("<dynamicFilter type=\"" + (spreadsheetFilters.dynamicFilterType(type)) + "\" />");
};

var SPREADSHEET_TOP_FILTER = function (ref) {
  var type = ref.type;
  var value = ref.value;

  return ("<top10 percent=\"" + (/percent$/i.test(type) ? 1 : 0) + "\"\n       top=\"" + (/^top/i.test(type) ? 1 : 0) + "\"\n       val=\"" + value + "\" />");
};

var SPREADSHEET_VALUE_FILTER = function (ref) {
    var blanks = ref.blanks;
    var values = ref.values;

    return ("<filters " + (blanks ? 'blank="1"' : '') + ">\n    " + (foreach(values, function (value) { return ("\n      <filter val=\"" + value + "\" />"); })) + "\n  </filters>");
};

function spreadsheetFilters(filter) {
    return SPREADSHEET_FILTERS({
        ref: filter.ref,
        columns: filter.columns,
        generators: {
            custom  : SPREADSHEET_CUSTOM_FILTER,
            dynamic : SPREADSHEET_DYNAMIC_FILTER,
            top     : SPREADSHEET_TOP_FILTER,
            value   : SPREADSHEET_VALUE_FILTER
        }
    });
}

spreadsheetFilters.customOperator = function(f) {
    return {
        eq  : "equal",
        gt  : "greaterThan",
        gte : "greaterThanOrEqual",
        lt  : "lessThan",
        lte : "lessThanOrEqual",
        ne  : "notEqual",

        // These are not in the spec, but seems to be how Excel does
        // it (see customValue below).  For the non-negated versions,
        // the operator attribute is missing completely.
        doesnotstartwith: "notEqual",
        doesnotendwith: "notEqual",
        doesnotcontain: "notEqual",
        doesnotmatch: "notEqual"
    }[f.operator.toLowerCase()];
};

function quoteSheet(name) {
    if (/^\'/.test(name)) { // assume already quoted, the Spreadsheet does it.
        return name;
    }
    if (/^[a-z_][a-z0-9_]*$/i.test(name)) {
        return name;        // no need to quote it
    }
    return "'" + name.replace(/\x27/g, "\\'") + "'";
}

spreadsheetFilters.customValue = function(f) {
    function esc(str) {
        return str.replace(/([*?])/g, "~$1");
    }

    switch (f.operator.toLowerCase()) {
        case "startswith":
        case "doesnotstartwith":
            return esc(f.value) + "*";

        case "endswith":
        case "doesnotendwith":
            return "*" + esc(f.value);

        case "contains":
        case "doesnotcontain":
            return "*" + esc(f.value) + "*";

        default:
            return f.value;
    }
};

spreadsheetFilters.dynamicFilterType = function(type) {
    return {
        quarter1  : "Q1",
        quarter2  : "Q2",
        quarter3  : "Q3",
        quarter4  : "Q4",
        january   : "M1",
        february  : "M2",
        march     : "M3",
        april     : "M4",
        may       : "M5",
        june      : "M6",
        july      : "M7",
        august    : "M8",
        september : "M9",
        october   : "M10",
        november  : "M11",
        december  : "M12"
    }[type.toLowerCase()] || type;
};

exports.ExcelExporter = ExcelExporter;
exports.IntlService = IntlService;
exports.TemplateService = TemplateService;
exports.Workbook = Workbook;
exports.Worksheet = Worksheet;
//# sourceMappingURL=main.js.map

//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"file":"main.js","sources":["src/services/template-service.js","src/utils/getter.js","src/utils/map.js","src/excel-exporter.js","src/services/intl-service.js","src/utils/create-zip.js","src/utils/time.js","src/ooxml.js"],"sourcesContent":["let current = {\n    compile: function(template) {\n        return template;\n    }\n};\n\nclass TemplateService {\n    static register(userImplementation) {\n        current = userImplementation;\n    }\n\n    static compile(template) {\n        return current.compile(template);\n    }\n}\n\nexport default TemplateService;","const FIELD_REGEX = /\\[(?:(\\d+)|['\"](.*?)['\"])\\]|((?:(?!\\[.*?\\]|\\.).)+)/g;\nconst getterCache = {};\nconst UNDEFINED = 'undefined';\n\ngetterCache[UNDEFINED] = function(obj) {\n    return obj;\n};\n\nexport default function getter(field) {\n    if (getterCache[field]) {\n        return getterCache[field];\n    }\n\n    const fields = [];\n    field.replace(FIELD_REGEX, function(match, index, indexAccessor, field) {\n        fields.push(typeof index !== UNDEFINED ? index : (indexAccessor || field));\n    });\n\n    getterCache[field] = function(obj) {\n        let result = obj;\n        for (let idx = 0; idx < fields.length && result; idx++) {\n            result = result[fields[idx]];\n        }\n\n        return result;\n    };\n\n    return getterCache[field];\n}","export default function map(array, func) {\n    return array.reduce((result, el, i) => {\n        const val = func(el, i);\n        if (val != null) {\n            result.push(val);\n        }\n        return result;\n    }, []);\n}","import TemplateService from './services/template-service';\nimport getter from './utils/getter';\nimport map from './utils/map';\n\nfunction defaultGroupHeaderTemplate(data) {\n    return `${ data.title }: ${ data.value }`;\n}\n\nfunction createArray(length, callback) {\n    const result = [];\n\n    for (let idx = 0; idx < length; idx++) {\n        result.push(callback(idx));\n    }\n\n    return result;\n}\n\nfunction defaultItemId(item) {\n    return item.id;\n}\n\nclass ExcelExporter {\n    constructor(options) {\n        options.columns = this._trimColumns(options.columns || []);\n\n        this.allColumns = map(this._leafColumns(options.columns || []), this._prepareColumn);\n\n        this.columns = this._visibleColumns(this.allColumns);\n\n        this.options = options;\n        this.data = options.data || [];\n        this.aggregates = options.aggregates || {};\n        this.groups = [].concat(options.groups || []);\n        this.hasGroups = this.groups.length > 0;\n        this.hierarchy = options.hierarchy;\n        this.hasGroupHeaderColumn = this.columns.some(column => column.groupHeaderColumnTemplate);\n        this.collapsible = this.options.collapsible;\n    }\n\n    workbook() {\n        const workbook = {\n            sheets: [ {\n                columns: this._columns(),\n                rows: this.hierarchy ? this._hierarchyRows() : this._rows(),\n                freezePane: this._freezePane(),\n                filter: this._filter()\n            } ]\n        };\n\n        return workbook;\n    }\n\n    _trimColumns(columns) {\n        return columns.filter((column) => {\n            let result = Boolean(column.field);\n\n            if (!result && column.columns) {\n                result = this._trimColumns(column.columns).length > 0;\n            }\n\n            return result;\n        });\n    }\n\n    _leafColumns(columns) {\n        let result = [];\n\n        for (let idx = 0; idx < columns.length; idx++) {\n            if (!columns[idx].columns) {\n                result.push(columns[idx]);\n            } else {\n                result = result.concat(this._leafColumns(columns[idx].columns));\n            }\n        }\n\n        return result;\n    }\n\n    _prepareColumn(column) {\n        if (!column.field) {\n            return null;\n        }\n\n        let value = function(dataItem) {\n            return getter(column.field, true)(dataItem);\n        };\n\n        let values = null;\n\n        if (column.values) {\n            values = {};\n\n            column.values.forEach(function(item) {\n                values[item.value] = item.text;\n            });\n\n            value = function(dataItem) {\n                return values[getter(column.field, true)(dataItem)];\n            };\n        }\n\n        return Object.assign({}, column, {\n            value: value,\n            values: values,\n            groupHeaderTemplate: column.groupHeaderTemplate ? TemplateService.compile(column.groupHeaderTemplate) : defaultGroupHeaderTemplate,\n            groupHeaderColumnTemplate: column.groupHeaderColumnTemplate ? TemplateService.compile(column.groupHeaderColumnTemplate) : null,\n            groupFooterTemplate: column.groupFooterTemplate ? TemplateService.compile(column.groupFooterTemplate) : null,\n            footerTemplate: column.footerTemplate ? TemplateService.compile(column.footerTemplate) : null\n        });\n    }\n\n    _filter() {\n        if (!this.options.filterable) {\n            return null;\n        }\n\n        const depth = this._depth();\n\n        return {\n            from: depth,\n            to: depth + this.columns.length - 1\n        };\n    }\n\n    _createPaddingCells(length) {\n        return createArray(length, () => Object.assign({\n            background: \"#dfdfdf\",\n            color: \"#333\"\n        }, this.options.paddingCellOptions));\n    }\n\n    _dataRow(dataItem, level, depth) {\n        let cells = this._createPaddingCells(level);\n\n        // grouped\n        if (this.hasGroups && depth && dataItem.items) {\n            cells = cells.concat(this._groupHeaderCells(dataItem, level, depth));\n            const rows = this._dataRows(dataItem.items, level + 1);\n\n            rows.unshift({\n                type: \"group-header\",\n                cells: cells,\n                level: this.collapsible ? level : null\n            });\n\n            return rows.concat(this._footer(dataItem, level));\n        }\n\n        const dataCells = [];\n\n        for (let cellIdx = 0; cellIdx < this.columns.length; cellIdx++) {\n            dataCells[cellIdx] = this._cell(dataItem, this.columns[cellIdx]);\n        }\n\n        if (this.hierarchy) {\n            dataCells[0].colSpan = depth - level + 1;\n        }\n\n        return [ {\n            type: \"data\",\n            cells: cells.concat(dataCells),\n            level: this.collapsible ? level : null\n        } ];\n    }\n\n    _groupHeaderCells(dataItem, level, depth) {\n        const cells = [];\n\n        const column = this.allColumns.filter(function(column) {\n            return column.field === dataItem.field;\n        })[0] || {};\n\n        const title = column && column.title ? column.title : dataItem.field;\n        const template = column ? column.groupHeaderTemplate || column.groupHeaderColumnTemplate : null;\n        const group = Object.assign({\n            title: title,\n            field: dataItem.field,\n            value: column && column.values ? column.values[dataItem.value] : dataItem.value,\n            aggregates: dataItem.aggregates,\n            items: dataItem.items\n        }, dataItem.aggregates[dataItem.field]);\n\n        const value = template ? template(group) : `${ title }: ${ dataItem.value }`;\n\n        cells.push(Object.assign({\n            value: value,\n            background: \"#dfdfdf\",\n            color: \"#333\",\n            colSpan: (this.hasGroupHeaderColumn ? 1 : this.columns.length) + depth - level\n        }, column.groupHeaderCellOptions));\n\n        if (this.hasGroupHeaderColumn) {\n            this.columns.forEach(function(column, index) {\n                if (index > 0) {\n                    cells.push(Object.assign({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: column.groupHeaderColumnTemplate ?\n                            column.groupHeaderColumnTemplate(Object.assign({ group: group }, group, dataItem.aggregates[column.field])) :\n                            undefined\n                    }, column.groupHeaderCellOptions));\n                }\n            });\n        }\n\n        return cells;\n    }\n\n    _dataRows(dataItems, level) {\n        const depth = this._depth();\n        const rows = [];\n\n        for (let idx = 0; idx < dataItems.length; idx++) {\n            rows.push.apply(rows, this._dataRow(dataItems[idx], level, depth));\n        }\n\n        return rows;\n    }\n\n    _hierarchyRows() {\n        const depth = this._depth();\n        const data = this.data;\n        const itemLevel = this.hierarchy.itemLevel;\n        const itemId = this.hierarchy.itemId || defaultItemId;\n        const hasFooter = this._hasFooterTemplate();\n        const rows = [];\n        const parents = [];\n        let previousLevel = 0;\n        let previousItemId;\n\n        if (!hasFooter) {\n            this.collapsible = false;\n        }\n\n        for (let idx = 0; idx < data.length; idx++) {\n            const item = data[idx];\n            const level = itemLevel(item, idx);\n\n            if (hasFooter) {\n                if (level > previousLevel) {\n                    parents.push({ id: previousItemId, level: previousLevel });\n                } else if (level < previousLevel) {\n                    rows.push.apply(rows, this._hierarchyFooterRows(parents, level, depth));\n                }\n\n                previousLevel = level;\n                previousItemId = itemId(item, idx);\n            }\n\n            rows.push.apply(rows, this._dataRow(item, level + 1, depth));\n        }\n\n        if (hasFooter) {\n            rows.push.apply(rows, this._hierarchyFooterRows(parents, 0, depth));\n\n            const rootAggregate = data.length ? this.aggregates[data[0].parentId] : {};\n            rows.push(this._hierarchyFooter(rootAggregate, 0, depth));\n        }\n\n        this._prependHeaderRows(rows);\n\n        return rows;\n    }\n\n    _hierarchyFooterRows(parents, currentLevel, depth) {\n        const rows = [];\n        while (parents.length && parents[parents.length - 1].level >= currentLevel) {\n            const parent = parents.pop();\n            rows.push(this._hierarchyFooter(this.aggregates[parent.id], parent.level + 1, depth));\n        }\n\n        return rows;\n    }\n\n    _hasFooterTemplate() {\n        const columns = this.columns;\n        for (let idx = 0; idx < columns.length; idx++) {\n            if (columns[idx].footerTemplate) {\n                return true;\n            }\n        }\n    }\n\n    _hierarchyFooter(aggregates, level, depth) {\n        const cells = this.columns.map(function(column, index) {\n            const colSpan = index ? 1 : depth - level + 1;\n            if (column.footerTemplate) {\n                const fieldAggregates = (aggregates || {})[column.field];\n                return Object.assign({\n                    background: \"#dfdfdf\",\n                    color: \"#333\",\n                    colSpan: colSpan,\n                    value: column.footerTemplate(Object.assign({ aggregates: aggregates }, fieldAggregates))\n                }, column.footerCellOptions);\n            }\n\n            return Object.assign({\n                background: \"#dfdfdf\",\n                color: \"#333\",\n                colSpan: colSpan\n            }, column.footerCellOptions);\n        });\n\n        return {\n            type: \"footer\",\n            cells: this._createPaddingCells(level).concat(cells),\n            level: this.collapsible ? level : null\n        };\n    }\n\n    _footer(dataItem, level) {\n        const rows = [];\n        const footer = this.columns.some(column => column.groupFooterTemplate);\n\n        let templateData, group;\n        if (footer) {\n            group = {\n                group: { items: dataItem.items,\n                    field: dataItem.field,\n                    value: dataItem.value }\n            };\n            templateData = {};\n            Object.keys(dataItem.aggregates).forEach(key => {\n                templateData[key] = Object.assign({}, dataItem.aggregates[key], group);\n            });\n        }\n\n        const cells = this.columns.map((column) => {\n            if (column.groupFooterTemplate) {\n                let data = Object.assign({}, templateData, dataItem.aggregates[column.field], group);\n                return Object.assign({\n                    background: \"#dfdfdf\",\n                    color: \"#333\",\n                    value: column.groupFooterTemplate(data)\n                }, column.groupFooterCellOptions);\n            }\n\n            return Object.assign({\n                background: \"#dfdfdf\",\n                color: \"#333\"\n            }, column.groupFooterCellOptions);\n        });\n\n        if (footer) {\n            rows.push({\n                type: \"group-footer\",\n                cells: this._createPaddingCells(this.groups.length).concat(cells),\n                level: this.collapsible ? level : null\n            });\n        }\n\n        return rows;\n    }\n\n    _isColumnVisible(column) {\n        return this._visibleColumns([ column ]).length > 0 && (column.field || column.columns);\n    }\n\n    _visibleColumns(columns) {\n        return columns.filter((column) => {\n            let exportable = column.exportable;\n            if (typeof exportable === 'object') {\n                exportable = column.exportable.excel;\n            }\n\n            const visibleInExport = !column.hidden && exportable !== false;\n            const visibleInExportOnly = column.hidden && exportable === true;\n            let visible = visibleInExport || visibleInExportOnly;\n            if (visible && column.columns) {\n                visible = this._visibleColumns(column.columns).length > 0;\n            }\n            return visible;\n        });\n    }\n\n    _headerRow(row, groups) {\n        const headers = row.cells.map(function(cell) {\n            return Object.assign(cell, {\n                colSpan: cell.colSpan > 1 ? cell.colSpan : 1,\n                rowSpan: row.rowSpan > 1 && !cell.colSpan ? row.rowSpan : 1\n            });\n        });\n\n        if (this.hierarchy && headers[0].firstCell) {\n            headers[0].colSpan += this._depth();\n        }\n\n        return {\n            type: \"header\",\n            cells: createArray(groups.length, () => Object.assign({\n                background: \"#7a7a7a\",\n                color: \"#fff\"\n            }, this.options.headerPaddingCellOptions)).concat(headers)\n        };\n    }\n\n    _prependHeaderRows(rows) {\n        const groups = this.groups;\n\n        const headerRows = [ { rowSpan: 1, cells: [], index: 0 } ];\n\n        this._prepareHeaderRows(headerRows, this.options.columns);\n\n        for (let idx = headerRows.length - 1; idx >= 0; idx--) {\n            rows.unshift(this._headerRow(headerRows[idx], groups));\n        }\n    }\n\n    _prepareHeaderRows(rows, columns, parentCell, parentRow) {\n        const row = parentRow || rows[rows.length - 1];\n        let childRow = rows[row.index + 1];\n        let totalColSpan = 0;\n\n        for (let idx = 0; idx < columns.length; idx++) {\n            const column = columns[idx];\n            if (this._isColumnVisible(column)) {\n\n                const cell = Object.assign({\n                    background: \"#7a7a7a\",\n                    color: \"#fff\",\n                    value: column.title || column.field,\n                    colSpan: 0,\n                    firstCell: idx === 0 && (!parentCell || parentCell.firstCell)\n                }, column.headerCellOptions);\n                row.cells.push(cell);\n\n                if (column.columns && column.columns.length) {\n                    if (!childRow) {\n                        childRow = { rowSpan: 0, cells: [], index: rows.length };\n                        rows.push(childRow);\n                    }\n                    cell.colSpan = this._trimColumns(this._visibleColumns(column.columns)).length;\n                    this._prepareHeaderRows(rows, column.columns, cell, childRow);\n                    totalColSpan += cell.colSpan - 1;\n                    row.rowSpan = rows.length - row.index;\n                }\n            }\n        }\n\n        if (parentCell) {\n            parentCell.colSpan += totalColSpan;\n        }\n    }\n\n    _rows() {\n        const rows = this._dataRows(this.data, 0);\n\n        if (this.columns.length) {\n            this._prependHeaderRows(rows);\n            let footer = false;\n\n            const cells = this.columns.map((column) => {\n                if (column.footerTemplate) {\n                    footer = true;\n\n                    return Object.assign({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: column.footerTemplate(Object.assign({}, this.aggregates, this.aggregates[column.field]))\n                    }, column.footerCellOptions);\n                }\n\n                return Object.assign({\n                    background: \"#dfdfdf\",\n                    color: \"#333\"\n                }, column.footerCellOptions);\n            });\n\n            if (footer) {\n                rows.push({\n                    type: \"footer\",\n                    cells: this._createPaddingCells(this.groups.length).concat(cells)\n                });\n            }\n        }\n\n        return rows;\n    }\n\n    _headerDepth(columns) {\n        const result = 1;\n        let max = 0;\n\n        for (let idx = 0; idx < columns.length; idx++) {\n            if (columns[idx].columns) {\n                const temp = this._headerDepth(columns[idx].columns);\n                if (temp > max) {\n                    max = temp;\n                }\n            }\n        }\n        return result + max;\n    }\n\n    _freezePane() {\n        const columns = this._visibleColumns(this.options.columns || []);\n\n        const colSplit = this._visibleColumns(this._trimColumns(this._leafColumns(columns.filter(function(column) {\n            return column.locked;\n        })))).length;\n\n        return {\n            rowSplit: this._headerDepth(columns),\n            colSplit: colSplit ? colSplit + this.groups.length : 0\n        };\n    }\n\n    _cell(dataItem, column) {\n        return Object.assign({\n            value: column.value(dataItem)\n        }, column.cellOptions);\n    }\n\n    _depth() {\n        let depth = 0;\n\n        if (this.hierarchy) {\n            depth = this.hierarchy.depth;\n        } else {\n            depth = this.groups.length;\n        }\n\n        return depth;\n    }\n\n    _columns() {\n        const depth = this._depth();\n        const columns = createArray(depth, () => ({ width: 20 }));\n\n        return columns.concat(this.columns.map(function(column) {\n            return {\n                width: parseInt(column.width, 10),\n                autoWidth: column.width ? false : true\n            };\n        }));\n    }\n}\n\nexport default ExcelExporter;\n","let current = {\n    toString: (value) => value\n};\n\nclass IntlService {\n    static register(userImplementation) {\n        current = userImplementation;\n    }\n\n    static toString(value, format) {\n        return current.toString(value, format);\n    }\n}\n\nexport default IntlService;","import JSZip from '@progress/jszip-esm';\n\nexport default function createZip() {\n    return new JSZip();\n}\n","// date packing utilities from Kendo Spreadsheet\n\n// Julian days algorithms from http://www.hermetic.ch/cal_stud/jdn.htm#comp\nfunction dateToJulianDays(y, m, d) {\n    return ((1461 * (y + 4800 + ((m - 13) / 12 | 0))) / 4 | 0) +\n        ((367 * (m - 1 - 12 * ((m - 13) / 12 | 0))) / 12 | 0) -\n        ((3 * (((y + 4900 + ((m - 13) / 12 | 0)) / 100 | 0))) / 4 | 0) +\n        d - 32075;\n}\n\n// This uses the Google Spreadsheet approach: treat 1899-12-31 as day 1, allowing to avoid\n// implementing the \"Leap Year Bug\" yet still be Excel compatible for dates starting 1900-03-01.\nconst BASE_DATE = dateToJulianDays(1900, 0, -1);\n\nfunction packDate(year, month, date) {\n    return dateToJulianDays(year, month, date) - BASE_DATE;\n}\n\nfunction packTime(hh, mm, ss, ms) {\n    return (hh + (mm + (ss + ms / 1000) / 60) / 60) / 24;\n}\n\nexport default function dateToSerial(date) {\n    const time = packTime(date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n        date.getMilliseconds());\n    const serial = packDate(date.getFullYear(),\n        date.getMonth(),\n        date.getDate());\n    return serial < 0 ? serial - 1 + time : serial + time;\n}\n","import map from './utils/map';\nimport createZip from './utils/create-zip';\nimport IntlService from './services/intl-service';\nimport dateToSerial from './utils/time';\n\nconst MIME_TYPE = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\nconst DATA_URL_PREFIX = `data:${MIME_TYPE};base64,`;\nconst DATA_URL_OPTIONS = { compression: \"DEFLATE\", type: \"base64\" };\nconst BLOB_OPTIONS = { compression: \"DEFLATE\", type: \"blob\" };\nconst ARRAYBUFFER_OPTIONS = { compression: \"DEFLATE\", type: \"arraybuffer\" };\n\n/* eslint-disable indent */\n\nfunction toDataURI(content) {\n    return DATA_URL_PREFIX + content;\n}\n\nfunction indexOf(thing, array) {\n    return array.indexOf(thing);\n}\n\nconst parseJSON = JSON.parse.bind(JSON);\n\nfunction ESC(val) {\n    return String(val)\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\\\"/g, \"&quot;\")\n        .replace(/\\'/g, \"&#39;\");\n}\n\nfunction repeat(count, func) {\n    let str = \"\";\n    for (let i = 0; i < count; ++i) {\n        str += func(i);\n    }\n    return str;\n}\n\nfunction foreach(arr, func) {\n    let str = \"\";\n    if (arr != null) {\n        if (Array.isArray(arr)) {\n            for (let i = 0; i < arr.length; ++i) {\n                str += func(arr[i], i);\n            }\n        } else if (typeof arr == \"object\") {\n            Object.keys(arr).forEach((key, i) => {\n                str += func(arr[key], key, i);\n            });\n        }\n    }\n    return str;\n}\n\nconst XMLHEAD = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r';\n\nconst RELS = `${XMLHEAD}\n            <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n               <Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\"/>\n               <Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\"/>\n               <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\"/>\n            </Relationships>`;\n\nconst CORE = ({ creator, lastModifiedBy, created, modified }) => `${XMLHEAD}\n <cp:coreProperties xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\"\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\"\n   xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n   <dc:creator>${ESC(creator)}</dc:creator>\n   <cp:lastModifiedBy>${ESC(lastModifiedBy)}</cp:lastModifiedBy>\n   <dcterms:created xsi:type=\"dcterms:W3CDTF\">${ESC(created)}</dcterms:created>\n   <dcterms:modified xsi:type=\"dcterms:W3CDTF\">${ESC(modified)}</dcterms:modified>\n</cp:coreProperties>`;\n\nconst APP = ({ sheets }) => `${XMLHEAD}\n<Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\" xmlns:vt=\"http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes\">\n  <Application>Microsoft Excel</Application>\n  <DocSecurity>0</DocSecurity>\n  <ScaleCrop>false</ScaleCrop>\n  <HeadingPairs>\n    <vt:vector size=\"2\" baseType=\"variant\">\n      <vt:variant>\n        <vt:lpstr>Worksheets</vt:lpstr>\n      </vt:variant>\n      <vt:variant>\n        <vt:i4>${sheets.length}</vt:i4>\n      </vt:variant>\n    </vt:vector>\n  </HeadingPairs>\n  <TitlesOfParts>\n    <vt:vector size=\"${sheets.length}\" baseType=\"lpstr\">${\n      foreach(sheets, (sheet, i) =>\n        sheet.options.title\n          ? `<vt:lpstr>${ESC(sheet.options.title)}</vt:lpstr>`\n          : `<vt:lpstr>Sheet${i + 1}</vt:lpstr>`\n      )\n    }</vt:vector>\n  </TitlesOfParts>\n  <LinksUpToDate>false</LinksUpToDate>\n  <SharedDoc>false</SharedDoc>\n  <HyperlinksChanged>false</HyperlinksChanged>\n  <AppVersion>14.0300</AppVersion>\n</Properties>`;\n\nconst CONTENT_TYPES = ({ sheetCount, commentFiles, drawingFiles }) => `${XMLHEAD}\n<Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\">\n  <Default Extension=\"png\" ContentType=\"image/png\"/>\n  <Default Extension=\"gif\" ContentType=\"image/gif\"/>\n  <Default Extension=\"jpg\" ContentType=\"image/jpeg\"/>\n  <Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" />\n  <Default Extension=\"xml\" ContentType=\"application/xml\" />\n  <Default Extension=\"vml\" ContentType=\"application/vnd.openxmlformats-officedocument.vmlDrawing\"/>\n  <Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" />\n  <Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\"/>\n  <Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\"/>\n  ${repeat(sheetCount, idx =>\n    `<Override PartName=\"/xl/worksheets/sheet${idx + 1}.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />`)}\n  ${foreach(commentFiles, filename =>\n    `<Override PartName=\"/xl/${filename}\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\"/>`)}\n  ${foreach(drawingFiles, filename =>\n    `<Override PartName=\"/xl/drawings/${filename}\" ContentType=\"application/vnd.openxmlformats-officedocument.drawing+xml\"/>`)}\n  <Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />\n  <Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" />\n</Types>`;\n\nconst WORKBOOK = ({ sheets, filterNames, userNames }) => `${XMLHEAD}\n<workbook xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\">\n  <fileVersion appName=\"xl\" lastEdited=\"5\" lowestEdited=\"5\" rupBuild=\"9303\" />\n  <workbookPr defaultThemeVersion=\"124226\" />\n  <bookViews>\n    <workbookView xWindow=\"240\" yWindow=\"45\" windowWidth=\"18195\" windowHeight=\"7995\" />\n  </bookViews>\n  <sheets>\n  ${foreach(sheets, ({ options }, i) => {\n    const name = options.name || options.title || `Sheet${i + 1}`;\n    const state = options.state || 'visible';\n    return `<sheet name=\"${ESC(name)}\" state=\"${state}\" sheetId=\"${i + 1}\" r:id=\"rId${i + 1}\" />`;\n  })}\n  </sheets>\n  ${filterNames.length || userNames.length ? `\n    <definedNames>\n      ${foreach(filterNames, (f) => `\n         <definedName name=\"_xlnm._FilterDatabase\" hidden=\"1\" localSheetId=\"${f.localSheetId}\">${ESC(quoteSheet(f.name))}!${ESC(f.from)}:${ESC(f.to)}</definedName>`)}\n      ${foreach(userNames, (f) => `\n         <definedName name=\"${f.name}\" hidden=\"${f.hidden ? 1 : 0}\" ${f.localSheetId != null ? `localSheetId=\"${f.localSheetId}\"` : ''}>${ESC(f.value)}</definedName>`)}\n    </definedNames>` : ''}\n  <calcPr fullCalcOnLoad=\"1\" calcId=\"145621\" />\n</workbook>`;\n\nconst WORKSHEET = ({\n    frozenColumns,\n    frozenRows,\n    columns,\n    defaults,\n    data,\n    index,\n    mergeCells,\n    autoFilter,\n    filter,\n    showGridLines,\n    hyperlinks,\n    validations,\n    defaultCellStyleId,\n    rtl,\n    legacyDrawing,\n    drawing,\n    lastRow,\n    lastCol,\n    hasDisabledCells,\n}) => `${XMLHEAD}\n<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" mc:Ignorable=\"x14ac\">\n   ${lastRow && lastCol ? `<dimension ref=\"A1:${ref(lastRow - 1, lastCol - 1)}\" />` : \"\"}\n\n   <sheetViews>\n     <sheetView ${ rtl ? 'rightToLeft=\"1\"' : '' } ${index === 0 ? 'tabSelected=\"1\"' : ''} workbookViewId=\"0\" ${showGridLines === false ? 'showGridLines=\"0\"' : ''}>\n     ${frozenRows || frozenColumns ? `\n       <pane state=\"frozen\"\n         ${frozenColumns ? `xSplit=\"${frozenColumns}\"` : ''}\n         ${frozenRows ? `ySplit=\"${frozenRows}\"` : ''}\n         topLeftCell=\"${String.fromCharCode(65 + (frozenColumns || 0)) + ((frozenRows || 0) + 1)}\"\n       />` : ''}\n     </sheetView>\n   </sheetViews>\n\n   <sheetFormatPr x14ac:dyDescent=\"0.25\" ${!defaults.skipCustomHeight ? 'customHeight=\"1\"' : ''} defaultRowHeight=\"${defaults.rowHeight ? defaults.rowHeight * 0.75 : 15}\"\n     ${defaults.columnWidth ? `defaultColWidth=\"${toWidth(defaults.columnWidth)}\"` : ''} />\n\n   ${defaultCellStyleId != null || (columns && columns.length > 0) ? `\n     <cols>\n       ${!columns || !columns.length ? `\n         <col min=\"1\" max=\"16384\" style=\"${defaultCellStyleId}\"\n              ${defaults.columnWidth ? `width=\"${toWidth(defaults.columnWidth)}\"` : ''} /> ` : ''}\n       ${foreach(columns, (column, ci) => {\n         const columnIndex = typeof column.index === \"number\" ? column.index + 1 : (ci + 1);\n         if (column.width === 0) {\n           return `<col ${defaultCellStyleId != null ? `style=\"${defaultCellStyleId}\"` : ''}\n                        min=\"${columnIndex}\" max=\"${columnIndex}\" hidden=\"1\" customWidth=\"1\" />`;\n         }\n         return `<col ${defaultCellStyleId != null ? `style=\"${defaultCellStyleId}\"` : ''}\n                      min=\"${columnIndex}\" max=\"${columnIndex}\" customWidth=\"1\"\n                      ${column.autoWidth\n                          ? `width=\"${((column.width * 7 + 5) / 7 * 256) / 256}\" bestFit=\"1\"`\n                          : `width=\"${toWidth(column.width)}\"`} />`;\n       })}\n     </cols>` : ''}\n\n   <sheetData>\n     ${foreach(data, (row, ri) => {\n       const rowIndex = typeof row.index === \"number\" ? row.index + 1 : (ri + 1);\n       return `\n         <row r=\"${rowIndex}\" x14ac:dyDescent=\"0.25\"\n              ${row.level ? `outlineLevel=\"${row.level}\"` : ''}\n              ${row.height === 0 ? 'hidden=\"1\"'\n                                 : row.height ? `ht=\"${toHeight(row.height)}\" customHeight=\"1\"` : \"\"}>\n           ${foreach(row.data, (cell) => `\n             <c r=\"${cell.ref}\" ${cell.style ? `s=\"${cell.style}\"` : ''} ${cell.type ? `t=\"${cell.type}\"` : ''}>\n               ${cell.formula != null ? writeFormula(cell.formula) : ''}\n               ${cell.value != null ? `<v>${ESC(cell.value)}</v>` : ''}\n             </c>`)}\n         </row>\n       `;\n})}\n   </sheetData>\n\n   ${hasDisabledCells ? `<sheetProtection sheet=\"1\" objects=\"1\" scenarios=\"1\"/>` : ''}\n\n   ${autoFilter ? `<autoFilter ref=\"${autoFilter.from}:${autoFilter.to}\"/>`\n                : filter ? spreadsheetFilters(filter) : ''}\n\n   ${mergeCells.length ? `\n     <mergeCells count=\"${mergeCells.length}\">\n       ${foreach(mergeCells, (ref) => `<mergeCell ref=\"${ref}\"/>`)}\n     </mergeCells>` : ''}\n\n   ${validations.length ? `\n     <dataValidations>\n       ${foreach(validations, (val) => `\n         <dataValidation sqref=\"${val.sqref.join(\" \")}\"\n                         showErrorMessage=\"${val.showErrorMessage}\"\n                         type=\"${ESC(val.type)}\"\n                         ${ val.type !== \"list\" ? `operator=\"${ESC(val.operator)}\"` : ''}\n                         allowBlank=\"${val.allowBlank}\"\n                         showDropDown=\"${val.showDropDown}\"\n                         ${val.error ? `error=\"${ESC(val.error)}\"` : ''}\n                         ${val.errorTitle ? `errorTitle=\"${ESC(val.errorTitle)}\"` : ''}>\n           ${val.formula1 ? `<formula1>${ESC(val.formula1)}</formula1>` : ''}\n           ${val.formula2 ? `<formula2>${ESC(val.formula2)}</formula2>` : ''}\n         </dataValidation>`)}\n     </dataValidations>` : ''}\n\n   ${hyperlinks.length ? `\n     <hyperlinks>\n       ${foreach(hyperlinks, (link) => `\n         <hyperlink ref=\"${link.ref}\" r:id=\"${link.rId}\"/>`)}\n     </hyperlinks>` : ''}\n\n   <pageMargins left=\"0.7\" right=\"0.7\" top=\"0.75\" bottom=\"0.75\" header=\"0.3\" footer=\"0.3\" />\n   ${drawing ? `<drawing r:id=\"${drawing}\"/>` : ''}\n   ${legacyDrawing ? `<legacyDrawing r:id=\"${legacyDrawing}\"/>` : ''}\n</worksheet>`;\n\nconst WORKBOOK_RELS = ({ count }) => `${XMLHEAD}\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n  ${repeat(count, (idx) => `\n    <Relationship Id=\"rId${idx + 1}\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet${idx + 1}.xml\" />`)}\n  <Relationship Id=\"rId${count + 1}\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />\n  <Relationship Id=\"rId${count + 2}\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />\n</Relationships>`;\n\nconst WORKSHEET_RELS = ({ hyperlinks, comments, sheetIndex, drawings }) => `${XMLHEAD}\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n  ${foreach(hyperlinks, (link) => `\n    <Relationship Id=\"${link.rId}\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"${ESC(link.target)}\" TargetMode=\"External\" />`)}\n  ${!comments.length ? '' : `\n    <Relationship Id=\"comment${sheetIndex}\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\" Target=\"../comments${sheetIndex}.xml\"/>\n    <Relationship Id=\"vml${sheetIndex}\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\" Target=\"../drawings/vmlDrawing${sheetIndex}.vml\"/>`}\n  ${!drawings.length ? '' : `\n    <Relationship Id=\"drw${sheetIndex}\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\" Target=\"../drawings/drawing${sheetIndex}.xml\"/>`}\n</Relationships>`;\n\nconst COMMENTS_XML = ({ comments }) => `${XMLHEAD}\n<comments xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">\n  <authors>\n    <author></author>\n  </authors>\n  <commentList>\n    ${foreach(comments, comment => `\n      <comment ref=\"${comment.ref}\" authorId=\"0\">\n        <text>\n          <r>\n            <rPr>\n              <sz val=\"8\"/>\n              <color indexed=\"81\"/>\n              <rFont val=\"Tahoma\"/>\n              <charset val=\"1\"/>\n            </rPr>\n            <t>${ESC(comment.text)}</t>\n          </r>\n        </text>\n      </comment>`)}\n  </commentList>\n</comments>`;\n\nconst LEGACY_DRAWING = ({ comments }) => `\\\n<xml xmlns:v=\"urn:schemas-microsoft-com:vml\"\n     xmlns:o=\"urn:schemas-microsoft-com:office:office\"\n     xmlns:x=\"urn:schemas-microsoft-com:office:excel\">\n  <v:shapetype coordsize=\"21600,21600\" id=\"_x0000_t202\" path=\"m,l,21600r21600,l21600,xe\">\n    <v:stroke joinstyle=\"miter\"/>\n    <v:path gradientshapeok=\"t\" o:connecttype=\"rect\"/>\n  </v:shapetype>\n  ${foreach(comments, comment => `\n    <v:shape type=\"#_x0000_t202\" style=\"visibility: hidden\" fillcolor=\"#ffffe1\" o:insetmode=\"auto\">\n      <v:shadow on=\"t\" color=\"black\" obscured=\"t\"/>\n      <x:ClientData ObjectType=\"Note\">\n        <x:MoveWithCells/>\n        <x:SizeWithCells/>\n        <x:Anchor>${comment.anchor}</x:Anchor>\n        <x:AutoFill>False</x:AutoFill>\n        <x:Row>${comment.row}</x:Row>\n        <x:Column>${comment.col}</x:Column>\n      </x:ClientData>\n    </v:shape>`)}\n</xml>`;\n\nconst DRAWINGS_XML = (drawings) => `${XMLHEAD}\n<xdr:wsDr xmlns:xdr=\"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing\"\n          xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\"\n          xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\">\n  ${foreach(drawings, (drawing, index) => `\n    <xdr:oneCellAnchor editAs=\"oneCell\">\n      <xdr:from>\n        <xdr:col>${drawing.col}</xdr:col>\n        <xdr:colOff>${drawing.colOffset}</xdr:colOff>\n        <xdr:row>${drawing.row}</xdr:row>\n        <xdr:rowOff>${drawing.rowOffset}</xdr:rowOff>\n      </xdr:from>\n      <xdr:ext cx=\"${drawing.width}\" cy=\"${drawing.height}\" />\n      <xdr:pic>\n        <xdr:nvPicPr>\n          <xdr:cNvPr id=\"${index + 1}\" name=\"Picture ${index + 1}\"/>\n          <xdr:cNvPicPr/>\n        </xdr:nvPicPr>\n        <xdr:blipFill>\n          <a:blip r:embed=\"${drawing.imageId}\"/>\n          <a:stretch>\n            <a:fillRect/>\n          </a:stretch>\n        </xdr:blipFill>\n        <xdr:spPr>\n          <a:prstGeom prst=\"rect\">\n            <a:avLst/>\n          </a:prstGeom>\n        </xdr:spPr>\n      </xdr:pic>\n      <xdr:clientData/>\n    </xdr:oneCellAnchor>`)}\n</xdr:wsDr>`;\n\nconst DRAWINGS_RELS_XML = (rels) => `${XMLHEAD}\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n  ${foreach(rels, rel => `\n    <Relationship Id=\"${rel.rId}\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\" Target=\"${rel.target}\"/>`)}\n</Relationships>`;\n\nconst SHARED_STRINGS = ({ count, uniqueCount, indexes }) => `${XMLHEAD}\n<sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"${count}\" uniqueCount=\"${uniqueCount}\">\n  ${foreach(Object.keys(indexes), (index) => `\n    <si><t xml:space=\"preserve\">${ESC(index.substring(1))}</t></si>`)}\n</sst>`;\n\nconst STYLES = ({\n    formats,\n    fonts,\n    fills,\n    borders,\n    styles\n}) => `${XMLHEAD}\n<styleSheet\n    xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    mc:Ignorable=\"x14ac\"\n    xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">\n  <numFmts count=\"${formats.length}\">\n  ${foreach(formats, (format, fi) => `\n    <numFmt formatCode=\"${ESC(format.format)}\" numFmtId=\"${165 + fi}\" />`)}\n  </numFmts>\n  <fonts count=\"${fonts.length + 1}\" x14ac:knownFonts=\"1\">\n    <font>\n       <sz val=\"11\" />\n       <color theme=\"1\" />\n       <name val=\"Calibri\" />\n       <family val=\"2\" />\n       <scheme val=\"minor\" />\n    </font>\n    ${foreach(fonts, (font) => `\n    <font>\n      ${font.bold ? '<b/>' : ''}\n      ${font.italic ? '<i/>' : ''}\n      ${font.underline ? '<u/>' : ''}\n      <sz val=\"${font.fontSize || 11}\" />\n      ${font.color ? `<color rgb=\"${ESC(font.color)}\" />` : '<color theme=\"1\" />'}\n      ${font.fontFamily ? `\n        <name val=\"${ESC(font.fontFamily)}\" />\n        <family val=\"2\" />\n      ` : `\n        <name val=\"Calibri\" />\n        <family val=\"2\" />\n        <scheme val=\"minor\" />\n      `}\n    </font>`)}\n  </fonts>\n  <fills count=\"${fills.length + 2}\">\n      <fill><patternFill patternType=\"none\"/></fill>\n      <fill><patternFill patternType=\"gray125\"/></fill>\n    ${foreach(fills, (fill) => `\n      ${fill.background ? `\n        <fill>\n          <patternFill patternType=\"solid\">\n              <fgColor rgb=\"${ESC(fill.background)}\"/>\n          </patternFill>\n        </fill>\n      ` : ''}`)}\n  </fills>\n  <borders count=\"${borders.length + 1}\">\n    <border><left/><right/><top/><bottom/><diagonal/></border>\n    ${foreach(borders, borderTemplate)}\n  </borders>\n  <cellStyleXfs count=\"1\">\n    <xf borderId=\"0\" fillId=\"0\" fontId=\"0\" />\n  </cellStyleXfs>\n  <cellXfs count=\"${styles.length + 1}\">\n    <xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />\n    ${foreach(styles, (style) => `\n      <xf xfId=\"0\"\n          ${style.fontId ? `fontId=\"${style.fontId}\" applyFont=\"1\"` : ''}\n          ${style.fillId ? `fillId=\"${style.fillId}\" applyFill=\"1\"` : ''}\n          ${style.numFmtId ? `numFmtId=\"${style.numFmtId}\" applyNumberFormat=\"1\"` : ''}\n          ${style.textAlign || style.verticalAlign || style.wrap ? 'applyAlignment=\"1\"' : ''}\n          ${style.borderId ? `borderId=\"${style.borderId}\" applyBorder=\"1\"` : ''}\n          ${style.disabled != null ? `applyProtection=\"1\"` : ''}>\n        ${style.textAlign || style.verticalAlign || style.wrap ? `\n        <alignment\n          ${style.textAlign ? `horizontal=\"${ESC(style.textAlign)}\"` : ''}\n          ${style.verticalAlign ? `vertical=\"${ESC(style.verticalAlign)}\"` : ''}\n          ${style.indent ? `indent=\"${ESC(style.indent)}\"` : ''}\n          ${style.wrap ? 'wrapText=\"1\"' : ''} />\n        ` : ''}\n        ${style.disabled != null ? `\n        <protection locked=\"${style.disabled ? 1 : 0}\" />\n        ` : ''}\n      </xf>\n    `)}\n  </cellXfs>\n  <cellStyles count=\"1\">\n    <cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/>\n  </cellStyles>\n  <dxfs count=\"0\" />\n  <tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium2\" defaultPivotStyle=\"PivotStyleMedium9\" />\n</styleSheet>`;\n\nfunction writeFormula(formula) {\n    if (typeof formula == \"string\") {\n        return `<f>${ESC(formula)}</f>`;\n    }\n    // array formulas\n    return `<f t=\"array\" ref=\"${formula.ref}\">${ESC(formula.src)}</f>`;\n}\n\nfunction numChar(colIndex) {\n   const letter = Math.floor(colIndex / 26) - 1;\n\n   return (letter >= 0 ? numChar(letter) : \"\") + String.fromCharCode(65 + (colIndex % 26));\n}\n\nfunction ref(rowIndex, colIndex) {\n    return numChar(colIndex) + (rowIndex + 1);\n}\n\nfunction $ref(rowIndex, colIndex) {\n    return \"$\" + numChar(colIndex) + \"$\" + (rowIndex + 1);\n}\n\nfunction filterRowIndex(options) {\n    const frozenRows = options.frozenRows || (options.freezePane || {}).rowSplit || 1;\n    return frozenRows - 1;\n}\n\nfunction toWidth(px) {\n    const maximumDigitWidth = 7;\n    return (px / maximumDigitWidth) - (Math.floor(128 / maximumDigitWidth) / 256);\n}\n\nfunction toHeight(px) {\n    return px * 0.75;\n}\n\nfunction stripFunnyChars(value) {\n    return String(value)\n        .replace(/[\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F]/g, \"\") // leave CRLF in\n        .replace(/\\r?\\n/g, \"\\r\\n\");                   // make sure LF is preceded by CR\n}\n\nclass Worksheet {\n\n    constructor(options, sharedStrings, styles, borders) {\n        this.options = options;\n        this._strings = sharedStrings;\n        this._styles = styles;\n        this._borders = borders;\n        this._validations = {};\n        this._comments = [];\n        this._drawings = options.drawings || [];\n        this._hyperlinks = (this.options.hyperlinks || []).map(\n            (link, i) => Object.assign({}, link, { rId: `link${i}` }));\n    }\n\n    relsToXML() {\n        const hyperlinks = this._hyperlinks;\n        const comments = this._comments;\n        const drawings = this._drawings;\n\n        if (hyperlinks.length || comments.length || drawings.length) {\n            return WORKSHEET_RELS({\n                hyperlinks : hyperlinks,\n                comments   : comments,\n                sheetIndex : this.options.sheetIndex,\n                drawings   : drawings\n            });\n        }\n    }\n\n    toXML(index) {\n        const mergeCells = this.options.mergedCells || [];\n        const rows = this.options.rows || [];\n        const data = inflate(rows, mergeCells);\n\n        this._readCells(data);\n\n        let autoFilter = this.options.filter;\n        let filter;\n        if (autoFilter && (typeof autoFilter.from === \"number\") && (typeof autoFilter.to === \"number\")) {\n            // Grid enables auto filter\n            autoFilter = {\n                from: ref(filterRowIndex(this.options), autoFilter.from),\n                to: ref(filterRowIndex(this.options), autoFilter.to)\n            };\n        } else if (autoFilter && autoFilter.ref && autoFilter.columns) {\n            // this is probably from the Spreadsheet\n            filter = autoFilter;\n            autoFilter = null;\n        }\n\n        const validations = [];\n        for (let i in this._validations) {\n            if (Object.prototype.hasOwnProperty.call(this._validations, i)) {\n                validations.push(this._validations[i]);\n            }\n        }\n\n        let defaultCellStyleId = null;\n        let defaultCellStyle = this.options.defaultCellStyle;\n        if (this._hasDisabledCells) {\n            if (!defaultCellStyle) {\n                defaultCellStyle = { disabled: false };\n            } else {\n                defaultCellStyle = Object.assign({ disabled: false }, defaultCellStyle);\n            }\n        }\n        if (defaultCellStyle) {\n            defaultCellStyleId = this._lookupStyle(defaultCellStyle);\n        }\n\n        const freezePane = this.options.freezePane || {};\n        const defaults = this.options.defaults || {};\n        const lastRow = this.options.rows ? this._getLastRow() : 1;\n        const lastCol = this.options.rows ? this._getLastCol() : 1;\n\n        return WORKSHEET({\n            frozenColumns: this.options.frozenColumns || freezePane.colSplit,\n            frozenRows: this.options.frozenRows || freezePane.rowSplit,\n            columns: this.options.columns,\n            defaults: defaults,\n            data: data,\n            index: index,\n            mergeCells: mergeCells,\n            autoFilter: autoFilter,\n            filter: filter,\n            showGridLines: this.options.showGridLines,\n            hyperlinks: this._hyperlinks,\n            validations: validations,\n            defaultCellStyleId: defaultCellStyleId,\n            rtl: this.options.rtl !== undefined ? this.options.rtl : defaults.rtl,\n            legacyDrawing: this._comments.length ? `vml${this.options.sheetIndex}` : null,\n            drawing: this._drawings.length ? `drw${this.options.sheetIndex}` : null,\n            lastRow: lastRow,\n            lastCol: lastCol,\n            hasDisabledCells: this._hasDisabledCells,\n        });\n    }\n\n    commentsXML() {\n        if (this._comments.length) {\n            return COMMENTS_XML({ comments: this._comments });\n        }\n    }\n\n    drawingsXML(images) {\n        if (this._drawings.length) {\n            let rels = {};\n            let main = this._drawings.map(drw => {\n                let ref = parseRef(drw.topLeftCell);\n                let img = rels[drw.image];\n                if (!img) {\n                    img = rels[drw.image] = {\n                        rId: `img${drw.image}`,\n                        target: images[drw.image].target\n                    };\n                }\n                return {\n                    col       : ref.col,\n                    colOffset : pixelsToExcel(drw.offsetX),\n                    row       : ref.row,\n                    rowOffset : pixelsToExcel(drw.offsetY),\n                    width     : pixelsToExcel(drw.width),\n                    height    : pixelsToExcel(drw.height),\n                    imageId   : img.rId\n                };\n            });\n            return {\n                main: DRAWINGS_XML(main),\n                rels: DRAWINGS_RELS_XML(rels)\n            };\n        }\n    }\n\n    legacyDrawing() {\n        if (this._comments.length) {\n            return LEGACY_DRAWING({ comments: this._comments });\n        }\n    }\n\n    _lookupString(value) {\n        const key = \"$\" + value;\n        const index = this._strings.indexes[key];\n        let result;\n\n        if (index !== undefined) {\n            result = index;\n        } else {\n            result = this._strings.indexes[key] = this._strings.uniqueCount;\n            this._strings.uniqueCount ++;\n        }\n\n        this._strings.count ++;\n\n        return result;\n    }\n\n    _lookupStyle(style) {\n        const json = JSON.stringify(style);\n\n        if (json === \"{}\") {\n            return 0;\n        }\n\n        let index = indexOf(json, this._styles);\n\n        if (index < 0) {\n            index = this._styles.push(json) - 1;\n        }\n\n        // There is one default style\n        return index + 1;\n    }\n\n    _lookupBorder(border) {\n        const json = JSON.stringify(border);\n        if (json === \"{}\") {\n            return;\n        }\n\n        let index = indexOf(json, this._borders);\n        if (index < 0) {\n            index = this._borders.push(json) - 1;\n        }\n\n        // There is one default border\n        return index + 1;\n    }\n\n    _readCells(rowData) {\n        for (let i = 0; i < rowData.length; i++) {\n            const row = rowData[i];\n            const cells = row.cells;\n\n            row.data = [];\n\n            for (let j = 0; j < cells.length; j++) {\n                const cellData = this._cell(cells[j], row.index, j);\n                if (cellData) {\n                    row.data.push(cellData);\n                }\n            }\n        }\n    }\n\n    _cell(data, rowIndex, cellIndex) {\n        if (!data || data === EMPTY_CELL) {\n            return null;\n        }\n\n        let value = data.value;\n\n        let border = {};\n\n        if (data.borderLeft) {\n            border.left = data.borderLeft;\n        }\n\n        if (data.borderRight) {\n            border.right = data.borderRight;\n        }\n\n        if (data.borderTop) {\n            border.top = data.borderTop;\n        }\n\n        if (data.borderBottom) {\n            border.bottom = data.borderBottom;\n        }\n\n        if (data.dBorders) {\n            border.diagonal = data.dBorders;\n        }\n\n        border = this._lookupBorder(border);\n\n        const defStyle = this.options.defaultCellStyle || {};\n        let style = { borderId: border };\n\n        (add => {\n            add(\"color\");\n            add(\"background\");\n            add(\"bold\");\n            add(\"italic\");\n            add(\"underline\");\n            if (!add(\"fontFamily\")) { add(\"fontName\", \"fontFamily\"); }\n            add(\"fontSize\");\n            add(\"format\");\n            if (!add(\"textAlign\")) { add(\"hAlign\", \"textAlign\"); }\n            if (!add(\"verticalAlign\")) { add(\"vAlign\", \"verticalAlign\"); }\n            add(\"wrap\");\n            add(\"indent\");\n            if (!add(\"disabled\")) {\n                if (add(\"enable\")) {\n                    style.disabled = !style.enable;\n                    delete style.enable;\n                }\n            }\n            if (style.disabled) {\n                this._hasDisabledCells = true;\n            }\n        })((prop, target) => {\n            let val = data[prop];\n            if (val === undefined) {\n                val = defStyle[prop];\n            }\n            if (val !== undefined) {\n                style[target || prop] = val;\n                return true;\n            }\n        });\n\n        const columns = this.options.columns || [];\n\n        const column = columns[cellIndex];\n        let type = typeof value;\n\n        if (column && column.autoWidth && (!data.colSpan || data.colSpan === 1)) {\n            let displayValue = value;\n\n            // XXX: let's not bring kendo.toString in only for this.\n            //      better wait until the spreadsheet engine is available as a separate\n            //      component, then we can use a real Excel-like formatter.\n            //\n            if (type === \"number\") {\n                // kendo.toString will not behave exactly like the Excel format\n                // Still, it's the best we have available for estimating the character count.\n                displayValue = IntlService.toString(value, data.format);\n            }\n\n            column.width = Math.max(column.width || 0, String(displayValue).length);\n        }\n\n        if (type === \"string\") {\n            value = stripFunnyChars(value);\n            value = this._lookupString(value);\n            type = \"s\";\n        } else if (type === \"number\") {\n            type = \"n\";\n        } else if (type === \"boolean\") {\n            type = \"b\";\n            value = Number(value);\n        } else if (value && value.getTime) {\n            type = null;\n            value = dateToSerial(value);\n            if (!style.format) {\n                style.format = \"mm-dd-yy\";\n            }\n        } else {\n            type = null;\n            value = null;\n        }\n\n        style = this._lookupStyle(style);\n\n        const cellName = ref(rowIndex, cellIndex);\n\n        if (data.validation) {\n            this._addValidation(data.validation, cellName);\n        }\n\n        if (data.comment) {\n            let anchor = [\n                cellIndex + 1,  // start column\n                15,             // start column offset\n                rowIndex,       // start row\n                10,             // start row offset\n                cellIndex + 3,  // end column\n                15,             // end column offset\n                rowIndex + 3,   // end row\n                4               // end row offset\n            ];\n            this._comments.push({\n                ref    : cellName,\n                text   : data.comment,\n                row    : rowIndex,\n                col    : cellIndex,\n                anchor : anchor.join(\", \")\n            });\n        }\n\n        return {\n            value: value,\n            formula: data.formula,\n            type: type,\n            style: style,\n            ref: cellName\n        };\n    }\n\n    _addValidation(v, ref) {\n        const tmp = {\n            showErrorMessage : v.type === \"reject\" ? 1 : 0,\n            formula1         : v.from,\n            formula2         : v.to,\n            type             : MAP_EXCEL_TYPE[v.dataType] || v.dataType,\n            operator         : MAP_EXCEL_OPERATOR[v.comparerType] || v.comparerType,\n            allowBlank       : v.allowNulls ? 1 : 0,\n            showDropDown     : v.showButton ? 0 : 1, // LOL, Excel!\n            error            : v.messageTemplate,\n            errorTitle       : v.titleTemplate\n        };\n        const json = JSON.stringify(tmp);\n        if (!this._validations[json]) {\n            this._validations[json] = tmp;\n            tmp.sqref = [];\n        }\n        this._validations[json].sqref.push(ref);\n    }\n\n    _getLastRow() {\n        return countData(this.options.rows);\n    }\n\n    _getLastCol() {\n        let last = 0;\n        this.options.rows.forEach(function(row) {\n            if (row.cells) {\n                last = Math.max(last, countData(row.cells));\n            }\n        });\n        return last;\n    }\n}\n\nfunction countData(data) {\n    let last = data.length;\n    data.forEach(function(el) {\n        if (el.index && el.index >= last) {\n            last = el.index + 1;\n        }\n    });\n    return last;\n}\n\nconst MAP_EXCEL_OPERATOR = {\n    // includes only what differs; key is our operator, value is Excel\n    // operator.\n    greaterThanOrEqualTo : \"greaterThanOrEqual\",\n    lessThanOrEqualTo    : \"lessThanOrEqual\"\n};\n\nconst MAP_EXCEL_TYPE = {\n    // eslint-disable-next-line id-denylist\n    number: \"decimal\"\n};\n\nconst defaultFormats = {\n    \"General\": 0,\n    \"0\": 1,\n    \"0.00\": 2,\n    \"#,##0\": 3,\n    \"#,##0.00\": 4,\n    \"0%\": 9,\n    \"0.00%\": 10,\n    \"0.00E+00\": 11,\n    \"# ?/?\": 12,\n    \"# ??/??\": 13,\n    \"mm-dd-yy\": 14,\n    \"d-mmm-yy\": 15,\n    \"d-mmm\": 16,\n    \"mmm-yy\": 17,\n    \"h:mm AM/PM\": 18,\n    \"h:mm:ss AM/PM\": 19,\n    \"h:mm\": 20,\n    \"h:mm:ss\": 21,\n    \"m/d/yy h:mm\": 22,\n    \"#,##0 ;(#,##0)\": 37,\n    \"#,##0 ;[Red](#,##0)\": 38,\n    \"#,##0.00;(#,##0.00)\": 39,\n    \"#,##0.00;[Red](#,##0.00)\": 40,\n    \"mm:ss\": 45,\n    \"[h]:mm:ss\": 46,\n    \"mmss.0\": 47,\n    \"##0.0E+0\": 48,\n    \"@\": 49,\n    \"[$-404]e/m/d\": 27,\n    \"m/d/yy\": 30,\n    \"t0\": 59,\n    \"t0.00\": 60,\n    \"t#,##0\": 61,\n    \"t#,##0.00\": 62,\n    \"t0%\": 67,\n    \"t0.00%\": 68,\n    \"t# ?/?\": 69,\n    \"t# ??/??\": 70\n};\n\nfunction maybeRGB(value) {\n    function hex(val) {\n        let x = parseInt(val, 10).toString(16);\n        return x.length < 2 ? \"0\" + x : x;\n    }\n\n    let m = /^rgba?\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*([0-9.]+)\\s*)?\\)/i.exec(value.trim());\n    if (m) {\n        let opacity = (m[4] ? parseFloat(m[4]) : 1) * 255 | 0;\n        return \"#\" + hex(opacity) + hex(m[1]) + hex(m[2]) + hex(m[3]);\n    }\n    return value;\n}\n\nfunction convertColor(value) {\n    let color = maybeRGB(value);\n    if (color.length < 6) {\n        color = color.replace(/(\\w)/g, function($0, $1) {\n            return $1 + $1;\n        });\n    }\n\n    color = color.substring(1).toUpperCase();\n\n    if (color.length < 8) {\n        color = \"FF\" + color;\n    }\n\n    return color;\n}\n\nclass Workbook {\n\n    constructor(options) {\n        this.options = options || {};\n        this._strings = {\n            indexes: {},\n            count: 0,\n            uniqueCount: 0\n        };\n        this._styles = [];\n        this._borders = [];\n        this._images = this.options.images;\n        this._imgId = 0;\n\n        this._sheets = map(this.options.sheets || [], (options, i) => {\n            options.defaults = this.options;\n            options.sheetIndex = i + 1;\n            return new Worksheet(options, this._strings, this._styles, this._borders);\n        });\n    }\n\n    imageFilename(mimeType) {\n        const id = ++this._imgId;\n        switch (mimeType) {\n          case \"image/jpg\":\n          case \"image/jpeg\":\n            return `image${id}.jpg`;\n          case \"image/png\":\n            return `image${id}.png`;\n          case \"image/gif\":\n            return `image${id}.gif`;\n          default:\n            return `image${id}.bin`; // XXX: anything better to do here?\n        }\n    }\n\n    toZIP() {\n        const zip = createZip();\n\n        const docProps = zip.folder(\"docProps\");\n\n        docProps.file(\"core.xml\", CORE({\n            creator: this.options.creator || \"Kendo UI\",\n            lastModifiedBy: this.options.creator || \"Kendo UI\",\n            created: this.options.date || new Date().toJSON(),\n            modified: this.options.date || new Date().toJSON()\n        }));\n\n        const sheetCount = this._sheets.length;\n\n        docProps.file(\"app.xml\", APP({ sheets: this._sheets }));\n\n        const rels = zip.folder(\"_rels\");\n        rels.file(\".rels\", RELS);\n\n        const xl = zip.folder(\"xl\");\n\n        const xlRels = xl.folder(\"_rels\");\n        xlRels.file(\"workbook.xml.rels\", WORKBOOK_RELS({ count: sheetCount }));\n\n        if (this._images) {\n            const media = xl.folder(\"media\");\n            Object.keys(this._images).forEach(id => {\n                const img = this._images[id];\n                const filename = this.imageFilename(img.type);\n                media.file(filename, img.data);\n                img.target = `../media/${filename}`;\n            });\n        }\n\n        const sheetIds = {};\n        xl.file(\"workbook.xml\", WORKBOOK({\n            sheets: this._sheets,\n            filterNames: map(this._sheets, function(sheet, index) {\n                const options = sheet.options;\n                const sheetName = (options.name || options.title || \"Sheet\" + (index + 1));\n                sheetIds[sheetName.toLowerCase()] = index;\n                const filter = options.filter;\n                if (filter) {\n                    if (filter.ref) {\n                        // spreadsheet provides `ref`\n                        let a = filter.ref.split(\":\");\n                        let from = parseRef(a[0]);\n                        let to = parseRef(a[1]);\n                        return {\n                            localSheetId: index,\n                            name: sheetName,\n                            from: $ref(from.row, from.col),\n                            to: $ref(to.row, to.col)\n                        };\n                    } else if (typeof filter.from !== \"undefined\" && typeof filter.to !== \"undefined\") {\n                        // grid does this\n                        return {\n                            localSheetId: index,\n                            name: sheetName,\n                            from: $ref(filterRowIndex(options), filter.from),\n                            to: $ref(filterRowIndex(options), filter.to)\n                        };\n                    }\n                }\n            }),\n            userNames: map(this.options.names || [], function(def) {\n                return {\n                    name: def.localName,\n                    localSheetId: def.sheet ? sheetIds[def.sheet.toLowerCase()] : null,\n                    value: def.value,\n                    hidden: def.hidden\n                };\n            })\n        }));\n\n        const worksheets = xl.folder(\"worksheets\");\n        const drawings = xl.folder(\"drawings\");\n        const drawingsRels = drawings.folder(\"_rels\");\n        const sheetRels = worksheets.folder(\"_rels\");\n        const commentFiles = [];\n        const drawingFiles = [];\n        let hasDisabledCells = false;\n\n        for (let idx = 0; idx < sheetCount; idx++) {\n            const sheet = this._sheets[idx];\n            const sheetName = `sheet${idx + 1}.xml`;\n            const sheetXML = sheet.toXML(idx); // must be called before relsToXML\n            const relsXML = sheet.relsToXML();\n            const commentsXML = sheet.commentsXML();\n            const legacyDrawing = sheet.legacyDrawing();\n            const drawingsXML = sheet.drawingsXML(this._images);\n\n            if (sheet._hasDisabledCells) {\n                hasDisabledCells = true;\n            }\n\n            if (relsXML) {\n                sheetRels.file(sheetName + \".rels\", relsXML);\n            }\n            if (commentsXML) {\n                let name = `comments${sheet.options.sheetIndex}.xml`;\n                xl.file(name, commentsXML);\n                commentFiles.push(name);\n            }\n            if (legacyDrawing) {\n                drawings.file(`vmlDrawing${sheet.options.sheetIndex}.vml`, legacyDrawing);\n            }\n            if (drawingsXML) {\n                let name = `drawing${sheet.options.sheetIndex}.xml`;\n                drawings.file(name, drawingsXML.main);\n                drawingsRels.file(`${name}.rels`, drawingsXML.rels);\n                drawingFiles.push(name);\n            }\n\n            worksheets.file(sheetName, sheetXML);\n        }\n\n        const borders = map(this._borders, parseJSON);\n\n        const styles = map(this._styles, parseJSON);\n\n        const hasFont = function(style) {\n            return style.underline || style.bold || style.italic || style.color || style.fontFamily || style.fontSize;\n        };\n\n        const convertFontSize = function(value) {\n            let fontInPx = Number(value);\n            let fontInPt;\n\n            if (fontInPx) {\n                fontInPt = fontInPx * 3 / 4;\n            }\n\n            return fontInPt;\n        };\n\n        const fonts = map(styles, function(style) {\n            if (style.fontSize) {\n                style.fontSize = convertFontSize(style.fontSize);\n            }\n\n            if (style.color) {\n                style.color = convertColor(style.color);\n            }\n\n            if (hasFont(style)) {\n                return style;\n            }\n        });\n\n        const formats = map(styles, function(style) {\n            if (style.format && defaultFormats[style.format] === undefined) {\n                return style;\n            }\n        });\n\n        const fills = map(styles, function(style) {\n            if (style.background) {\n                style.background = convertColor(style.background);\n                return style;\n            }\n        });\n\n        xl.file(\"styles.xml\", STYLES({\n            fonts: fonts,\n            fills: fills,\n            formats: formats,\n            borders: borders,\n            styles: map(styles, function(style) {\n                const result = {};\n\n                if (hasFont(style)) {\n                    result.fontId = indexOf(style, fonts) + 1;\n                }\n\n                if (style.background) {\n                    result.fillId = indexOf(style, fills) + 2;\n                }\n\n                result.textAlign = style.textAlign;\n                result.indent = style.indent;\n                result.verticalAlign = style.verticalAlign;\n                result.wrap = style.wrap;\n                result.borderId = style.borderId;\n\n                if (style.format) {\n                    if (defaultFormats[style.format] !== undefined) {\n                        result.numFmtId = defaultFormats[style.format];\n                    } else {\n                        result.numFmtId = 165 + indexOf(style, formats);\n                    }\n                }\n\n                if (hasDisabledCells) {\n                    result.disabled = !!style.disabled;\n                }\n\n                return result;\n            })\n        }));\n\n        xl.file(\"sharedStrings.xml\", SHARED_STRINGS(this._strings));\n\n        zip.file(\"[Content_Types].xml\", CONTENT_TYPES({\n            sheetCount: sheetCount,\n            commentFiles: commentFiles,\n            drawingFiles: drawingFiles\n        }));\n\n        return zip;\n    }\n\n    toDataURL() {\n        const zip = this.toZIP();\n\n        return zip.generateAsync ? zip.generateAsync(DATA_URL_OPTIONS).then(toDataURI) : toDataURI(zip.generate(DATA_URL_OPTIONS));\n    }\n\n    toBlob() {\n        const zip = this.toZIP();\n        if (zip.generateAsync) {\n            return zip.generateAsync(BLOB_OPTIONS);\n        }\n        return new Blob([ zip.generate(ARRAYBUFFER_OPTIONS) ], { type: MIME_TYPE });\n    }\n}\n\nfunction borderStyle(width) {\n    let alias = \"thin\";\n\n    if (width === 2) {\n        alias = \"medium\";\n    } else if (width === 3) {\n        alias = \"thick\";\n    }\n\n    return alias;\n}\n\nfunction borderSideTemplate(name, style) {\n    let result = \"\";\n\n    if (style) {\n        result += \"<\" + name + \" style=\\\"\" + borderStyle(style.size) + \"\\\">\";\n        if (style.color) {\n            result += \"<color rgb=\\\"\" + convertColor(style.color) + \"\\\"/>\";\n        }\n        result += \"</\" + name + \">\";\n    }\n\n    return result;\n}\n\nfunction borderTemplate(border) {\n    let diag = border.diagonal ? border.diagonal.type : 0;\n    return `<border ${diag & 2 ? 'diagonalUp=\"true\"' : ''} ${diag & 1 ? 'diagonalDown=\"true\"' : ''}>\n      ${borderSideTemplate(\"left\", border.left)}\n      ${borderSideTemplate(\"right\", border.right)}\n      ${borderSideTemplate(\"top\", border.top)}\n      ${borderSideTemplate(\"bottom\", border.bottom)}\n      ${borderSideTemplate(\"diagonal\", border.diagonal)}\n    </border>`;\n}\n\nconst EMPTY_CELL = {};\nfunction inflate(rows, mergedCells) {\n    const rowData = [];\n    const rowsByIndex = [];\n\n    indexRows(rows, function(row, index) {\n        const data = {\n            _source: row,\n            index: index,\n            height: row.height,\n            level: row.level,\n            cells: []\n        };\n\n        rowData.push(data);\n        rowsByIndex[index] = data;\n    });\n\n    const sorted = sortByIndex(rowData).slice(0);\n    const ctx = {\n        rowData: rowData,\n        rowsByIndex: rowsByIndex,\n        mergedCells: mergedCells\n    };\n\n    for (let i = 0; i < sorted.length; i++) {\n        fillCells(sorted[i], ctx);\n        delete sorted[i]._source;\n    }\n\n    return sortByIndex(rowData);\n}\n\nfunction indexRows(rows, callback) {\n    for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        if (!row) {\n            continue;\n        }\n\n        let index = row.index;\n        if (typeof index !== \"number\") {\n            index = i;\n        }\n\n        callback(row, index);\n    }\n}\n\nfunction sortByIndex(items) {\n    return items.sort(function(a, b) {\n        return a.index - b.index;\n    });\n}\n\nfunction pushUnique(array, el) {\n    if (array.indexOf(el) < 0) {\n        array.push(el);\n    }\n}\n\nfunction getSpan(mergedCells, ref) {\n    for (let i = 0; i < mergedCells.length; ++i) {\n        const range = mergedCells[i];\n        const a = range.split(\":\");\n        let topLeft = a[0];\n        if (topLeft === ref) {\n            let bottomRight = a[1];\n            topLeft = parseRef(topLeft);\n            bottomRight = parseRef(bottomRight);\n            return {\n                rowSpan: bottomRight.row - topLeft.row + 1,\n                colSpan: bottomRight.col - topLeft.col + 1\n            };\n        }\n    }\n}\n\nfunction parseRef(ref) {\n    function getcol(str) {\n        let upperStr = str.toUpperCase();\n        let col = 0;\n        for (let i = 0; i < upperStr.length; ++i) {\n            col = col * 26 + upperStr.charCodeAt(i) - 64;\n        }\n        return col - 1;\n    }\n\n    function getrow(str) {\n        return parseInt(str, 10) - 1;\n    }\n\n    const m = /^([a-z]+)(\\d+)$/i.exec(ref);\n    return {\n        row: getrow(m[2]),\n        col: getcol(m[1])\n    };\n}\n\nfunction pixelsToExcel(px) {\n    return Math.round(px * 9525);\n}\n\nfunction fillCells(data, ctx) {\n    const row = data._source;\n    const rowIndex = data.index;\n    const cells = row.cells;\n    const cellData = data.cells;\n\n    if (!cells) {\n        return;\n    }\n\n    for (let i = 0; i < cells.length; i++) {\n        const cell = cells[i] || EMPTY_CELL;\n\n        let rowSpan = cell.rowSpan || 1;\n        let colSpan = cell.colSpan || 1;\n\n        const cellIndex = insertCell(cellData, cell);\n        const topLeftRef = ref(rowIndex, cellIndex);\n\n        if (rowSpan === 1 && colSpan === 1) {\n            // could still be merged: the spreadsheet does not send\n            // rowSpan/colSpan, but mergedCells is already populated.\n            // https://github.com/telerik/kendo-ui-core/issues/2401\n            const tmp = getSpan(ctx.mergedCells, topLeftRef);\n            if (tmp) {\n                colSpan = tmp.colSpan;\n                rowSpan = tmp.rowSpan;\n            }\n        }\n\n        spanCell(cell, cellData, cellIndex, colSpan);\n\n        if (rowSpan > 1 || colSpan > 1) {\n            pushUnique(ctx.mergedCells,\n                       topLeftRef + \":\" + ref(rowIndex + rowSpan - 1,\n                                              cellIndex + colSpan - 1));\n        }\n\n        if (rowSpan > 1) {\n            for (let ri = rowIndex + 1; ri < rowIndex + rowSpan; ri++) {\n                let nextRow = ctx.rowsByIndex[ri];\n                if (!nextRow) {\n                    nextRow = ctx.rowsByIndex[ri] = { index: ri, cells: [] };\n                    ctx.rowData.push(nextRow);\n                }\n\n                spanCell(cell, nextRow.cells, cellIndex - 1, colSpan + 1);\n            }\n        }\n    }\n}\n\nfunction insertCell(data, cell) {\n    let index;\n\n    if (typeof cell.index === \"number\") {\n        index = cell.index;\n        insertCellAt(data, cell, cell.index);\n    } else {\n        index = appendCell(data, cell);\n    }\n\n    return index;\n}\n\nfunction insertCellAt(data, cell, index) {\n    data[index] = cell;\n}\n\nfunction appendCell(data, cell) {\n    let index = data.length;\n\n    for (let i = 0; i < data.length + 1; i++) {\n        if (!data[i]) {\n            data[i] = cell;\n            index = i;\n            break;\n        }\n    }\n\n    return index;\n}\n\nfunction spanCell(cell, row, startIndex, colSpan) {\n    for (let i = 1; i < colSpan; i++) {\n        const tmp = {\n            borderTop    : cell.borderTop,\n            borderRight  : cell.borderRight,\n            borderBottom : cell.borderBottom,\n            borderLeft   : cell.borderLeft\n        };\n        insertCellAt(row, tmp, startIndex + i);\n    }\n}\n\nconst SPREADSHEET_FILTERS = ({ ref, columns, generators }) => `\n<autoFilter ref=\"${ref}\">\n  ${foreach(columns, (col) => `\n    <filterColumn colId=\"${col.index}\">\n      ${generators[col.filter](col)}\n    </filterColumn>\n  `)}\n</autoFilter>`;\n\nconst SPREADSHEET_CUSTOM_FILTER = ({ logic, criteria }) => `\n<customFilters ${logic === 'and' ? 'and=\"1\"' : ''}>\n${foreach(criteria, (f) => {\n    let op = spreadsheetFilters.customOperator(f);\n    let val = spreadsheetFilters.customValue(f);\n    return `<customFilter ${op ? `operator=\"${op}\"` : ''} val=\"${val}\"/>`;\n})}\n</customFilters>`;\n\nconst SPREADSHEET_DYNAMIC_FILTER = ({ type }) =>\n`<dynamicFilter type=\"${spreadsheetFilters.dynamicFilterType(type)}\" />`;\n\nconst SPREADSHEET_TOP_FILTER = ({ type, value }) =>\n`<top10 percent=\"${/percent$/i.test(type) ? 1 : 0}\"\n       top=\"${/^top/i.test(type) ? 1 : 0}\"\n       val=\"${value}\" />`;\n\nconst SPREADSHEET_VALUE_FILTER = ({ blanks, values }) =>\n  `<filters ${blanks ? 'blank=\"1\"' : ''}>\n    ${foreach(values, (value) => `\n      <filter val=\"${value}\" />`)}\n  </filters>`;\n\nfunction spreadsheetFilters(filter) {\n    return SPREADSHEET_FILTERS({\n        ref: filter.ref,\n        columns: filter.columns,\n        generators: {\n            custom  : SPREADSHEET_CUSTOM_FILTER,\n            dynamic : SPREADSHEET_DYNAMIC_FILTER,\n            top     : SPREADSHEET_TOP_FILTER,\n            value   : SPREADSHEET_VALUE_FILTER\n        }\n    });\n}\n\nspreadsheetFilters.customOperator = function(f) {\n    return {\n        eq  : \"equal\",\n        gt  : \"greaterThan\",\n        gte : \"greaterThanOrEqual\",\n        lt  : \"lessThan\",\n        lte : \"lessThanOrEqual\",\n        ne  : \"notEqual\",\n\n        // These are not in the spec, but seems to be how Excel does\n        // it (see customValue below).  For the non-negated versions,\n        // the operator attribute is missing completely.\n        doesnotstartwith: \"notEqual\",\n        doesnotendwith: \"notEqual\",\n        doesnotcontain: \"notEqual\",\n        doesnotmatch: \"notEqual\"\n    }[f.operator.toLowerCase()];\n};\n\nfunction quoteSheet(name) {\n    if (/^\\'/.test(name)) { // assume already quoted, the Spreadsheet does it.\n        return name;\n    }\n    if (/^[a-z_][a-z0-9_]*$/i.test(name)) {\n        return name;        // no need to quote it\n    }\n    return \"'\" + name.replace(/\\x27/g, \"\\\\'\") + \"'\";\n}\n\nspreadsheetFilters.customValue = function(f) {\n    function esc(str) {\n        return str.replace(/([*?])/g, \"~$1\");\n    }\n\n    switch (f.operator.toLowerCase()) {\n        case \"startswith\":\n        case \"doesnotstartwith\":\n            return esc(f.value) + \"*\";\n\n        case \"endswith\":\n        case \"doesnotendwith\":\n            return \"*\" + esc(f.value);\n\n        case \"contains\":\n        case \"doesnotcontain\":\n            return \"*\" + esc(f.value) + \"*\";\n\n        default:\n            return f.value;\n    }\n};\n\nspreadsheetFilters.dynamicFilterType = function(type) {\n    return {\n        quarter1  : \"Q1\",\n        quarter2  : \"Q2\",\n        quarter3  : \"Q3\",\n        quarter4  : \"Q4\",\n        january   : \"M1\",\n        february  : \"M2\",\n        march     : \"M3\",\n        april     : \"M4\",\n        may       : \"M5\",\n        june      : \"M6\",\n        july      : \"M7\",\n        august    : \"M8\",\n        september : \"M9\",\n        october   : \"M10\",\n        november  : \"M11\",\n        december  : \"M12\"\n    }[type.toLowerCase()] || type;\n};\n\nexport {\n    Workbook,\n    Worksheet\n};\n"],"names":["let","current","const","this","name"],"mappings":"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"}