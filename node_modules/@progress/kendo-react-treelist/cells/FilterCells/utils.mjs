/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import { filterClearButton as l, messages as i, filterContainsOperator as s, filterNotContainsOperator as x, filterEqOperator as e, filterNotEqOperator as r, filterStartsWithOperator as f, filterEndsWithOperator as O, filterIsNullOperator as o, filterIsNotNullOperator as a, filterIsEmptyOperator as u, filterIsNotEmptyOperator as g, filterGteOperator as q, filterGtOperator as c, filterLteOperator as m, filterLtOperator as E, filterAfterOrEqualOperator as F, filterAfterOperator as I, filterBeforeOperator as N, filterBeforeOrEqualOperator as B, filterBooleanAll as d, filterIsTrue as h, filterIsFalse as y } from "../../messages/index.mjs";
const A = [
  { text: s, operator: "contains" },
  { text: x, operator: "doesnotcontain" },
  { text: e, operator: "eq" },
  { text: r, operator: "neq" },
  { text: f, operator: "startswith" },
  { text: O, operator: "endswith" },
  { text: o, operator: "isnull" },
  { text: a, operator: "isnotnull" },
  { text: u, operator: "isempty" },
  { text: g, operator: "isnotempty" }
], C = [
  { text: e, operator: "eq" },
  { text: r, operator: "neq" },
  { text: q, operator: "gte" },
  { text: c, operator: "gt" },
  { text: m, operator: "lte" },
  { text: E, operator: "lt" },
  { text: o, operator: "isnull" },
  { text: a, operator: "isnotnull" }
], S = [
  { text: e, operator: "eq" },
  { text: r, operator: "neq" },
  { text: F, operator: "gte" },
  { text: I, operator: "gt" },
  { text: N, operator: "lt" },
  { text: B, operator: "lte" },
  { text: o, operator: "isnull" },
  { text: a, operator: "isnotnull" }
], w = [
  { text: d, operator: "" },
  { text: h, operator: !0 },
  { text: y, operator: !1 }
];
function G(p, n) {
  return {
    clearButtonTitle: p.toLanguageString(l, i[l]),
    operators: n.map((t) => ({
      text: p.toLanguageString(t.text, i[t.text]),
      operator: t.operator
    }))
  };
}
export {
  w as booleanFilterValues,
  S as dateFilterOperators,
  G as localizeFilter,
  C as numericFilterOperators,
  A as textFilterOperators
};
